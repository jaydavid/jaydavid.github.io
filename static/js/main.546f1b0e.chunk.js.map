{"version":3,"sources":["Header/HeaderBanner.tsx","Graphics/ScoreDistribution.tsx","Data/Sections.ts","Header/ReportHeader.tsx","Data/Overall.ts","Summary/OverallSummary.tsx","Summary/SectionSummary.tsx","Summary/Summary.tsx","Data/Text.ts","Data/Skills.ts","Data/Items.ts","Data/Color.ts","Section/ItemReview.tsx","Section/ItemsTable.tsx","Data/Highlights.ts","Section/Highlights.tsx","Graphics/ContentAreaBarGraph.tsx","Section/SkillsBreakdownTable.tsx","Section/SkillsBreakdown.tsx","Section/SectionDetails.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","root","background","position","marginBottom","content","left","top","width","height","borderLeft","borderRight","borderTop","clear","HeaderBanner","children","classes","Slide","direction","in","timeout","Box","className","Container","ScoreDistribution","margin","bottom","right","leftLabel","rightLabel","score","percentage","textColor","textSize","contentHeight","contentWidth","calcY","x","Math","E","sqrt","PI","f","points","Array","map","_","getPercentageX","p","useState","renderedPercentage","setRenderedPercentage","useEffect","setTimeout","min","clearTimeout","viewBox","y","fontSize","fill","textAnchor","transform","d","filter","i","join","stroke","strokeWidth","cx","cy","r","x1","y1","x2","y2","strokeDasharray","SectionResults","id","name","minScaledScore","maxScaledScore","scaledScore","totalQuestions","questionsCorrect","incomplete","averageQuestionTimeInSeconds","flaggedCorrect","flaggedIncorrect","header","color","paddingBottom","textAlign","headerTitle","padding","scoreComponent","maxWidth","marginLeft","marginRight","verticalStack","display","flexDirection","horizontalStack","even","justifyContent","spread","overallLabel","navButton","cursor","textDecoration","ReportHeader","onNavigate","Typography","variant","section","toString","onClick","OverallDataKey","OverallResults","percent","timeSpentInSeconds","dateAttempted","detailsGrid","detailCard","verticalAlign","minWidth","scoreCurve","marginTop","OverallSummary","Grid","container","justify","alignItems","item","Card","CardContent","moment","utc","duration","asMilliseconds","format","Date","toLocaleDateString","SectionSummary","Table","TableHead","TableRow","TableCell","TableBody","Link","Summary","lorem","LoremIpsum","sentencesPerParagraph","max","wordsPerSentence","Identifier","length","result","characters","charactersLength","charAt","floor","random","Sentence","number","generateSentences","formatted","text","bold","italic","underline","spans","words","split","index","spanLength","spanStart","spanEnd","span","slice","roll","push","FormattedSentence","FormattedParagraph","generateParagraphs","SkillGroup","label","description","skills","totalItems","reduce","total","skill","items","this","ceil","SkillData","correct","Skill","SkillsGroups","ItemData","timeInSeconds","flagged","preview","correctAnswer","answer","answerRationales","substr","round","answers","correctAnswerIndex","createItems","count","ItemResults","ColorCombo","main","darker","colorCombos","GetColor","code","c","charCodeAt","val","fullSize","maxHeight","overflow","itemContainer","border","borderRadius","overflowX","outerContainer","innerContainer","infoContainer","paddingRight","contentContainer","rationaleContainer","appBar","navButtonContainer","title","paddingTop","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","answerTable","boldedRationale","fontWeight","userSelect","ItemReview","open","onClose","itemNumber","canNext","canPrevious","onNext","onPrevious","onFirst","onLast","setDirection","Dialog","paper","AppBar","Toolbar","IconButton","edge","undefined","aria-label","disabled","dangerouslySetInnerHTML","__html","type","rationale","Fade","colSpan","spacing","Tooltip","style","centered","ItemsTable","sectionId","itemData","reviewItem","setReviewItem","setItems","correctnessFilter","setCorrectnessFilter","flaggedFilter","setFlaggedFilter","getItemData","newFilter","ItemHighlight","highlights","createHighlight","maxItemNumber","paragraphRange","sentenceRange","highlightsRange","generateHighlight","createItemHighlights","maxItem","sort","a","b","CandidateHighlights","itemHighlight","itemHighlightHeader","highlightContent","previewButton","float","Highlights","itemHighlights","h","reviewIndex","setReviewIndex","Paper","elevation","highlight","ContentAreaBarGraph","segmentMargin","segmentWidth","segmentContentWidth","segmentHeight","acronym","review","SkillsBreakdownTable","onReview","skillIndex","skillsGroup","graphContainer","borderBottom","mainLabel","SkillsBreakdown","reviewIndexStart","setReviewIndexStart","reviewIndexEnd","setReviewIndexEnd","startIndex","numberOfItems","group","backNavigation","SectionDetails","React","tab","setTab","Button","Tabs","value","onChange","event","newValue","Tab","App","viewing","setViewing","to","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.546f1b0e.chunk.js","sourcesContent":["import { Box, Container, makeStyles, Slide } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: \"#402B56\",\r\n    position: \"relative\",\r\n    marginBottom: 55,\r\n    \"&::after\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      left: \"calc(50% - 100px)\",\r\n      top: \"100%\",\r\n      width: 0,\r\n      height: 0,\r\n      borderLeft: \"100px solid transparent\",\r\n      borderRight: \"100px solid transparent\",\r\n      borderTop: \"50px solid #402b56\",\r\n      clear: \"both\",\r\n    },\r\n  },\r\n});\r\n\r\nexport const HeaderBanner: FunctionComponent = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide direction=\"down\" in={true} timeout={500}>\r\n      <Box className={classes.root}>\r\n        <Container>\r\n          <Box>{children}</Box>\r\n        </Container>\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport interface ScoreDistributionProperties {\r\n  height: number;\r\n  width: number;\r\n  margin?: { top: number; left: number; bottom: number; right: number };\r\n  leftLabel?: string;\r\n  rightLabel?: string;\r\n  score?: string;\r\n  percentage: number;\r\n  textColor?: string;\r\n  textSize?: string;\r\n}\r\n\r\nexport const ScoreDistribution = ({\r\n  height,\r\n  width,\r\n  margin = { top: 10, left: 10, bottom: 10, right: 10 },\r\n  leftLabel = \"\",\r\n  rightLabel = \"\",\r\n  score = \"\",\r\n  percentage,\r\n  textColor = \"black\",\r\n  textSize = \"large\",\r\n}: ScoreDistributionProperties) => {\r\n  const contentHeight = height - (margin.top + margin.bottom);\r\n  const contentWidth = width - (margin.left + margin.right);\r\n\r\n  const mean = 0;\r\n  const stDev = 1;\r\n  const scaleMin = -2.75;\r\n  const scaleMax = 2.75;\r\n\r\n  const f = (x: number) =>\r\n    Math.E ** -((x - mean) ** 2 / (2 * stDev ** 2)) /\r\n    (stDev * Math.sqrt(2 * Math.PI));\r\n\r\n  const scale = (i: number) =>\r\n    (i * (scaleMax - scaleMin)) / contentWidth + scaleMin;\r\n\r\n  const calcY = (x: number) => contentHeight - f(scale(x)) * contentHeight * 2;\r\n\r\n  const points = [...new Array(contentWidth)].map((_, x) => calcY(x));\r\n\r\n  const getPercentageX = (p: number) => contentWidth * (p / 100);\r\n  const [renderedPercentage, setRenderedPercentage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let timeout = setTimeout(\r\n      () => setRenderedPercentage(Math.min(renderedPercentage + 1, percentage)),\r\n      percentage - renderedPercentage > 10 ? 10 : 20\r\n    );\r\n    return () => clearTimeout(timeout);\r\n  }, [percentage, renderedPercentage]);\r\n\r\n  return (\r\n    <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\r\n      <text x={5} y={height - 5} fontSize={textSize} fill={textColor}>\r\n        {leftLabel}\r\n      </text>\r\n      <text\r\n        x={width - 5}\r\n        y={height - 5}\r\n        fontSize={textSize}\r\n        textAnchor=\"end\"\r\n        fill={textColor}\r\n      >\r\n        {rightLabel}\r\n      </text>\r\n      <g transform={`translate(${margin.left} ${margin.top})`}>\r\n        <path\r\n          d={`M 0 0 ${points\r\n            .filter((_, i) => i < getPercentageX(renderedPercentage))\r\n            .map((p, i) => `L ${i} ${p}`)\r\n            .join(\" \")} L ${getPercentageX(renderedPercentage)} ${calcY(\r\n            getPercentageX(renderedPercentage)\r\n          )} L ${getPercentageX(\r\n            renderedPercentage\r\n          )} ${contentHeight} L 0 ${contentHeight}`}\r\n          stroke=\"none\"\r\n          fill=\"#F8B332\"\r\n        />\r\n        <path\r\n          d={`M 0 ${points[0]} ${points\r\n            .map((p, i) => `L ${i} ${p}`)\r\n            .join(\" \")}`}\r\n          fill=\"none\"\r\n          stroke=\"black\"\r\n          strokeWidth={2}\r\n        />\r\n        <circle\r\n          cx={getPercentageX(renderedPercentage)}\r\n          cy={calcY(getPercentageX(renderedPercentage)) - 5}\r\n          r={5}\r\n          fill=\"red\"\r\n          stroke=\"none\"\r\n        />\r\n        <line\r\n          x1={getPercentageX(renderedPercentage)}\r\n          y1={contentHeight}\r\n          x2={getPercentageX(renderedPercentage)}\r\n          y2={calcY(getPercentageX(renderedPercentage))}\r\n          stroke=\"red\"\r\n          strokeDasharray={2}\r\n        />\r\n        {renderedPercentage >= percentage && (\r\n          <text\r\n            x={getPercentageX(renderedPercentage)}\r\n            y={calcY(getPercentageX(renderedPercentage)) - 15}\r\n            textAnchor=\"middle\"\r\n            fontSize={textSize}\r\n            fill={textColor}\r\n          >\r\n            {score}\r\n          </text>\r\n        )}\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","export interface SectionData {\r\n  id: string;\r\n  name: string;\r\n  minScaledScore: number;\r\n  maxScaledScore: number;\r\n  scaledScore: number;\r\n  percentage: number;\r\n  totalQuestions: number;\r\n  questionsCorrect: number;\r\n  incomplete: number;\r\n  averageQuestionTimeInSeconds: number;\r\n  flaggedCorrect: number;\r\n  flaggedIncorrect: number;\r\n}\r\n\r\nexport const SectionResults: Array<SectionData> = [\r\n  {\r\n    id: \"CPFBS\",\r\n    name: \"Chemical and Physical Foundations of Biological Systems\",\r\n    minScaledScore: 118,\r\n    maxScaledScore: 132,\r\n    scaledScore: 127,\r\n    percentage: 85,\r\n    totalQuestions: 59,\r\n    questionsCorrect: 43,\r\n    incomplete: 2,\r\n    averageQuestionTimeInSeconds: 52,\r\n    flaggedCorrect: 15,\r\n    flaggedIncorrect: 3,\r\n  },\r\n  {\r\n    id: \"CARS\",\r\n    name: \"Critical Analysis and Reasoning Skills\",\r\n    minScaledScore: 118,\r\n    maxScaledScore: 132,\r\n    scaledScore: 125,\r\n    percentage: 50,\r\n    totalQuestions: 53,\r\n    questionsCorrect: 30,\r\n    incomplete: 10,\r\n    averageQuestionTimeInSeconds: 72,\r\n    flaggedCorrect: 5,\r\n    flaggedIncorrect: 12,\r\n  },\r\n  {\r\n    id: \"BBFLS\",\r\n    name: \"Biological and Biomechanical Foundations of Living Systems\",\r\n    minScaledScore: 118,\r\n    maxScaledScore: 132,\r\n    scaledScore: 128,\r\n    percentage: 83,\r\n    totalQuestions: 59,\r\n    questionsCorrect: 48,\r\n    incomplete: 0,\r\n    averageQuestionTimeInSeconds: 81,\r\n    flaggedCorrect: 0,\r\n    flaggedIncorrect: 1,\r\n  },\r\n  {\r\n    id: \"PSBFB\",\r\n    name: \"Psychological, Social, and Biological Foundations of Behavior\",\r\n    minScaledScore: 118,\r\n    maxScaledScore: 132,\r\n    scaledScore: 129,\r\n    percentage: 87,\r\n    totalQuestions: 59,\r\n    questionsCorrect: 49,\r\n    incomplete: 0,\r\n    averageQuestionTimeInSeconds: 43,\r\n    flaggedCorrect: 0,\r\n    flaggedIncorrect: 0,\r\n  },\r\n];\r\n","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { HeaderBanner } from \"./HeaderBanner\";\r\nimport { ScoreDistribution } from \"../Graphics/ScoreDistribution\";\r\nimport { SectionResults } from \"../Data/Sections\";\r\n\r\nconst useStyles = makeStyles({\r\n  header: {\r\n    color: \"white\",\r\n    paddingBottom: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  headerTitle: {\r\n    padding: 25,\r\n  },\r\n  scoreComponent: {\r\n    maxWidth: 250,\r\n    \"& svg\": {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  verticalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  horizontalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  even: {\r\n    justifyContent: \"space-around\",\r\n  },\r\n  spread: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n  overallLabel: {\r\n    textAlign: \"center\",\r\n  },\r\n  navButton: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface ReportHeaderProperties {\r\n  onNavigate: (to: string) => void;\r\n}\r\n\r\nexport const ReportHeader = ({ onNavigate }: ReportHeaderProperties) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <HeaderBanner>\r\n      <Box className={`${classes.header} ${classes.verticalStack}`}>\r\n        <Typography variant=\"h4\" className={classes.headerTitle}>\r\n          MCAT Practice Exam Results\r\n        </Typography>\r\n        <Box className={`${classes.horizontalStack} ${classes.even}`}>\r\n          {SectionResults.map((section) => (\r\n            <Box\r\n              key={section.id}\r\n              className={`${classes.scoreComponent} ${classes.verticalStack}`}\r\n            >\r\n              <ScoreDistribution\r\n                height={125}\r\n                width={200}\r\n                margin={{ top: 10, left: 10, bottom: 20, right: 10 }}\r\n                leftLabel={section.minScaledScore.toString()}\r\n                rightLabel={section.maxScaledScore.toString()}\r\n                score={section.scaledScore.toString()}\r\n                percentage={section.percentage}\r\n                textColor=\"white\"\r\n                textSize=\"default\"\r\n              />\r\n              <Typography\r\n                onClick={() => onNavigate(section.id)}\r\n                className={classes.navButton}\r\n              >\r\n                {section.name}\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    </HeaderBanner>\r\n  );\r\n};\r\n","export const OverallDataKey = \"summary\";\r\nexport interface OverallData {\r\n  minScaledScore: number;\r\n  maxScaledScore: number;\r\n  scaledScore: number;\r\n  percent: number;\r\n  totalQuestions: number;\r\n  questionsCorrect: number;\r\n  timeSpentInSeconds: number;\r\n  dateAttempted: number;\r\n}\r\n\r\nexport const OverallResults: OverallData = {\r\n  minScaledScore: 472,\r\n  maxScaledScore: 528,\r\n  scaledScore: 511,\r\n  percent: 82,\r\n  totalQuestions: 230,\r\n  questionsCorrect: 201,\r\n  timeSpentInSeconds: 14200,\r\n  dateAttempted: 1612293247790,\r\n};\r\n","import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Slide,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { OverallResults } from \"../Data/Overall\";\r\n\r\nimport { ScoreDistribution } from \"../Graphics/ScoreDistribution\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginBottom: 20,\r\n  },\r\n  verticalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  horizontalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  even: {\r\n    justifyContent: \"space-around\",\r\n  },\r\n  spread: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n  overallLabel: {\r\n    textAlign: \"center\",\r\n  },\r\n  detailsGrid: {\r\n    marginLeft: 25,\r\n  },\r\n  detailCard: {\r\n    textAlign: \"center\",\r\n    verticalAlign: \"middle\",\r\n    margin: 10,\r\n    minWidth: 210,\r\n  },\r\n  scoreCurve: {\r\n    marginTop: \"auto\",\r\n    marginBottom: \"auto\",\r\n  },\r\n});\r\n\r\nexport const OverallSummary = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      className={`${classes.root} ${classes.horizontalStack} ${classes.spread}`}\r\n    >\r\n      <Box className={`${classes.verticalStack} ${classes.scoreCurve}`}>\r\n        <Typography variant=\"h4\" className={classes.overallLabel}>\r\n          Overall Scaled Score\r\n        </Typography>\r\n        <ScoreDistribution\r\n          height={250}\r\n          width={500}\r\n          margin={{ top: 10, left: 10, bottom: 20, right: 10 }}\r\n          leftLabel={OverallResults.minScaledScore.toString()}\r\n          rightLabel={OverallResults.maxScaledScore.toString()}\r\n          score={OverallResults.scaledScore.toString()}\r\n          percentage={OverallResults.percent}\r\n        />\r\n      </Box>\r\n      <Slide direction=\"left\" in={true} timeout={500}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.detailsGrid}\r\n        >\r\n          <Grid item>\r\n            <Card variant=\"outlined\" className={classes.detailCard}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\">{OverallResults.percent}%</Typography>\r\n                <Typography variant=\"subtitle2\">Percentile Rank</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card variant=\"outlined\" className={classes.detailCard}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\">\r\n                  {OverallResults.questionsCorrect} of{\" \"}\r\n                  {OverallResults.totalQuestions}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">Questions Correct</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card variant=\"outlined\" className={classes.detailCard}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\">\r\n                  {moment\r\n                    .utc(\r\n                      moment\r\n                        .duration(OverallResults.timeSpentInSeconds, \"seconds\")\r\n                        .asMilliseconds()\r\n                    )\r\n                    .format(\"hh:mm:ss\")}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">Time Spent</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card variant=\"outlined\" className={classes.detailCard}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\">\r\n                  {new Date(OverallResults.dateAttempted).toLocaleDateString()}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">Attempt Date</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Slide>\r\n    </Box>\r\n  );\r\n};\r\n","import {\r\n  Grid,\r\n  Link,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport { SectionResults } from \"../Data/Sections\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"& td:not(:first-child)\": {\r\n      textAlign: \"center\",\r\n    },\r\n    \"& a\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface SectionSummaryProperties {\r\n  onNavigate: (to: string) => void;\r\n}\r\n\r\nexport const SectionSummary = ({ onNavigate }: SectionSummaryProperties) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.root}>\r\n      <Grid item>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Section</TableCell>\r\n              <TableCell>Score</TableCell>\r\n              <TableCell>Percentile</TableCell>\r\n              <TableCell>Correct</TableCell>\r\n              <TableCell>Incomplete</TableCell>\r\n              <TableCell>Average TPQ</TableCell>\r\n              <TableCell>\r\n                <FlagIcon /> Correct\r\n              </TableCell>\r\n              <TableCell>\r\n                <FlagIcon /> Incorrect\r\n              </TableCell>\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {SectionResults.map((section) => (\r\n              <TableRow key={section.id}>\r\n                <TableCell>\r\n                  <Link onClick={() => onNavigate(section.id)}>\r\n                    {section.name}\r\n                  </Link>\r\n                </TableCell>\r\n                <TableCell>{section.scaledScore}</TableCell>\r\n                <TableCell>{section.percentage}</TableCell>\r\n                <TableCell>\r\n                  {section.questionsCorrect} of {section.totalQuestions}\r\n                </TableCell>\r\n                <TableCell>{section.incomplete}</TableCell>\r\n                <TableCell>\r\n                  {moment\r\n                    .utc(\r\n                      moment\r\n                        .duration(\r\n                          section.averageQuestionTimeInSeconds,\r\n                          \"seconds\"\r\n                        )\r\n                        .asMilliseconds()\r\n                    )\r\n                    .format(\"m:ss\")}\r\n                </TableCell>\r\n                <TableCell>{section.flaggedCorrect}</TableCell>\r\n                <TableCell>{section.flaggedIncorrect}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { OverallSummary } from \"./OverallSummary\";\r\nimport { SectionSummary } from \"./SectionSummary\";\r\n\r\nexport interface SummaryProperties {\r\n  onNavigate: (to: string) => void;\r\n}\r\n\r\nexport const Summary = ({ onNavigate }: SummaryProperties) => {\r\n  return (\r\n    <Box>\r\n      <OverallSummary />\r\n      <SectionSummary onNavigate={onNavigate} />\r\n    </Box>\r\n  );\r\n};\r\n","import { LoremIpsum } from \"lorem-ipsum\";\r\n\r\nconst lorem = new LoremIpsum({\r\n  sentencesPerParagraph: {\r\n    max: 8,\r\n    min: 4,\r\n  },\r\n  wordsPerSentence: {\r\n    max: 32,\r\n    min: 8,\r\n  },\r\n});\r\n\r\nexport const Identifier = (length: number) => {\r\n  let result = \"\";\r\n  let characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  let charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const Word = (number?: number) => lorem.generateWords(number);\r\nexport const Sentence = (number?: number) => lorem.generateSentences(number);\r\nexport const Paragraph = (number: number) => lorem.generateParagraphs(number);\r\n\r\nconst formatted = (text: string) => {\r\n  const maxSpan = 13;\r\n  const bold = [0, 0.1];\r\n  const italic = [0.09, 0.12];\r\n  const underline = [0.1, 0.18];\r\n\r\n  let spans = [];\r\n  let words = text.split(\" \");\r\n  let index = 0;\r\n  while (index < words.length) {\r\n    let spanLength = Math.random() * maxSpan + 1;\r\n    let spanStart = index;\r\n    let spanEnd = Math.min(words.length - 1, index + spanLength);\r\n    index = spanEnd + 1;\r\n    let span = words.slice(spanStart, spanEnd).join(\" \");\r\n\r\n    let roll = Math.random();\r\n    if (roll >= bold[0] && roll <= bold[1]) span = `<b>${span}</b>`;\r\n    if (roll >= italic[0] && roll <= italic[1]) span = `<i>${span}</i>`;\r\n    if (roll >= underline[0] && roll <= underline[1]) span = `<u>${span}</u>`;\r\n\r\n    spans.push(span);\r\n  }\r\n\r\n  return spans.join(\" \");\r\n};\r\n\r\nexport const FormattedSentence = (number: number) => {\r\n  let spans = [];\r\n\r\n  for (let index = 0; index < number; index++)\r\n    spans.push(`<span>${formatted(lorem.generateSentences(1))}</span>`);\r\n\r\n  return spans.join(\" \");\r\n};\r\n\r\nexport const FormattedParagraph = (number: number) => {\r\n  let spans = [];\r\n\r\n  for (let index = 0; index < number; index++)\r\n    spans.push(`<p>${formatted(lorem.generateParagraphs(1))}</p>`);\r\n\r\n  return spans.join(\" \");\r\n};\r\n\r\nexport const FormattedAnswerChoices = () =>\r\n  `<br /><ol type=\"A\"><li>${FormattedSentence(\r\n    2 + Math.floor(Math.random() * 5)\r\n  )}</li><br /><li>${FormattedSentence(\r\n    2 + Math.floor(Math.random() * 5)\r\n  )}</li><br /><li>${FormattedSentence(\r\n    2 + Math.floor(Math.random() * 5)\r\n  )}</li><br /><li>${FormattedSentence(\r\n    2 + Math.floor(Math.random() * 5)\r\n  )}</li></ol>`;\r\n","import { Identifier, Sentence } from \"./Text\";\r\n\r\nexport class SkillGroup {\r\n  public label: string;\r\n  public description: string;\r\n  public skills: Array<SkillData>;\r\n  constructor() {\r\n    this.label = Identifier(3);\r\n    this.description = Sentence(2);\r\n    this.skills = [...new Array(3 + Math.ceil(Math.random() * 2))].map(\r\n      () => new SkillData()\r\n    );\r\n  }\r\n\r\n  public totalItems = () =>\r\n    this.skills.reduce((total, skill) => total + skill.items, 0);\r\n}\r\n\r\nexport class SkillData {\r\n  public correct: number;\r\n  public skill: Skill;\r\n  public items: number;\r\n  constructor() {\r\n    this.skill = new Skill();\r\n    this.items = 2 + Math.ceil(Math.random() * 8);\r\n    this.correct =\r\n      Math.floor(this.items / 2) + Math.floor(Math.random() * (this.items / 2));\r\n  }\r\n}\r\n\r\nexport class Skill {\r\n  public label: string;\r\n  public description: string;\r\n  constructor() {\r\n    this.label = Identifier(4);\r\n    this.description = Sentence(1);\r\n  }\r\n}\r\n\r\nexport const SkillsGroups: Array<SkillGroup> = [\r\n  ...new Array(3 + Math.ceil(Math.random() * 2)),\r\n].map(() => new SkillGroup());\r\n","import { Skill } from \"./Skills\";\r\nimport { FormattedAnswerChoices, FormattedParagraph, Sentence } from \"./Text\";\r\n\r\nconst previewLength = 250;\r\n\r\nexport class ItemData {\r\n  public preview: string;\r\n  public content: string;\r\n  public correctAnswer: string;\r\n  public answer: string;\r\n  public answerRationales: Array<string>;\r\n  public skills: Array<Skill>;\r\n\r\n  constructor(\r\n    public number: number,\r\n    public section: string,\r\n    public correct: boolean,\r\n    public timeInSeconds: number,\r\n    public flagged: boolean\r\n  ) {\r\n    this.content = `${FormattedParagraph(\r\n      3 + Math.floor(Math.random() * 4)\r\n    )}${FormattedAnswerChoices()}`;\r\n    this.preview = `${Sentence(2).substr(0, previewLength)}...`;\r\n\r\n    this.skills = [...new Array(2 + Math.round(Math.random() * 3))].map(\r\n      () => new Skill()\r\n    );\r\n\r\n    let answers = [\"A\", \"B\", \"C\", \"D\"];\r\n    let correctAnswerIndex = Math.min(3, Math.round(Math.random() * 3));\r\n    this.correctAnswer = answers[correctAnswerIndex];\r\n    if (this.correct) this.answer = this.correctAnswer;\r\n    else\r\n      this.answer =\r\n        Math.random() < 0.2\r\n          ? \"\"\r\n          : [\r\n              ...answers.slice(0, correctAnswerIndex),\r\n              ...answers.slice(correctAnswerIndex + 1, answers.length),\r\n            ][Math.min(2, Math.round(Math.random() * 2))];\r\n\r\n    this.answerRationales = [...new Array(4)].map(() => Sentence(2));\r\n  }\r\n}\r\n\r\nconst createItems = (count: number, section: string) => {\r\n  let items = [];\r\n  for (let number = 1; number <= count; number++)\r\n    items.push(\r\n      new ItemData(\r\n        number,\r\n        section,\r\n        Math.random() >= 0.25,\r\n        Math.random() * 360,\r\n        Math.random() >= 0.85\r\n      )\r\n    );\r\n  return items;\r\n};\r\n\r\nexport const ItemResults: Array<ItemData> = [\r\n  ...createItems(59, \"CPFBS\"),\r\n  ...createItems(53, \"CARS\"),\r\n  ...createItems(59, \"BBFLS\"),\r\n  ...createItems(59, \"PSBFB\"),\r\n];\r\n","export class ColorCombo {\r\n  constructor(public main: string, public darker: string) {}\r\n}\r\n\r\nconst colorCombos = [\r\n  new ColorCombo(\"#e6f5f9\", \"#33b1d1\"),\r\n  new ColorCombo(\"#fdeaf7\", \"#ee55bd\"),\r\n  new ColorCombo(\"#e8e8fc\", \"#454ae6\"),\r\n];\r\n\r\nexport const GetColor = (id: string) => {\r\n  let code = id\r\n    .split(\"\")\r\n    .map((c) => c.charCodeAt(0))\r\n    .reduce((total, val) => total + val, 0);\r\n  let index = code % colorCombos.length;\r\n  return colorCombos[index];\r\n};\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Dialog,\r\n  Fade,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Slide,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport { ItemResults } from \"../Data/Items\";\r\nimport { GetColor } from \"../Data/Color\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    top: \"5% !important\",\r\n    left: \"5% !important\",\r\n    bottom: \"5% !important\",\r\n    right: \"5% !important\",\r\n  },\r\n  fullSize: {\r\n    height: \"100%\",\r\n    maxHeight: \"100%\",\r\n    width: \"100%\",\r\n    maxWidth: \"100%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  itemContainer: {\r\n    margin: 15,\r\n    border: \"1px solid black\",\r\n    borderRadius: 10,\r\n    overflow: \"auto\",\r\n    overflowX: \"hidden\",\r\n    height: \"calc(100% - 30px)\",\r\n    width: \"80%\",\r\n    \"&::-webkit-scrollbar\": {\r\n      height: 10,\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n      \"-webkit-border-radius\": 10,\r\n      borderRadius: 10,\r\n      marginLeft: 10,\r\n      marginRight: 10,\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      \"-webkit-border-radius\": 10,\r\n      borderRadius: 10,\r\n      background: \"#402B56\",\r\n      \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.5)\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb:window-inactive\": {\r\n      background: \"#402B56\",\r\n    },\r\n  },\r\n  outerContainer: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  innerContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  infoContainer: {\r\n    width: \"20%\",\r\n    padding: 5,\r\n    paddingRight: 10,\r\n    overflow: \"hidden\",\r\n  },\r\n  contentContainer: {\r\n    padding: 15,\r\n  },\r\n  rationaleContainer: {\r\n    padding: 15,\r\n    \"&.correct\": {\r\n      borderTop: \"1px solid #8ADDAE\",\r\n      background: \"#dcffdc\",\r\n    },\r\n    \"&.incorrect\": {\r\n      borderTop: \"1px solid #CB7D75\",\r\n      background: \"#f8e7e6\",\r\n    },\r\n  },\r\n  appBar: {\r\n    background: \"#402B56\",\r\n    position: \"relative\",\r\n  },\r\n  navButtonContainer: {\r\n    margin: \"auto\",\r\n  },\r\n  title: {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    verticalAlign: \"middle\",\r\n  },\r\n  navButton: {\r\n    border: \"1px solid lightgray\",\r\n    color: \"lightgray\",\r\n    borderRadius: 0,\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    background: \"#f8b3325c\",\r\n    \"&.first\": {\r\n      borderTopLeftRadius: 10,\r\n      borderBottomLeftRadius: 10,\r\n      borderTopRightRadius: 0,\r\n      borderBottomRightRadius: 0,\r\n    },\r\n    \"&.last\": {\r\n      borderTopLeftRadius: 0,\r\n      borderBottomLeftRadius: 0,\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n    },\r\n    \"&.Mui-disabled\": {\r\n      border: \"1px solid gray\",\r\n      color: \"gray\",\r\n    },\r\n  },\r\n  answerTable: {\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n    \"& td\": {\r\n      border: \"none\",\r\n      textAlign: \"center\",\r\n    },\r\n    \"& tr\": {\r\n      height: 64,\r\n      \"&.right\": {\r\n        border: \"1px solid #8ADDAE\",\r\n        background: \"#dcffdc\",\r\n      },\r\n      \"&.wrong\": {\r\n        border: \"1px solid #CB7D75\",\r\n        background: \"#f8e7e6\",\r\n      },\r\n    },\r\n  },\r\n  answer: {\r\n    border: \"none\",\r\n    textAlign: \"center\",\r\n  },\r\n  boldedRationale: {\r\n    fontWeight: \"bold\",\r\n    \"& p\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  skill: {\r\n    padding: 5,\r\n    border: \"1px solid black\",\r\n    borderRadius: 10,\r\n    cursor: \"default\",\r\n    userSelect: \"none\",\r\n  },\r\n});\r\n\r\nexport interface ItemReviewProperties {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  itemNumber: number | undefined;\r\n  section: string;\r\n  canNext: boolean;\r\n  canPrevious: boolean;\r\n  onNext: () => void;\r\n  onPrevious: () => void;\r\n  onFirst: () => void;\r\n  onLast: () => void;\r\n  title: string;\r\n}\r\n\r\nexport const ItemReview = ({\r\n  open,\r\n  onClose,\r\n  itemNumber,\r\n  section,\r\n  canNext,\r\n  canPrevious,\r\n  onNext,\r\n  onPrevious,\r\n  onFirst,\r\n  onLast,\r\n  title,\r\n}: ItemReviewProperties) => {\r\n  const classes = useStyles();\r\n\r\n  const item = ItemResults.filter(\r\n    (i) => i.section === section && i.number === itemNumber\r\n  )[0];\r\n\r\n  const [direction, setDirection] = useState<\r\n    \"forward\" | \"backward\" | undefined\r\n  >();\r\n\r\n  const goLast = () => {\r\n    setDirection(\"forward\");\r\n    onLast();\r\n  };\r\n\r\n  const goForward = () => {\r\n    setDirection(\"forward\");\r\n    onNext();\r\n  };\r\n\r\n  const goBackward = () => {\r\n    setDirection(\"backward\");\r\n    onPrevious();\r\n  };\r\n\r\n  const goFirst = () => {\r\n    setDirection(\"backward\");\r\n    onFirst();\r\n  };\r\n\r\n  const close = () => {\r\n    setDirection(undefined);\r\n    onClose();\r\n  };\r\n\r\n  if (!item) return <></>;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      className={classes.root}\r\n      classes={{ container: classes.fullSize, paper: classes.fullSize }}\r\n    >\r\n      <AppBar className={classes.appBar} position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={close}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Box className={classes.navButtonContainer}>\r\n            <IconButton\r\n              className={`${classes.navButton} first`}\r\n              color=\"inherit\"\r\n              disabled={!canPrevious}\r\n              onClick={goFirst}\r\n            >\r\n              <FirstPageIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              className={classes.navButton}\r\n              color=\"inherit\"\r\n              disabled={!canPrevious}\r\n              onClick={goBackward}\r\n            >\r\n              <NavigateBeforeIcon />\r\n            </IconButton>\r\n            <Typography display=\"inline\" variant=\"h6\" className={classes.title}>\r\n              {title}\r\n            </Typography>\r\n            <IconButton\r\n              className={classes.navButton}\r\n              color=\"inherit\"\r\n              disabled={!canNext}\r\n              onClick={goForward}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              className={`${classes.navButton} last`}\r\n              color=\"inherit\"\r\n              disabled={!canNext}\r\n              onClick={goLast}\r\n            >\r\n              <LastPageIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box className={classes.outerContainer}>\r\n        <Box className={classes.innerContainer}>\r\n          <Box className={classes.itemContainer}>\r\n            <Slide\r\n              direction={\r\n                direction === \"forward\"\r\n                  ? \"left\"\r\n                  : direction === \"backward\"\r\n                  ? \"right\"\r\n                  : \"down\"\r\n              }\r\n              in={true}\r\n              timeout={450}\r\n              key={item.number}\r\n            >\r\n              <Box>\r\n                <Box\r\n                  className={classes.contentContainer}\r\n                  dangerouslySetInnerHTML={{ __html: item.content }}\r\n                ></Box>\r\n                <Box\r\n                  className={`${classes.rationaleContainer} ${\r\n                    item.correct ? \"correct\" : \"incorrect\"\r\n                  }`}\r\n                >\r\n                  <Typography>\r\n                    <b>Solution:</b> The correct answer is{\" \"}\r\n                    <b>{item.correctAnswer}</b>.\r\n                  </Typography>\r\n                  <ol type=\"A\">\r\n                    {item.answerRationales.map((rationale, index) => (\r\n                      <li\r\n                        key={index}\r\n                        className={\r\n                          item.correctAnswer.charCodeAt(0) ===\r\n                          \"A\".charCodeAt(0) + index\r\n                            ? classes.boldedRationale\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Typography>{rationale}</Typography>\r\n                      </li>\r\n                    ))}\r\n                  </ol>\r\n                </Box>\r\n              </Box>\r\n            </Slide>\r\n          </Box>\r\n          <Box className={classes.infoContainer}>\r\n            <Fade in={true} timeout={250} key={item.number}>\r\n              <Box>\r\n                <Table className={classes.answerTable}>\r\n                  <TableBody>\r\n                    <TableRow\r\n                      className={`${item.answer === \"\" ? \"wrong\" : \"\"}`}\r\n                    >\r\n                      <TableCell colSpan={2} className={classes.answer}>\r\n                        {item.correct ? (\r\n                          <Typography variant=\"h4\">Correct</Typography>\r\n                        ) : item.answer === \"\" ? (\r\n                          <Typography variant=\"h4\">Unanswered</Typography>\r\n                        ) : (\r\n                          <Typography variant=\"h4\">Incorrect</Typography>\r\n                        )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow\r\n                      className={\r\n                        item.correctAnswer === \"A\"\r\n                          ? \"right\"\r\n                          : item.answer === \"A\"\r\n                          ? \"wrong\"\r\n                          : \"\"\r\n                      }\r\n                    >\r\n                      <TableCell>\r\n                        <Typography variant=\"h5\">A</Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography>\r\n                          {item.correctAnswer === \"A\" && <CheckIcon />}\r\n                          {item.answer === \"A\" && !item.correct && (\r\n                            <CloseIcon />\r\n                          )}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow\r\n                      className={\r\n                        item.correctAnswer === \"B\"\r\n                          ? \"right\"\r\n                          : item.answer === \"B\"\r\n                          ? \"wrong\"\r\n                          : \"\"\r\n                      }\r\n                    >\r\n                      <TableCell>\r\n                        <Typography variant=\"h5\">B</Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography>\r\n                          {item.correctAnswer === \"B\" && <CheckIcon />}\r\n                          {item.answer === \"B\" && !item.correct && (\r\n                            <CloseIcon />\r\n                          )}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow\r\n                      className={\r\n                        item.correctAnswer === \"C\"\r\n                          ? \"right\"\r\n                          : item.answer === \"C\"\r\n                          ? \"wrong\"\r\n                          : \"\"\r\n                      }\r\n                    >\r\n                      <TableCell>\r\n                        <Typography variant=\"h5\">C</Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography>\r\n                          {item.correctAnswer === \"C\" && <CheckIcon />}\r\n                          {item.answer === \"C\" && !item.correct && (\r\n                            <CloseIcon />\r\n                          )}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow\r\n                      className={\r\n                        item.correctAnswer === \"D\"\r\n                          ? \"right\"\r\n                          : item.answer === \"D\"\r\n                          ? \"wrong\"\r\n                          : \"\"\r\n                      }\r\n                    >\r\n                      <TableCell>\r\n                        <Typography variant=\"h5\">D</Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography>\r\n                          {item.correctAnswer === \"D\" && <CheckIcon />}\r\n                          {item.answer === \"D\" && !item.correct && (\r\n                            <CloseIcon />\r\n                          )}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n                <Typography variant=\"subtitle2\">Time Taken</Typography>\r\n                <Typography variant=\"h5\">\r\n                  {moment\r\n                    .utc(\r\n                      moment\r\n                        .duration(item.timeInSeconds, \"seconds\")\r\n                        .asMilliseconds()\r\n                    )\r\n                    .format(\"m:ss\")}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"subtitle2\">Content & Skills</Typography>\r\n                <Grid container spacing={2}>\r\n                  {item.skills.map((skill, index) => (\r\n                    <Grid item key={`${item.number}-${index}`}>\r\n                      <Tooltip title={skill.description}>\r\n                        <Typography\r\n                          variant=\"h6\"\r\n                          className={classes.skill}\r\n                          style={{\r\n                            background: GetColor(skill.label).main,\r\n                            border: `1px solid ${GetColor(skill.label).darker}`,\r\n                          }}\r\n                        >\r\n                          {skill.label}\r\n                        </Typography>\r\n                      </Tooltip>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Box>\r\n            </Fade>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n","import {\r\n  IconButton,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport EmojiFlagsIcon from \"@material-ui/icons/EmojiFlags\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport moment from \"moment\";\r\nimport { ItemData, ItemResults } from \"../Data/Items\";\r\nimport { ItemReview } from \"./ItemReview\";\r\n\r\nconst useStyles = makeStyles({\r\n  centered: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport interface ItemsTableProperties {\r\n  sectionId: string;\r\n}\r\n\r\nexport const ItemsTable = ({ sectionId }: ItemsTableProperties) => {\r\n  const classes = useStyles();\r\n  const itemData = ItemResults.filter((i) => i.section === sectionId);\r\n\r\n  const [reviewItem, setReviewItem] = useState<number | undefined>();\r\n  const [items, setItems] = useState<Array<ItemData>>(itemData);\r\n  const [correctnessFilter, setCorrectnessFilter] = useState<string>(\"none\");\r\n  const [flaggedFilter, setFlaggedFilter] = useState<string>(\"none\");\r\n\r\n  const nextCorrectnessFilter = () => {\r\n    let newFilter =\r\n      correctnessFilter === \"correct\"\r\n        ? \"incorrect\"\r\n        : correctnessFilter === \"incorrect\"\r\n        ? \"none\"\r\n        : \"correct\";\r\n    setCorrectnessFilter(newFilter);\r\n    setItems(getItemData(newFilter, flaggedFilter));\r\n  };\r\n\r\n  const nextFlaggedFilter = () => {\r\n    let newFilter =\r\n      flaggedFilter === \"flagged\"\r\n        ? \"unflagged\"\r\n        : flaggedFilter === \"unflagged\"\r\n        ? \"none\"\r\n        : \"flagged\";\r\n    setFlaggedFilter(newFilter);\r\n    setItems(getItemData(correctnessFilter, newFilter));\r\n  };\r\n\r\n  const getItemData = (correctnessFilter: string, flaggedFilter: string) =>\r\n    itemData\r\n      .filter(\r\n        (item) =>\r\n          correctnessFilter === \"none\" ||\r\n          (correctnessFilter === \"correct\" && item.correct) ||\r\n          (correctnessFilter === \"incorrect\" && !item.correct)\r\n      )\r\n      .filter(\r\n        (item) =>\r\n          flaggedFilter === \"none\" ||\r\n          (flaggedFilter === \"flagged\" && item.flagged) ||\r\n          (flaggedFilter === \"unflagged\" && !item.flagged)\r\n      );\r\n\r\n  return (\r\n    <>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.centered}>\r\n              <Typography>#</Typography>\r\n            </TableCell>\r\n            <TableCell className={classes.centered}>\r\n              <IconButton onClick={nextCorrectnessFilter}>\r\n                {correctnessFilter === \"none\" && <FilterListIcon />}\r\n                {correctnessFilter === \"correct\" && <CheckCircleIcon />}\r\n                {correctnessFilter === \"incorrect\" && <CancelIcon />}\r\n              </IconButton>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography>Preview</Typography>\r\n            </TableCell>\r\n            <TableCell className={classes.centered}>\r\n              <Typography>Time</Typography>\r\n            </TableCell>\r\n            <TableCell className={classes.centered}>\r\n              <IconButton onClick={nextFlaggedFilter}>\r\n                {flaggedFilter === \"none\" && <FilterListIcon />}\r\n                {flaggedFilter === \"flagged\" && <FlagIcon />}\r\n                {flaggedFilter === \"unflagged\" && <EmojiFlagsIcon />}\r\n              </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.centered}>\r\n              <VisibilityIcon />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {items.map((item, index) => (\r\n            <TableRow key={item.number}>\r\n              <TableCell className={classes.centered}>\r\n                <Typography>{item.number}</Typography>\r\n              </TableCell>\r\n              <TableCell className={classes.centered}>\r\n                {item.correct ? <CheckIcon /> : <ClearIcon />}\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography>{item.preview}</Typography>\r\n              </TableCell>\r\n              <TableCell className={classes.centered}>\r\n                <Typography>\r\n                  {moment\r\n                    .utc(\r\n                      moment\r\n                        .duration(item.timeInSeconds, \"seconds\")\r\n                        .asMilliseconds()\r\n                    )\r\n                    .format(\"m:ss\")}\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell className={classes.centered}>\r\n                {item.flagged && <FlagIcon />}\r\n              </TableCell>\r\n              <TableCell className={classes.centered}>\r\n                <IconButton onClick={() => setReviewItem(index)}>\r\n                  <VisibilityIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <ItemReview\r\n        open={reviewItem !== undefined}\r\n        onClose={() => setReviewItem(undefined)}\r\n        section={sectionId}\r\n        itemNumber={items[reviewItem || 0].number}\r\n        canNext={(reviewItem || 0) < items.length - 1}\r\n        canPrevious={(reviewItem || 0) >= 1}\r\n        onNext={() => setReviewItem((reviewItem || 0) + 1)}\r\n        onPrevious={() => setReviewItem((reviewItem || 0) - 1)}\r\n        onFirst={() => setReviewItem(0)}\r\n        onLast={() => setReviewItem(items.length - 1)}\r\n        title={\r\n          items.length === itemData.length\r\n            ? `Item ${(reviewItem || 0) + 1} of ${items.length}`\r\n            : `${(reviewItem || 0) + 1} of ${items.length} (Item ${\r\n                items[reviewItem || 0].number\r\n              })`\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { FormattedParagraph, FormattedSentence } from \"./Text\";\r\n\r\nexport class ItemHighlight {\r\n  constructor(\r\n    public number: number,\r\n    public section: string,\r\n    public highlights: Array<string>\r\n  ) {}\r\n}\r\n\r\nconst createHighlight = (maxItemNumber: number, section: string) => {\r\n  const paragraphRange = [1, 2];\r\n  const sentenceRange = [2, 5];\r\n  const highlightsRange = [1, 3];\r\n\r\n  const generateParagraphHighlight = () =>\r\n    FormattedParagraph(\r\n      Math.max(paragraphRange[0], Math.ceil(Math.random() * paragraphRange[1]))\r\n    );\r\n  const generateSentenceHighlight = () =>\r\n    FormattedSentence(\r\n      Math.max(sentenceRange[0], Math.ceil(Math.random() * sentenceRange[1]))\r\n    );\r\n  const generateHighlight = () =>\r\n    Math.random() >= 0.5\r\n      ? generateParagraphHighlight()\r\n      : generateSentenceHighlight();\r\n  const generateHighlights = () =>\r\n    [\r\n      ...new Array(\r\n        highlightsRange[0] + Math.floor(Math.random() * highlightsRange[1])\r\n      ),\r\n    ].map(generateHighlight);\r\n\r\n  let item = Math.ceil(Math.random() * (maxItemNumber - 1));\r\n\r\n  return new ItemHighlight(item, section, generateHighlights());\r\n};\r\n\r\nconst createItemHighlights = (\r\n  number: number,\r\n  maxItem: number,\r\n  section: string\r\n) =>\r\n  [...new Array(number)]\r\n    .map(() => createHighlight(maxItem, section))\r\n    .sort((a, b) => a.number - b.number);\r\n\r\nexport const CandidateHighlights: Array<ItemHighlight> = [\r\n  ...createItemHighlights(5, 59, \"CPFBS\"),\r\n  ...createItemHighlights(2, 53, \"CARS\"),\r\n  ...createItemHighlights(7, 59, \"BBFLS\"),\r\n  ...createItemHighlights(4, 59, \"PSBFB\"),\r\n];\r\n","import {\r\n  Box,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { CandidateHighlights } from \"../Data/Highlights\";\r\nimport { ItemReview } from \"./ItemReview\";\r\n\r\nconst useStyles = makeStyles({\r\n  itemHighlight: {\r\n    padding: 15,\r\n    marginBottom: 15,\r\n  },\r\n  itemHighlightHeader: {\r\n    margin: 5,\r\n  },\r\n  highlightContent: {\r\n    borderLeft: \"3px solid #F8B332\",\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n    marginLeft: 25,\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n  },\r\n  previewButton: {\r\n    float: \"right\",\r\n  },\r\n});\r\n\r\nexport interface HighlightsProperties {\r\n  sectionId: string;\r\n}\r\n\r\nexport const Highlights = ({ sectionId }: HighlightsProperties) => {\r\n  const classes = useStyles();\r\n  const itemHighlights = CandidateHighlights.filter(\r\n    (h) => h.section === sectionId\r\n  );\r\n\r\n  const [reviewIndex, setReviewIndex] = useState<number | undefined>();\r\n\r\n  return (\r\n    <>\r\n      {itemHighlights.map((itemHighlight, index) => (\r\n        <Paper\r\n          elevation={3}\r\n          key={`item-${itemHighlight.number}`}\r\n          className={classes.itemHighlight}\r\n        >\r\n          <Typography\r\n            display=\"inline\"\r\n            variant=\"h6\"\r\n            className={classes.itemHighlightHeader}\r\n          >\r\n            Item {itemHighlight.number}\r\n          </Typography>\r\n          <IconButton\r\n            className={classes.previewButton}\r\n            onClick={() => setReviewIndex(index)}\r\n          >\r\n            <VisibilityIcon />\r\n          </IconButton>\r\n          {itemHighlight.highlights.map((highlight, index) => (\r\n            <Box key={index} className={classes.highlightContent}>\r\n              <blockquote\r\n                dangerouslySetInnerHTML={{ __html: highlight }}\r\n              ></blockquote>\r\n            </Box>\r\n          ))}\r\n        </Paper>\r\n      ))}\r\n      <ItemReview\r\n        open={reviewIndex !== undefined}\r\n        onClose={() => setReviewIndex(undefined)}\r\n        section={sectionId}\r\n        itemNumber={itemHighlights[reviewIndex || 0].number}\r\n        canNext={(reviewIndex || 0) < itemHighlights.length - 1}\r\n        canPrevious={(reviewIndex || 0) > 0}\r\n        onNext={() => setReviewIndex((reviewIndex || 0) + 1)}\r\n        onPrevious={() => setReviewIndex((reviewIndex || 0) - 1)}\r\n        onFirst={() => setReviewIndex(0)}\r\n        onLast={() => setReviewIndex(itemHighlights.length - 1)}\r\n        title={`Highlight ${(reviewIndex || 0) + 1} of ${\r\n          itemHighlights.length\r\n        } (Item ${itemHighlights[reviewIndex || 0].number})`}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SkillData } from \"../Data/Skills\";\r\n\r\nexport interface ContentAreaBarGraphProperties {\r\n  width: number;\r\n  height: number;\r\n  margin?: { top: number; left: number; bottom: number; right: number };\r\n  segmentMargin?: { left: number; right: number };\r\n  skills: Array<SkillData>;\r\n}\r\n\r\nexport const ContentAreaBarGraph = ({\r\n  width,\r\n  height,\r\n  margin = { top: 10, left: 10, bottom: 50, right: 10 },\r\n  segmentMargin = { left: 5, right: 5 },\r\n  skills,\r\n}: ContentAreaBarGraphProperties) => {\r\n  const contentHeight = height - (margin.top + margin.bottom);\r\n  const contentWidth = width - (margin.left + margin.right);\r\n\r\n  const max = Math.max(...skills.map((skill) => skill.items));\r\n  const segmentWidth = contentWidth / skills.length;\r\n  const segmentContentWidth =\r\n    segmentWidth - (segmentMargin.left + segmentMargin.right);\r\n  const segmentHeight = (val: number) => (contentHeight / max) * val;\r\n\r\n  return (\r\n    <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\r\n      <g transform={`translate(${margin.left},${margin.top})`}>\r\n        {skills.map((skill, index) => (\r\n          <g key={index}>\r\n            <rect\r\n              fill=\"lightyellow\"\r\n              stroke=\"black\"\r\n              strokeDasharray={4}\r\n              y={contentHeight - segmentHeight(skill.items)}\r\n              x={segmentWidth * index + segmentMargin.left}\r\n              width={segmentContentWidth}\r\n              height={segmentHeight(skill.items)}\r\n            />\r\n            <rect\r\n              fill=\"#F8B332\"\r\n              stroke=\"black\"\r\n              strokeWidth={2}\r\n              y={contentHeight - segmentHeight(skill.correct)}\r\n              x={segmentWidth * index + segmentMargin.left}\r\n              width={segmentContentWidth}\r\n              height={segmentHeight(skill.correct)}\r\n            />\r\n            <text\r\n              x={\r\n                segmentWidth * index +\r\n                segmentMargin.left +\r\n                segmentContentWidth / 2\r\n              }\r\n              y={contentHeight + 15}\r\n              textAnchor=\"middle\"\r\n            >\r\n              {skill.skill.label}\r\n            </text>\r\n          </g>\r\n        ))}\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","import {\r\n  IconButton,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport React from \"react\";\r\nimport { SkillData } from \"../Data/Skills\";\r\n\r\nconst useStyles = makeStyles({\r\n  acronym: {\r\n    width: \"10%\",\r\n  },\r\n  description: {},\r\n  items: {\r\n    textAlign: \"center\",\r\n    width: \"10%\",\r\n  },\r\n  correct: {\r\n    textAlign: \"center\",\r\n    width: \"10%\",\r\n  },\r\n  centered: {\r\n    textAlign: \"center\",\r\n  },\r\n  review: {\r\n    width: \"5%\",\r\n  },\r\n});\r\n\r\nexport interface SkillsBreakdownTableProperties {\r\n  skills: Array<SkillData>;\r\n  onReview: (start: number, number: number) => void;\r\n}\r\n\r\nexport const SkillsBreakdownTable = ({\r\n  skills,\r\n  onReview,\r\n}: SkillsBreakdownTableProperties) => {\r\n  const classes = useStyles();\r\n\r\n  const getRangeStart = (skillIndex: number) =>\r\n    skills.reduce(\r\n      (total, skill, index) =>\r\n        index < skillIndex ? total + skill.items : total,\r\n      0\r\n    );\r\n\r\n  return (\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell className={classes.acronym}>\r\n            <Typography>Acronym</Typography>\r\n          </TableCell>\r\n          <TableCell className={classes.description}>\r\n            <Typography>Description</Typography>\r\n          </TableCell>\r\n          <TableCell className={classes.items}>\r\n            <Typography>Items</Typography>\r\n          </TableCell>\r\n          <TableCell className={classes.correct}>\r\n            <Typography>Correct</Typography>\r\n          </TableCell>\r\n          <TableCell className={classes.review}></TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {skills.map((skill, index) => (\r\n          <TableRow key={index}>\r\n            <TableCell>\r\n              <Typography>{skill.skill.label}</Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography>{skill.skill.description}</Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography className={classes.centered}>\r\n                {skill.items}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography className={classes.centered}>\r\n                {skill.correct}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell className={classes.centered}>\r\n              <IconButton\r\n                onClick={() => onReview(getRangeStart(index), skill.items)}\r\n              >\r\n                <VisibilityIcon />\r\n              </IconButton>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n","import { Box, IconButton, makeStyles, Typography } from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport React, { useState } from \"react\";\r\nimport { ItemResults } from \"../Data/Items\";\r\nimport { SkillsGroups } from \"../Data/Skills\";\r\nimport { ContentAreaBarGraph } from \"../Graphics/ContentAreaBarGraph\";\r\nimport { ItemReview } from \"./ItemReview\";\r\nimport { SkillsBreakdownTable } from \"./SkillsBreakdownTable\";\r\n\r\nconst useStyles = makeStyles({\r\n  verticalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  horizontalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  skillsGroup: {\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n  },\r\n  graphContainer: {\r\n    marginTop: \"auto\",\r\n    marginBottom: \"auto\",\r\n  },\r\n  overallLabel: {\r\n    marginTop: 30,\r\n    paddingBottom: 10,\r\n    borderBottom: \"1px solid lightgray\",\r\n  },\r\n  mainLabel: {\r\n    marginTop: \"auto\",\r\n    marginBottom: \"auto\",\r\n    marginLeft: 30,\r\n    marginRight: 30,\r\n  },\r\n});\r\n\r\nexport interface SkillsBreakdownProperties {\r\n  sectionId: string;\r\n}\r\n\r\nexport const SkillsBreakdown = ({ sectionId }: SkillsBreakdownProperties) => {\r\n  const classes = useStyles();\r\n  const [reviewIndexStart, setReviewIndexStart] = useState(0);\r\n  const [reviewIndexEnd, setReviewIndexEnd] = useState(0);\r\n  const [reviewIndex, setReviewIndex] = useState<number | undefined>();\r\n\r\n  const items = ItemResults.filter((i) => i.section === sectionId);\r\n\r\n  const review = (startIndex: number, numberOfItems: number) => {\r\n    setReviewIndexStart(startIndex);\r\n    setReviewIndexEnd(startIndex + numberOfItems - 1);\r\n    setReviewIndex(startIndex);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {SkillsGroups.map((group, index) => (\r\n        <Box\r\n          key={index}\r\n          className={`${classes.verticalStack} ${classes.skillsGroup}`}\r\n        >\r\n          <Box className={`${classes.horizontalStack} ${classes.overallLabel}`}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              display=\"inline\"\r\n              className={classes.mainLabel}\r\n            >\r\n              {group.label}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" display=\"inline\">\r\n              {group.description}\r\n            </Typography>\r\n            <IconButton onClick={() => review(0, group.totalItems())}>\r\n              <VisibilityIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <Box className={classes.horizontalStack}>\r\n            <Box\r\n              className={`${classes.verticalStack} ${classes.graphContainer}`}\r\n            >\r\n              <ContentAreaBarGraph\r\n                width={300}\r\n                height={300}\r\n                margin={{ top: 50, left: 10, bottom: 50, right: 10 }}\r\n                skills={group.skills}\r\n              />\r\n            </Box>\r\n            <SkillsBreakdownTable skills={group.skills} onReview={review} />\r\n          </Box>\r\n        </Box>\r\n      ))}\r\n      <ItemReview\r\n        open={reviewIndex !== undefined}\r\n        onClose={() => setReviewIndex(undefined)}\r\n        section={sectionId}\r\n        itemNumber={items[reviewIndex || 0].number}\r\n        canNext={(reviewIndex || 0) < reviewIndexEnd}\r\n        canPrevious={(reviewIndex || 0) > reviewIndexStart}\r\n        onNext={() => setReviewIndex((reviewIndex || 0) + 1)}\r\n        onPrevious={() => setReviewIndex((reviewIndex || 0) - 1)}\r\n        onFirst={() => setReviewIndex(reviewIndexStart)}\r\n        onLast={() => setReviewIndex(reviewIndexEnd)}\r\n        title={`Item ${(reviewIndex || 0) + 1 - reviewIndexStart} of ${\r\n          reviewIndexEnd - reviewIndexStart + 1\r\n        } (Item ${items[reviewIndex || 0].number})`}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Slide,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport { OverallDataKey } from \"../Data/Overall\";\r\nimport { SectionData } from \"../Data/Sections\";\r\nimport { ScoreDistribution } from \"../Graphics/ScoreDistribution\";\r\nimport { ItemsTable } from \"./ItemsTable\";\r\nimport { Highlights } from \"./Highlights\";\r\nimport { SkillsBreakdown } from \"./SkillsBreakdown\";\r\n\r\nconst useStyles = makeStyles({\r\n  verticalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  horizontalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  backNavigation: {\r\n    marginTop: -50,\r\n  },\r\n  detailCard: {\r\n    textAlign: \"center\",\r\n    verticalAlign: \"middle\",\r\n    margin: 10,\r\n    minWidth: 210,\r\n  },\r\n  scoreCurve: {\r\n    \"& svg\": {\r\n      margin: \"auto\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface SectionDetailsProperties {\r\n  onNavigate: (to: string) => void;\r\n  section: SectionData;\r\n}\r\n\r\nexport const SectionDetails = ({\r\n  onNavigate,\r\n  section,\r\n}: SectionDetailsProperties) => {\r\n  const classes = useStyles();\r\n  const [tab, setTab] = React.useState(0);\r\n\r\n  const onTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setTab(newValue);\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => onNavigate(OverallDataKey)}\r\n        className={classes.backNavigation}\r\n      >\r\n        <ArrowBackIcon />\r\n        <Typography>Back To Summary</Typography>\r\n      </Button>\r\n      <Box className={classes.verticalStack}>\r\n        <Box className={classes.horizontalStack}>\r\n          <Slide direction=\"right\" in={true} timeout={500}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">{section.scaledScore}</Typography>\r\n                    <Typography variant=\"subtitle2\">Scaled Score</Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">{section.percentage}%</Typography>\r\n                    <Typography variant=\"subtitle2\">Percentile Rank</Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">\r\n                      {section.questionsCorrect} of {section.totalQuestions}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      Questions Correct\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">{section.incomplete}</Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      Questions Incomplete\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">\r\n                      {section.flaggedCorrect}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      <FlagIcon /> Correct\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">\r\n                      {section.flaggedIncorrect}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      <FlagIcon /> Incorrect\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Slide>\r\n          <Box className={`${classes.scoreCurve} ${classes.verticalStack}`}>\r\n            <ScoreDistribution\r\n              height={250}\r\n              width={500}\r\n              margin={{ top: 10, left: 10, bottom: 20, right: 10 }}\r\n              leftLabel={section.minScaledScore.toString()}\r\n              rightLabel={section.maxScaledScore.toString()}\r\n              score={section.scaledScore.toString()}\r\n              percentage={section.percentage}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Tabs value={tab} onChange={onTabChange}>\r\n          <Tab label=\"Question Review\" />\r\n          <Tab label=\"Highlights\" />\r\n          <Tab label=\"Content & Skills Breakdown\" />\r\n        </Tabs>\r\n        {tab === 0 && (\r\n          <Slide direction=\"up\" in={true} timeout={500}>\r\n            <Box>\r\n              <ItemsTable sectionId={section.id} />\r\n            </Box>\r\n          </Slide>\r\n        )}\r\n        {tab === 1 && (\r\n          <Slide direction=\"up\" in={true} timeout={500}>\r\n            <Box>\r\n              <Highlights sectionId={section.id} />\r\n            </Box>\r\n          </Slide>\r\n        )}\r\n        {tab === 2 && (\r\n          <Slide direction=\"up\" in={true} timeout={500}>\r\n            <Box>\r\n              <SkillsBreakdown sectionId={section.id} />\r\n            </Box>\r\n          </Slide>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport { Box, Container, Slide } from \"@material-ui/core\";\n\nimport { ReportHeader } from \"./Header/ReportHeader\";\nimport { Summary } from \"./Summary/Summary\";\nimport { SectionDetails } from \"./Section/SectionDetails\";\nimport { OverallDataKey } from \"./Data/Overall\";\nimport { SectionResults } from \"./Data/Sections\";\n\nexport const App = () => {\n  const [viewing, setViewing] = useState(OverallDataKey);\n\n  return (\n    <>\n      <ReportHeader onNavigate={(to: string) => setViewing(to)} />\n      <Container>\n        {viewing === OverallDataKey && (\n          <Slide direction=\"right\" in={true}>\n            <Box>\n              <Summary onNavigate={(to: string) => setViewing(to)} />\n            </Box>\n          </Slide>\n        )}\n        {SectionResults.map((section) => (\n          <Box key={section.id}>\n            {viewing === section.id && (\n              <Slide direction=\"left\" in={true}>\n                <Box>\n                  <SectionDetails\n                    onNavigate={(to: string) => setViewing(to)}\n                    section={section}\n                  />\n                </Box>\n              </Slide>\n            )}\n          </Box>\n        ))}\n      </Container>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}