{"version":3,"sources":["Header/HeaderBanner.tsx","Graphics/ScoreDistribution.tsx","Data/Sections.ts","Header/ReportHeader.tsx","Data/Overall.ts","Summary/OverallSummary.tsx","Summary/SectionSummary.tsx","Summary/Summary.tsx","Data/Text.ts","Data/Skills.ts","Data/Items.ts","Data/Color.ts","Section/ItemReview.tsx","Section/ItemsTable.tsx","Data/Highlights.ts","Section/Highlights.tsx","Graphics/ContentAreaBarGraph.tsx","Section/SkillsBreakdownTable.tsx","Section/SkillsBreakdown.tsx","Section/SectionDetails.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","root","background","position","marginBottom","content","left","top","width","height","borderLeft","borderRight","borderTop","clear","HeaderBanner","children","classes","Slide","direction","in","timeout","Box","className","Container","ScoreDistribution","margin","bottom","right","leftLabel","rightLabel","score","percentage","textColor","textSize","contentHeight","contentWidth","calcY","x","Math","E","sqrt","PI","f","points","Array","map","_","getPercentageX","p","useState","renderedPercentage","setRenderedPercentage","useEffect","setTimeout","min","clearTimeout","viewBox","y","fontSize","fill","textAnchor","transform","d","filter","i","join","stroke","strokeWidth","cx","cy","r","x1","y1","x2","y2","strokeDasharray","SectionResults","id","name","minScaledScore","maxScaledScore","scaledScore","totalQuestions","questionsCorrect","incomplete","averageQuestionTimeInSeconds","flaggedCorrect","flaggedIncorrect","header","color","paddingBottom","textAlign","headerTitle","padding","scoreComponent","maxWidth","marginLeft","marginRight","verticalStack","display","flexDirection","horizontalStack","even","justifyContent","spread","overallLabel","navButton","cursor","textDecoration","ReportHeader","onNavigate","Typography","variant","section","toString","onClick","OverallDataKey","OverallResults","percent","timeSpentInSeconds","dateAttempted","detailsGrid","detailCard","verticalAlign","minWidth","scoreCurve","marginTop","OverallSummary","Grid","container","justify","alignItems","item","Card","CardContent","moment","utc","duration","asMilliseconds","format","Date","toLocaleDateString","SectionSummary","Table","TableHead","TableRow","TableCell","TableBody","Link","Summary","lorem","LoremIpsum","sentencesPerParagraph","max","wordsPerSentence","Identifier","length","result","characters","charactersLength","charAt","floor","random","Sentence","number","generateSentences","formatted","text","bold","italic","underline","spans","words","split","index","spanLength","spanStart","spanEnd","span","slice","roll","push","FormattedSentence","FormattedParagraph","generateParagraphs","SkillGroup","label","description","skills","this","ceil","SkillData","correct","skill","items","Skill","SkillsGroups","ItemData","timeInSeconds","flagged","preview","correctAnswer","answer","answerRationales","substr","round","answers","correctAnswerIndex","createItems","count","ItemResults","ColorCombo","main","darker","colorCombos","GetColor","code","c","charCodeAt","reduce","total","val","fullSize","maxHeight","itemContainer","border","borderRadius","overflow","outerContainer","innerContainer","infoContainer","paddingRight","contentContainer","rationaleContainer","appBar","navButtonContainer","title","paddingTop","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","answerTable","boldedRationale","fontWeight","userSelect","ItemReview","open","onClose","itemNumber","canNext","canPrevious","onNext","onPrevious","onFirst","onLast","Dialog","paper","AppBar","Toolbar","IconButton","edge","aria-label","disabled","dangerouslySetInnerHTML","__html","type","rationale","colSpan","spacing","Tooltip","style","centered","ItemsTable","sectionId","itemData","maxItem","reviewItem","setReviewItem","undefined","ItemHighlight","highlights","createHighlight","maxItemNumber","paragraphRange","sentenceRange","highlightsRange","generateHighlight","createItemHighlights","sort","a","b","CandidateHighlights","itemHighlight","itemHighlightHeader","highlightContent","previewButton","float","Highlights","itemHighlights","h","reviewIndex","setReviewIndex","Paper","elevation","highlight","ContentAreaBarGraph","segmentMargin","segmentWidth","segmentContentWidth","segmentHeight","acronym","SkillsBreakdownTable","skillsGroup","graphContainer","borderBottom","mainLabel","SkillsBreakdown","group","backNavigation","SectionDetails","React","tab","setTab","Button","Tabs","value","onChange","event","newValue","Tab","App","viewing","setViewing","to","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.90260ad0.chunk.js","sourcesContent":["import { Box, Container, makeStyles, Slide } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: \"#402B56\",\r\n    position: \"relative\",\r\n    marginBottom: 55,\r\n    \"&::after\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      left: \"calc(50% - 100px)\",\r\n      top: \"100%\",\r\n      width: 0,\r\n      height: 0,\r\n      borderLeft: \"100px solid transparent\",\r\n      borderRight: \"100px solid transparent\",\r\n      borderTop: \"50px solid #402b56\",\r\n      clear: \"both\",\r\n    },\r\n  },\r\n});\r\n\r\nexport const HeaderBanner: FunctionComponent = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide direction=\"down\" in={true} timeout={500}>\r\n      <Box className={classes.root}>\r\n        <Container>\r\n          <Box>{children}</Box>\r\n        </Container>\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport interface ScoreDistributionProperties {\r\n  height: number;\r\n  width: number;\r\n  margin?: { top: number; left: number; bottom: number; right: number };\r\n  leftLabel?: string;\r\n  rightLabel?: string;\r\n  score?: string;\r\n  percentage: number;\r\n  textColor?: string;\r\n  textSize?: string;\r\n}\r\n\r\nexport const ScoreDistribution = ({\r\n  height,\r\n  width,\r\n  margin = { top: 10, left: 10, bottom: 10, right: 10 },\r\n  leftLabel = \"\",\r\n  rightLabel = \"\",\r\n  score = \"\",\r\n  percentage,\r\n  textColor = \"black\",\r\n  textSize = \"large\",\r\n}: ScoreDistributionProperties) => {\r\n  const contentHeight = height - (margin.top + margin.bottom);\r\n  const contentWidth = width - (margin.left + margin.right);\r\n\r\n  const mean = 0;\r\n  const stDev = 1;\r\n  const scaleMin = -2.75;\r\n  const scaleMax = 2.75;\r\n\r\n  const f = (x: number) =>\r\n    Math.E ** -((x - mean) ** 2 / (2 * stDev ** 2)) /\r\n    (stDev * Math.sqrt(2 * Math.PI));\r\n\r\n  const scale = (i: number) =>\r\n    (i * (scaleMax - scaleMin)) / contentWidth + scaleMin;\r\n\r\n  const calcY = (x: number) => contentHeight - f(scale(x)) * contentHeight * 2;\r\n\r\n  const points = [...new Array(contentWidth)].map((_, x) => calcY(x));\r\n\r\n  const getPercentageX = (p: number) => contentWidth * (p / 100);\r\n  const [renderedPercentage, setRenderedPercentage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let timeout = setTimeout(\r\n      () => setRenderedPercentage(Math.min(renderedPercentage + 1, percentage)),\r\n      percentage - renderedPercentage > 10 ? 10 : 20\r\n    );\r\n    return () => clearTimeout(timeout);\r\n  }, [percentage, renderedPercentage]);\r\n\r\n  return (\r\n    <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\r\n      <text x={5} y={height - 5} fontSize={textSize} fill={textColor}>\r\n        {leftLabel}\r\n      </text>\r\n      <text\r\n        x={width - 5}\r\n        y={height - 5}\r\n        fontSize={textSize}\r\n        textAnchor=\"end\"\r\n        fill={textColor}\r\n      >\r\n        {rightLabel}\r\n      </text>\r\n      <g transform={`translate(${margin.left} ${margin.top})`}>\r\n        <path\r\n          d={`M 0 0 ${points\r\n            .filter((_, i) => i < getPercentageX(renderedPercentage))\r\n            .map((p, i) => `L ${i} ${p}`)\r\n            .join(\" \")} L ${getPercentageX(renderedPercentage)} ${calcY(\r\n            getPercentageX(renderedPercentage)\r\n          )} L ${getPercentageX(\r\n            renderedPercentage\r\n          )} ${contentHeight} L 0 ${contentHeight}`}\r\n          stroke=\"none\"\r\n          fill=\"#F8B332\"\r\n        />\r\n        <path\r\n          d={`M 0 ${points[0]} ${points\r\n            .map((p, i) => `L ${i} ${p}`)\r\n            .join(\" \")}`}\r\n          fill=\"none\"\r\n          stroke=\"black\"\r\n          strokeWidth={2}\r\n        />\r\n        <circle\r\n          cx={getPercentageX(renderedPercentage)}\r\n          cy={calcY(getPercentageX(renderedPercentage)) - 5}\r\n          r={5}\r\n          fill=\"red\"\r\n          stroke=\"none\"\r\n        />\r\n        <line\r\n          x1={getPercentageX(renderedPercentage)}\r\n          y1={contentHeight}\r\n          x2={getPercentageX(renderedPercentage)}\r\n          y2={calcY(getPercentageX(renderedPercentage))}\r\n          stroke=\"red\"\r\n          strokeDasharray={2}\r\n        />\r\n        {renderedPercentage >= percentage && (\r\n          <text\r\n            x={getPercentageX(renderedPercentage)}\r\n            y={calcY(getPercentageX(renderedPercentage)) - 15}\r\n            textAnchor=\"middle\"\r\n            fontSize={textSize}\r\n            fill={textColor}\r\n          >\r\n            {score}\r\n          </text>\r\n        )}\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","export interface SectionData {\r\n  id: string;\r\n  name: string;\r\n  minScaledScore: number;\r\n  maxScaledScore: number;\r\n  scaledScore: number;\r\n  percentage: number;\r\n  totalQuestions: number;\r\n  questionsCorrect: number;\r\n  incomplete: number;\r\n  averageQuestionTimeInSeconds: number;\r\n  flaggedCorrect: number;\r\n  flaggedIncorrect: number;\r\n}\r\n\r\nexport const SectionResults: Array<SectionData> = [\r\n  {\r\n    id: \"CPFBS\",\r\n    name: \"Chemical and Physical Foundations of Biological Systems\",\r\n    minScaledScore: 118,\r\n    maxScaledScore: 132,\r\n    scaledScore: 127,\r\n    percentage: 85,\r\n    totalQuestions: 59,\r\n    questionsCorrect: 43,\r\n    incomplete: 2,\r\n    averageQuestionTimeInSeconds: 52,\r\n    flaggedCorrect: 15,\r\n    flaggedIncorrect: 3,\r\n  },\r\n  {\r\n    id: \"CARS\",\r\n    name: \"Critical Analysis and Reasoning Skills\",\r\n    minScaledScore: 118,\r\n    maxScaledScore: 132,\r\n    scaledScore: 125,\r\n    percentage: 50,\r\n    totalQuestions: 53,\r\n    questionsCorrect: 30,\r\n    incomplete: 10,\r\n    averageQuestionTimeInSeconds: 72,\r\n    flaggedCorrect: 5,\r\n    flaggedIncorrect: 12,\r\n  },\r\n  {\r\n    id: \"BBFLS\",\r\n    name: \"Biological and Biomechanical Foundations of Living Systems\",\r\n    minScaledScore: 118,\r\n    maxScaledScore: 132,\r\n    scaledScore: 128,\r\n    percentage: 83,\r\n    totalQuestions: 59,\r\n    questionsCorrect: 48,\r\n    incomplete: 0,\r\n    averageQuestionTimeInSeconds: 81,\r\n    flaggedCorrect: 0,\r\n    flaggedIncorrect: 1,\r\n  },\r\n  {\r\n    id: \"PSBFB\",\r\n    name: \"Psychological, Social, and Biological Foundations of Behavior\",\r\n    minScaledScore: 118,\r\n    maxScaledScore: 132,\r\n    scaledScore: 129,\r\n    percentage: 87,\r\n    totalQuestions: 59,\r\n    questionsCorrect: 49,\r\n    incomplete: 0,\r\n    averageQuestionTimeInSeconds: 43,\r\n    flaggedCorrect: 0,\r\n    flaggedIncorrect: 0,\r\n  },\r\n];\r\n","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { HeaderBanner } from \"./HeaderBanner\";\r\nimport { ScoreDistribution } from \"../Graphics/ScoreDistribution\";\r\nimport { SectionResults } from \"../Data/Sections\";\r\n\r\nconst useStyles = makeStyles({\r\n  header: {\r\n    color: \"white\",\r\n    paddingBottom: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  headerTitle: {\r\n    padding: 25,\r\n  },\r\n  scoreComponent: {\r\n    maxWidth: 250,\r\n    \"& svg\": {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  verticalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  horizontalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  even: {\r\n    justifyContent: \"space-around\",\r\n  },\r\n  spread: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n  overallLabel: {\r\n    textAlign: \"center\",\r\n  },\r\n  navButton: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface ReportHeaderProperties {\r\n  onNavigate: (to: string) => void;\r\n}\r\n\r\nexport const ReportHeader = ({ onNavigate }: ReportHeaderProperties) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <HeaderBanner>\r\n      <Box className={`${classes.header} ${classes.verticalStack}`}>\r\n        <Typography variant=\"h4\" className={classes.headerTitle}>\r\n          MCAT Practice Exam Results\r\n        </Typography>\r\n        <Box className={`${classes.horizontalStack} ${classes.even}`}>\r\n          {SectionResults.map((section) => (\r\n            <Box\r\n              key={section.id}\r\n              className={`${classes.scoreComponent} ${classes.verticalStack}`}\r\n            >\r\n              <ScoreDistribution\r\n                height={125}\r\n                width={200}\r\n                margin={{ top: 10, left: 10, bottom: 20, right: 10 }}\r\n                leftLabel={section.minScaledScore.toString()}\r\n                rightLabel={section.maxScaledScore.toString()}\r\n                score={section.scaledScore.toString()}\r\n                percentage={section.percentage}\r\n                textColor=\"white\"\r\n                textSize=\"default\"\r\n              />\r\n              <Typography\r\n                onClick={() => onNavigate(section.id)}\r\n                className={classes.navButton}\r\n              >\r\n                {section.name}\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    </HeaderBanner>\r\n  );\r\n};\r\n","export const OverallDataKey = \"summary\";\r\nexport interface OverallData {\r\n  minScaledScore: number;\r\n  maxScaledScore: number;\r\n  scaledScore: number;\r\n  percent: number;\r\n  totalQuestions: number;\r\n  questionsCorrect: number;\r\n  timeSpentInSeconds: number;\r\n  dateAttempted: number;\r\n}\r\n\r\nexport const OverallResults: OverallData = {\r\n  minScaledScore: 472,\r\n  maxScaledScore: 528,\r\n  scaledScore: 511,\r\n  percent: 82,\r\n  totalQuestions: 230,\r\n  questionsCorrect: 201,\r\n  timeSpentInSeconds: 14200,\r\n  dateAttempted: 1612293247790,\r\n};\r\n","import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Slide,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { OverallResults } from \"../Data/Overall\";\r\n\r\nimport { ScoreDistribution } from \"../Graphics/ScoreDistribution\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginBottom: 20,\r\n  },\r\n  verticalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  horizontalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  even: {\r\n    justifyContent: \"space-around\",\r\n  },\r\n  spread: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n  overallLabel: {\r\n    textAlign: \"center\",\r\n  },\r\n  detailsGrid: {\r\n    marginLeft: 25,\r\n  },\r\n  detailCard: {\r\n    textAlign: \"center\",\r\n    verticalAlign: \"middle\",\r\n    margin: 10,\r\n    minWidth: 210,\r\n  },\r\n  scoreCurve: {\r\n    marginTop: \"auto\",\r\n    marginBottom: \"auto\",\r\n  },\r\n});\r\n\r\nexport const OverallSummary = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      className={`${classes.root} ${classes.horizontalStack} ${classes.spread}`}\r\n    >\r\n      <Box className={`${classes.verticalStack} ${classes.scoreCurve}`}>\r\n        <Typography variant=\"h4\" className={classes.overallLabel}>\r\n          Overall Scaled Score\r\n        </Typography>\r\n        <ScoreDistribution\r\n          height={250}\r\n          width={500}\r\n          margin={{ top: 10, left: 10, bottom: 20, right: 10 }}\r\n          leftLabel={OverallResults.minScaledScore.toString()}\r\n          rightLabel={OverallResults.maxScaledScore.toString()}\r\n          score={OverallResults.scaledScore.toString()}\r\n          percentage={OverallResults.percent}\r\n        />\r\n      </Box>\r\n      <Slide direction=\"left\" in={true} timeout={500}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.detailsGrid}\r\n        >\r\n          <Grid item>\r\n            <Card variant=\"outlined\" className={classes.detailCard}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\">{OverallResults.percent}%</Typography>\r\n                <Typography variant=\"subtitle2\">Percentile Rank</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card variant=\"outlined\" className={classes.detailCard}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\">\r\n                  {OverallResults.questionsCorrect} of{\" \"}\r\n                  {OverallResults.totalQuestions}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">Questions Correct</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card variant=\"outlined\" className={classes.detailCard}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\">\r\n                  {moment\r\n                    .utc(\r\n                      moment\r\n                        .duration(OverallResults.timeSpentInSeconds, \"seconds\")\r\n                        .asMilliseconds()\r\n                    )\r\n                    .format(\"hh:mm:ss\")}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">Time Spent</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card variant=\"outlined\" className={classes.detailCard}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\">\r\n                  {new Date(OverallResults.dateAttempted).toLocaleDateString()}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">Attempt Date</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Slide>\r\n    </Box>\r\n  );\r\n};\r\n","import {\r\n  Grid,\r\n  Link,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport { SectionResults } from \"../Data/Sections\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"& td:not(:first-child)\": {\r\n      textAlign: \"center\",\r\n    },\r\n    \"& a\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface SectionSummaryProperties {\r\n  onNavigate: (to: string) => void;\r\n}\r\n\r\nexport const SectionSummary = ({ onNavigate }: SectionSummaryProperties) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.root}>\r\n      <Grid item>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Section</TableCell>\r\n              <TableCell>Score</TableCell>\r\n              <TableCell>Percentile</TableCell>\r\n              <TableCell>Correct</TableCell>\r\n              <TableCell>Incomplete</TableCell>\r\n              <TableCell>Average TPQ</TableCell>\r\n              <TableCell>\r\n                <FlagIcon /> Correct\r\n              </TableCell>\r\n              <TableCell>\r\n                <FlagIcon /> Incorrect\r\n              </TableCell>\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {SectionResults.map((section) => (\r\n              <TableRow key={section.id}>\r\n                <TableCell>\r\n                  <Link onClick={() => onNavigate(section.id)}>\r\n                    {section.name}\r\n                  </Link>\r\n                </TableCell>\r\n                <TableCell>{section.scaledScore}</TableCell>\r\n                <TableCell>{section.percentage}</TableCell>\r\n                <TableCell>\r\n                  {section.questionsCorrect} of {section.totalQuestions}\r\n                </TableCell>\r\n                <TableCell>{section.incomplete}</TableCell>\r\n                <TableCell>\r\n                  {moment\r\n                    .utc(\r\n                      moment\r\n                        .duration(\r\n                          section.averageQuestionTimeInSeconds,\r\n                          \"seconds\"\r\n                        )\r\n                        .asMilliseconds()\r\n                    )\r\n                    .format(\"m:ss\")}\r\n                </TableCell>\r\n                <TableCell>{section.flaggedCorrect}</TableCell>\r\n                <TableCell>{section.flaggedIncorrect}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { OverallSummary } from \"./OverallSummary\";\r\nimport { SectionSummary } from \"./SectionSummary\";\r\n\r\nexport interface SummaryProperties {\r\n  onNavigate: (to: string) => void;\r\n}\r\n\r\nexport const Summary = ({ onNavigate }: SummaryProperties) => {\r\n  return (\r\n    <Box>\r\n      <OverallSummary />\r\n      <SectionSummary onNavigate={onNavigate} />\r\n    </Box>\r\n  );\r\n};\r\n","import { LoremIpsum } from \"lorem-ipsum\";\r\n\r\nconst lorem = new LoremIpsum({\r\n  sentencesPerParagraph: {\r\n    max: 8,\r\n    min: 4,\r\n  },\r\n  wordsPerSentence: {\r\n    max: 32,\r\n    min: 8,\r\n  },\r\n});\r\n\r\nexport const Identifier = (length: number) => {\r\n  let result = \"\";\r\n  let characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  let charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const Word = (number?: number) => lorem.generateWords(number);\r\nexport const Sentence = (number?: number) => lorem.generateSentences(number);\r\nexport const Paragraph = (number: number) => lorem.generateParagraphs(number);\r\n\r\nconst formatted = (text: string) => {\r\n  const maxSpan = 13;\r\n  const bold = [0, 0.1];\r\n  const italic = [0.09, 0.12];\r\n  const underline = [0.1, 0.18];\r\n\r\n  let spans = [];\r\n  let words = text.split(\" \");\r\n  let index = 0;\r\n  while (index < words.length) {\r\n    let spanLength = Math.random() * maxSpan + 1;\r\n    let spanStart = index;\r\n    let spanEnd = Math.min(words.length - 1, index + spanLength);\r\n    index = spanEnd + 1;\r\n    let span = words.slice(spanStart, spanEnd).join(\" \");\r\n\r\n    let roll = Math.random();\r\n    if (roll >= bold[0] && roll <= bold[1]) span = `<b>${span}</b>`;\r\n    if (roll >= italic[0] && roll <= italic[1]) span = `<i>${span}</i>`;\r\n    if (roll >= underline[0] && roll <= underline[1]) span = `<u>${span}</u>`;\r\n\r\n    spans.push(span);\r\n  }\r\n\r\n  return spans.join(\" \");\r\n};\r\n\r\nexport const FormattedSentence = (number: number) => {\r\n  let spans = [];\r\n\r\n  for (let index = 0; index < number; index++)\r\n    spans.push(`<span>${formatted(lorem.generateSentences(1))}</span>`);\r\n\r\n  return spans.join(\" \");\r\n};\r\n\r\nexport const FormattedParagraph = (number: number) => {\r\n  let spans = [];\r\n\r\n  for (let index = 0; index < number; index++)\r\n    spans.push(`<p>${formatted(lorem.generateParagraphs(1))}</p>`);\r\n\r\n  return spans.join(\" \");\r\n};\r\n\r\nexport const FormattedAnswerChoices = () =>\r\n  `<br /><ol type=\"A\"><li>${FormattedSentence(\r\n    2 + Math.floor(Math.random() * 5)\r\n  )}</li><br /><li>${FormattedSentence(\r\n    2 + Math.floor(Math.random() * 5)\r\n  )}</li><br /><li>${FormattedSentence(\r\n    2 + Math.floor(Math.random() * 5)\r\n  )}</li><br /><li>${FormattedSentence(\r\n    2 + Math.floor(Math.random() * 5)\r\n  )}</li></ol>`;\r\n","import { Identifier, Sentence } from \"./Text\";\r\n\r\nexport class SkillGroup {\r\n  public label: string;\r\n  public description: string;\r\n  public skills: Array<SkillData>;\r\n  constructor() {\r\n    this.label = Identifier(3);\r\n    this.description = Sentence(2);\r\n    this.skills = [...new Array(3 + Math.ceil(Math.random() * 2))].map(\r\n      () => new SkillData()\r\n    );\r\n  }\r\n}\r\n\r\nexport class SkillData {\r\n  public correct: number;\r\n  public skill: Skill;\r\n  public items: number;\r\n  constructor() {\r\n    this.skill = new Skill();\r\n    this.items = Math.ceil(Math.random() * 15);\r\n    this.correct =\r\n      Math.floor(this.items / 2) + Math.floor(Math.random() * (this.items / 2));\r\n  }\r\n}\r\n\r\nexport class Skill {\r\n  public label: string;\r\n  public description: string;\r\n  constructor() {\r\n    this.label = Identifier(4);\r\n    this.description = Sentence(1);\r\n  }\r\n}\r\n\r\nexport const SkillsGroups: Array<SkillGroup> = [\r\n  ...new Array(3 + Math.ceil(Math.random() * 2)),\r\n].map(() => new SkillGroup());\r\n","import { Skill } from \"./Skills\";\r\nimport { FormattedAnswerChoices, FormattedParagraph, Sentence } from \"./Text\";\r\n\r\nconst previewLength = 250;\r\n\r\nexport class ItemData {\r\n  public preview: string;\r\n  public content: string;\r\n  public correctAnswer: string;\r\n  public answer: string;\r\n  public answerRationales: Array<string>;\r\n  public skills: Array<Skill>;\r\n\r\n  constructor(\r\n    public number: number,\r\n    public section: string,\r\n    public correct: boolean,\r\n    public timeInSeconds: number,\r\n    public flagged: boolean\r\n  ) {\r\n    this.content = `${FormattedParagraph(\r\n      3 + Math.floor(Math.random() * 4)\r\n    )}${FormattedAnswerChoices()}`;\r\n    this.preview = `${Sentence(2).substr(0, previewLength)}...`;\r\n\r\n    this.skills = [...new Array(2 + Math.round(Math.random() * 3))].map(\r\n      () => new Skill()\r\n    );\r\n\r\n    let answers = [\"A\", \"B\", \"C\", \"D\"];\r\n    let correctAnswerIndex = Math.min(3, Math.round(Math.random() * 3));\r\n    this.correctAnswer = answers[correctAnswerIndex];\r\n    if (this.correct) this.answer = this.correctAnswer;\r\n    else\r\n      this.answer =\r\n        Math.random() < 0.2\r\n          ? \"\"\r\n          : [\r\n              ...answers.slice(0, correctAnswerIndex),\r\n              ...answers.slice(correctAnswerIndex + 1, answers.length),\r\n            ][Math.min(2, Math.round(Math.random() * 2))];\r\n\r\n    this.answerRationales = [...new Array(4)].map(() => Sentence(2));\r\n  }\r\n}\r\n\r\nconst createItems = (count: number, section: string) => {\r\n  let items = [];\r\n  for (let number = 1; number <= count; number++)\r\n    items.push(\r\n      new ItemData(\r\n        number,\r\n        section,\r\n        Math.random() >= 0.25,\r\n        Math.random() * 360,\r\n        Math.random() >= 0.85\r\n      )\r\n    );\r\n  return items;\r\n};\r\n\r\nexport const ItemResults: Array<ItemData> = [\r\n  ...createItems(59, \"CPFBS\"),\r\n  ...createItems(53, \"CARS\"),\r\n  ...createItems(59, \"BBFLS\"),\r\n  ...createItems(59, \"PSBFB\"),\r\n];\r\n","export class ColorCombo {\r\n  constructor(public main: string, public darker: string) {}\r\n}\r\n\r\nconst colorCombos = [\r\n  new ColorCombo(\"#e6f5f9\", \"#33b1d1\"),\r\n  new ColorCombo(\"#fdeaf7\", \"#ee55bd\"),\r\n  new ColorCombo(\"#e8e8fc\", \"#454ae6\"),\r\n];\r\n\r\nexport const GetColor = (id: string) => {\r\n  let code = id\r\n    .split(\"\")\r\n    .map((c) => c.charCodeAt(0))\r\n    .reduce((total, val) => total + val, 0);\r\n  let index = code % colorCombos.length;\r\n  return colorCombos[index];\r\n};\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Dialog,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport { ItemResults } from \"../Data/Items\";\r\nimport { GetColor } from \"../Data/Color\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    top: \"5% !important\",\r\n    left: \"5% !important\",\r\n    bottom: \"5% !important\",\r\n    right: \"5% !important\",\r\n  },\r\n  fullSize: {\r\n    height: \"100%\",\r\n    maxHeight: \"100%\",\r\n    width: \"100%\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  itemContainer: {\r\n    margin: 15,\r\n    border: \"1px solid black\",\r\n    borderRadius: 10,\r\n    overflow: \"auto\",\r\n    height: \"calc(100% - 30px)\",\r\n    width: \"80%\",\r\n    \"&::-webkit-scrollbar\": {\r\n      height: 10,\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n      \"-webkit-border-radius\": 10,\r\n      borderRadius: 10,\r\n      marginLeft: 10,\r\n      marginRight: 10,\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      \"-webkit-border-radius\": 10,\r\n      borderRadius: 10,\r\n      background: \"#402B56\",\r\n      \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.5)\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb:window-inactive\": {\r\n      background: \"#402B56\",\r\n    },\r\n  },\r\n  outerContainer: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  innerContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  infoContainer: {\r\n    width: \"20%\",\r\n    padding: 5,\r\n    paddingRight: 10,\r\n  },\r\n  contentContainer: {\r\n    padding: 15,\r\n  },\r\n  rationaleContainer: {\r\n    padding: 15,\r\n    \"&.correct\": {\r\n      borderTop: \"1px solid #8ADDAE\",\r\n      background: \"#dcffdc\",\r\n    },\r\n    \"&.incorrect\": {\r\n      borderTop: \"1px solid #CB7D75\",\r\n      background: \"#f8e7e6\",\r\n    },\r\n  },\r\n  appBar: {\r\n    background: \"#402B56\",\r\n    position: \"relative\",\r\n  },\r\n  navButtonContainer: {\r\n    margin: \"auto\",\r\n  },\r\n  title: {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    verticalAlign: \"middle\",\r\n  },\r\n  navButton: {\r\n    border: \"1px solid white\",\r\n    borderRadius: 0,\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    background: \"#312042\",\r\n    \"&.first\": {\r\n      borderTopLeftRadius: 10,\r\n      borderBottomLeftRadius: 10,\r\n      borderTopRightRadius: 0,\r\n      borderBottomRightRadius: 0,\r\n    },\r\n    \"&.last\": {\r\n      borderTopLeftRadius: 0,\r\n      borderBottomLeftRadius: 0,\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n    },\r\n  },\r\n  answerTable: {\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n    \"& td\": {\r\n      border: \"none\",\r\n      textAlign: \"center\",\r\n    },\r\n    \"& tr\": {\r\n      height: 64,\r\n      \"&.right\": {\r\n        border: \"1px solid #8ADDAE\",\r\n        background: \"#dcffdc\",\r\n      },\r\n      \"&.wrong\": {\r\n        border: \"1px solid #CB7D75\",\r\n        background: \"#f8e7e6\",\r\n      },\r\n    },\r\n  },\r\n  answer: {\r\n    border: \"none\",\r\n    textAlign: \"center\",\r\n  },\r\n  boldedRationale: {\r\n    fontWeight: \"bold\",\r\n    \"& p\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  skill: {\r\n    padding: 5,\r\n    border: \"1px solid black\",\r\n    borderRadius: 10,\r\n    cursor: \"default\",\r\n    userSelect: \"none\",\r\n  },\r\n});\r\n\r\nexport interface ItemReviewProperties {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  itemNumber: number | undefined;\r\n  section: string;\r\n  canNext: boolean;\r\n  canPrevious: boolean;\r\n  onNext: () => void;\r\n  onPrevious: () => void;\r\n  onFirst: () => void;\r\n  onLast: () => void;\r\n  title: string;\r\n}\r\n\r\nexport const ItemReview = ({\r\n  open,\r\n  onClose,\r\n  itemNumber,\r\n  section,\r\n  canNext,\r\n  canPrevious,\r\n  onNext,\r\n  onPrevious,\r\n  onFirst,\r\n  onLast,\r\n  title,\r\n}: ItemReviewProperties) => {\r\n  const classes = useStyles();\r\n\r\n  const item = ItemResults.filter(\r\n    (i) => i.section === section && i.number === itemNumber\r\n  )[0];\r\n\r\n  if (!item) return <></>;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      className={classes.root}\r\n      classes={{ container: classes.fullSize, paper: classes.fullSize }}\r\n    >\r\n      <AppBar className={classes.appBar} position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={onClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Box className={classes.navButtonContainer}>\r\n            <IconButton\r\n              className={`${classes.navButton} first`}\r\n              color=\"inherit\"\r\n              disabled={!canPrevious}\r\n              onClick={onFirst}\r\n            >\r\n              <FirstPageIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              className={classes.navButton}\r\n              color=\"inherit\"\r\n              disabled={!canPrevious}\r\n              onClick={onPrevious}\r\n            >\r\n              <NavigateBeforeIcon />\r\n            </IconButton>\r\n            <Typography display=\"inline\" variant=\"h6\" className={classes.title}>\r\n              {title}\r\n            </Typography>\r\n            <IconButton\r\n              className={classes.navButton}\r\n              color=\"inherit\"\r\n              disabled={!canNext}\r\n              onClick={onNext}\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              className={`${classes.navButton} last`}\r\n              color=\"inherit\"\r\n              disabled={!canNext}\r\n              onClick={onLast}\r\n            >\r\n              <LastPageIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box className={classes.outerContainer}>\r\n        <Box className={classes.innerContainer}>\r\n          <Box className={classes.itemContainer}>\r\n            <Box\r\n              className={classes.contentContainer}\r\n              dangerouslySetInnerHTML={{ __html: item.content }}\r\n            ></Box>\r\n            <Box\r\n              className={`${classes.rationaleContainer} ${\r\n                item.correct ? \"correct\" : \"incorrect\"\r\n              }`}\r\n            >\r\n              <Typography>\r\n                <b>Solution:</b> The correct answer is{\" \"}\r\n                <b>{item.correctAnswer}</b>.\r\n              </Typography>\r\n              <ol type=\"A\">\r\n                {item.answerRationales.map((rationale, index) => (\r\n                  <li\r\n                    key={index}\r\n                    className={\r\n                      item.correctAnswer.charCodeAt(0) ===\r\n                      \"A\".charCodeAt(0) + index\r\n                        ? classes.boldedRationale\r\n                        : \"\"\r\n                    }\r\n                  >\r\n                    <Typography>{rationale}</Typography>\r\n                  </li>\r\n                ))}\r\n              </ol>\r\n            </Box>\r\n          </Box>\r\n          <Box className={classes.infoContainer}>\r\n            <Table className={classes.answerTable}>\r\n              <TableBody>\r\n                <TableRow className={`${item.answer === \"\" ? \"wrong\" : \"\"}`}>\r\n                  <TableCell colSpan={2} className={classes.answer}>\r\n                    {item.correct ? (\r\n                      <Typography>Correct</Typography>\r\n                    ) : item.answer === \"\" ? (\r\n                      <Typography>Unanswered</Typography>\r\n                    ) : (\r\n                      <Typography>Incorrect</Typography>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow\r\n                  className={\r\n                    item.correctAnswer === \"A\"\r\n                      ? \"right\"\r\n                      : item.answer === \"A\"\r\n                      ? \"wrong\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  <TableCell>\r\n                    <Typography>A</Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>\r\n                      {item.correctAnswer === \"A\" && <CheckIcon />}\r\n                      {item.answer === \"A\" && !item.correct && <CloseIcon />}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow\r\n                  className={\r\n                    item.correctAnswer === \"B\"\r\n                      ? \"right\"\r\n                      : item.answer === \"B\"\r\n                      ? \"wrong\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  <TableCell>\r\n                    <Typography>B</Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>\r\n                      {item.correctAnswer === \"B\" && <CheckIcon />}\r\n                      {item.answer === \"B\" && !item.correct && <CloseIcon />}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow\r\n                  className={\r\n                    item.correctAnswer === \"C\"\r\n                      ? \"right\"\r\n                      : item.answer === \"C\"\r\n                      ? \"wrong\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  <TableCell>\r\n                    <Typography>C</Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>\r\n                      {item.correctAnswer === \"C\" && <CheckIcon />}\r\n                      {item.answer === \"C\" && !item.correct && <CloseIcon />}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow\r\n                  className={\r\n                    item.correctAnswer === \"D\"\r\n                      ? \"right\"\r\n                      : item.answer === \"D\"\r\n                      ? \"wrong\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  <TableCell>\r\n                    <Typography>D</Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>\r\n                      {item.correctAnswer === \"D\" && <CheckIcon />}\r\n                      {item.answer === \"D\" && !item.correct && <CloseIcon />}\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n            <Typography>\r\n              Time Taken:{\" \"}\r\n              {moment\r\n                .utc(\r\n                  moment\r\n                    .duration(item.timeInSeconds, \"seconds\")\r\n                    .asMilliseconds()\r\n                )\r\n                .format(\"m:ss\")}\r\n            </Typography>\r\n            <br />\r\n            <Typography>Content & Skills</Typography>\r\n            <br />\r\n            <Grid container spacing={2}>\r\n              {item.skills.map((skill, index) => (\r\n                <Grid item key={index}>\r\n                  <Tooltip title={skill.description}>\r\n                    <Typography\r\n                      className={classes.skill}\r\n                      style={{\r\n                        background: GetColor(skill.label).main,\r\n                        border: `1px solid ${GetColor(skill.label).darker}`,\r\n                      }}\r\n                    >\r\n                      {skill.label}\r\n                    </Typography>\r\n                  </Tooltip>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n","import {\r\n  IconButton,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport moment from \"moment\";\r\nimport { ItemResults } from \"../Data/Items\";\r\nimport { ItemReview } from \"./ItemReview\";\r\n\r\nconst useStyles = makeStyles({\r\n  centered: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport interface ItemsTableProperties {\r\n  sectionId: string;\r\n}\r\n\r\nexport const ItemsTable = ({ sectionId }: ItemsTableProperties) => {\r\n  const classes = useStyles();\r\n  const itemData = ItemResults.filter((i) => i.section === sectionId);\r\n\r\n  const maxItem = Math.max(...itemData.map((i) => i.number));\r\n  const [reviewItem, setReviewItem] = useState<number | undefined>();\r\n\r\n  return (\r\n    <>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.centered}>\r\n              <Typography>#</Typography>\r\n            </TableCell>\r\n            <TableCell className={classes.centered}>\r\n              <CheckIcon />\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography>Preview</Typography>\r\n            </TableCell>\r\n            <TableCell className={classes.centered}>\r\n              <Typography>Time</Typography>\r\n            </TableCell>\r\n            <TableCell className={classes.centered}>\r\n              <FlagIcon />\r\n            </TableCell>\r\n            <TableCell className={classes.centered}>\r\n              <VisibilityIcon />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {itemData.map((item) => (\r\n            <TableRow key={item.number}>\r\n              <TableCell className={classes.centered}>\r\n                <Typography>{item.number}</Typography>\r\n              </TableCell>\r\n              <TableCell className={classes.centered}>\r\n                {item.correct ? <CheckIcon /> : <ClearIcon />}\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography>{item.preview}</Typography>\r\n              </TableCell>\r\n              <TableCell className={classes.centered}>\r\n                <Typography>\r\n                  {moment\r\n                    .utc(\r\n                      moment\r\n                        .duration(item.timeInSeconds, \"seconds\")\r\n                        .asMilliseconds()\r\n                    )\r\n                    .format(\"m:ss\")}\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell className={classes.centered}>\r\n                {item.flagged && <FlagIcon />}\r\n              </TableCell>\r\n              <TableCell className={classes.centered}>\r\n                <IconButton onClick={() => setReviewItem(item.number)}>\r\n                  <VisibilityIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <ItemReview\r\n        open={reviewItem !== undefined}\r\n        onClose={() => setReviewItem(undefined)}\r\n        section={sectionId}\r\n        itemNumber={reviewItem}\r\n        canNext={(reviewItem || 0) < maxItem}\r\n        canPrevious={(reviewItem || 0) > 1}\r\n        onNext={() => setReviewItem((reviewItem || 0) + 1)}\r\n        onPrevious={() => setReviewItem((reviewItem || 0) - 1)}\r\n        onFirst={() => setReviewItem(1)}\r\n        onLast={() => setReviewItem(maxItem)}\r\n        title={`Item ${reviewItem} of ${maxItem}`}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { FormattedParagraph, FormattedSentence } from \"./Text\";\r\n\r\nexport class ItemHighlight {\r\n  constructor(\r\n    public number: number,\r\n    public section: string,\r\n    public highlights: Array<string>\r\n  ) {}\r\n}\r\n\r\nconst createHighlight = (maxItemNumber: number, section: string) => {\r\n  const paragraphRange = [1, 2];\r\n  const sentenceRange = [2, 5];\r\n  const highlightsRange = [1, 3];\r\n\r\n  const generateParagraphHighlight = () =>\r\n    FormattedParagraph(\r\n      Math.max(paragraphRange[0], Math.ceil(Math.random() * paragraphRange[1]))\r\n    );\r\n  const generateSentenceHighlight = () =>\r\n    FormattedSentence(\r\n      Math.max(sentenceRange[0], Math.ceil(Math.random() * sentenceRange[1]))\r\n    );\r\n  const generateHighlight = () =>\r\n    Math.random() >= 0.5\r\n      ? generateParagraphHighlight()\r\n      : generateSentenceHighlight();\r\n  const generateHighlights = () =>\r\n    [\r\n      ...new Array(\r\n        highlightsRange[0] + Math.floor(Math.random() * highlightsRange[1])\r\n      ),\r\n    ].map(generateHighlight);\r\n\r\n  let item = Math.ceil(Math.random() * (maxItemNumber - 1));\r\n\r\n  return new ItemHighlight(item, section, generateHighlights());\r\n};\r\n\r\nconst createItemHighlights = (\r\n  number: number,\r\n  maxItem: number,\r\n  section: string\r\n) =>\r\n  [...new Array(number)]\r\n    .map(() => createHighlight(maxItem, section))\r\n    .sort((a, b) => a.number - b.number);\r\n\r\nexport const CandidateHighlights: Array<ItemHighlight> = [\r\n  ...createItemHighlights(5, 59, \"CPFBS\"),\r\n  ...createItemHighlights(2, 53, \"CARS\"),\r\n  ...createItemHighlights(7, 59, \"BBFLS\"),\r\n  ...createItemHighlights(4, 59, \"PSBFB\"),\r\n];\r\n","import {\r\n  Box,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { CandidateHighlights } from \"../Data/Highlights\";\r\nimport { ItemReview } from \"./ItemReview\";\r\n\r\nconst useStyles = makeStyles({\r\n  itemHighlight: {\r\n    padding: 15,\r\n    marginBottom: 15,\r\n  },\r\n  itemHighlightHeader: {\r\n    margin: 5,\r\n  },\r\n  highlightContent: {\r\n    borderLeft: \"3px solid #F8B332\",\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n    marginLeft: 25,\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n  },\r\n  previewButton: {\r\n    float: \"right\",\r\n  },\r\n});\r\n\r\nexport interface HighlightsProperties {\r\n  sectionId: string;\r\n}\r\n\r\nexport const Highlights = ({ sectionId }: HighlightsProperties) => {\r\n  const classes = useStyles();\r\n  const itemHighlights = CandidateHighlights.filter(\r\n    (h) => h.section === sectionId\r\n  );\r\n\r\n  const [reviewIndex, setReviewIndex] = useState<number | undefined>();\r\n\r\n  return (\r\n    <>\r\n      {itemHighlights.map((itemHighlight, index) => (\r\n        <Paper\r\n          elevation={3}\r\n          key={`item-${itemHighlight.number}`}\r\n          className={classes.itemHighlight}\r\n        >\r\n          <Typography\r\n            display=\"inline\"\r\n            variant=\"h6\"\r\n            className={classes.itemHighlightHeader}\r\n          >\r\n            Item {itemHighlight.number}\r\n          </Typography>\r\n          <IconButton\r\n            className={classes.previewButton}\r\n            onClick={() => setReviewIndex(index)}\r\n          >\r\n            <VisibilityIcon />\r\n          </IconButton>\r\n          {itemHighlight.highlights.map((highlight, index) => (\r\n            <Box key={index} className={classes.highlightContent}>\r\n              <blockquote\r\n                dangerouslySetInnerHTML={{ __html: highlight }}\r\n              ></blockquote>\r\n            </Box>\r\n          ))}\r\n        </Paper>\r\n      ))}\r\n      <ItemReview\r\n        open={reviewIndex !== undefined}\r\n        onClose={() => setReviewIndex(undefined)}\r\n        section={sectionId}\r\n        itemNumber={itemHighlights[reviewIndex || 0].number}\r\n        canNext={(reviewIndex || 0) < itemHighlights.length - 1}\r\n        canPrevious={(reviewIndex || 0) > 0}\r\n        onNext={() => setReviewIndex((reviewIndex || 0) + 1)}\r\n        onPrevious={() => setReviewIndex((reviewIndex || 0) - 1)}\r\n        onFirst={() => setReviewIndex(0)}\r\n        onLast={() => setReviewIndex(itemHighlights.length - 1)}\r\n        title={`Highlight ${(reviewIndex || 0) + 1} of ${\r\n          itemHighlights.length\r\n        } (Item ${itemHighlights[reviewIndex || 0].number})`}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SkillData } from \"../Data/Skills\";\r\n\r\nexport interface ContentAreaBarGraphProperties {\r\n  width: number;\r\n  height: number;\r\n  margin?: { top: number; left: number; bottom: number; right: number };\r\n  segmentMargin?: { left: number; right: number };\r\n  skills: Array<SkillData>;\r\n}\r\n\r\nexport const ContentAreaBarGraph = ({\r\n  width,\r\n  height,\r\n  margin = { top: 10, left: 10, bottom: 50, right: 10 },\r\n  segmentMargin = { left: 5, right: 5 },\r\n  skills,\r\n}: ContentAreaBarGraphProperties) => {\r\n  const contentHeight = height - (margin.top + margin.bottom);\r\n  const contentWidth = width - (margin.left + margin.right);\r\n\r\n  const max = Math.max(...skills.map((skill) => skill.items));\r\n  const segmentWidth = contentWidth / skills.length;\r\n  const segmentContentWidth =\r\n    segmentWidth - (segmentMargin.left + segmentMargin.right);\r\n  const segmentHeight = (val: number) => (contentHeight / max) * val;\r\n\r\n  return (\r\n    <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\r\n      <g transform={`translate(${margin.left},${margin.top})`}>\r\n        {skills.map((skill, index) => (\r\n          <g key={index}>\r\n            <rect\r\n              fill=\"lightyellow\"\r\n              stroke=\"black\"\r\n              strokeDasharray={4}\r\n              y={contentHeight - segmentHeight(skill.items)}\r\n              x={segmentWidth * index + segmentMargin.left}\r\n              width={segmentContentWidth}\r\n              height={segmentHeight(skill.items)}\r\n            />\r\n            <rect\r\n              fill=\"#F8B332\"\r\n              stroke=\"black\"\r\n              strokeWidth={2}\r\n              y={contentHeight - segmentHeight(skill.correct)}\r\n              x={segmentWidth * index + segmentMargin.left}\r\n              width={segmentContentWidth}\r\n              height={segmentHeight(skill.correct)}\r\n            />\r\n            <text\r\n              x={\r\n                segmentWidth * index +\r\n                segmentMargin.left +\r\n                segmentContentWidth / 2\r\n              }\r\n              y={contentHeight + 15}\r\n              textAnchor=\"middle\"\r\n            >\r\n              {skill.skill.label}\r\n            </text>\r\n          </g>\r\n        ))}\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","import {\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { SkillData } from \"../Data/Skills\";\r\n\r\nconst useStyles = makeStyles({\r\n  acronym: {\r\n    width: \"10%\",\r\n  },\r\n  description: {},\r\n  items: {\r\n    textAlign: \"center\",\r\n    width: \"10%\",\r\n  },\r\n  correct: {\r\n    textAlign: \"center\",\r\n    width: \"10%\",\r\n  },\r\n  centered: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport interface SkillsBreakdownTableProperties {\r\n  skills: Array<SkillData>;\r\n}\r\n\r\nexport const SkillsBreakdownTable = ({\r\n  skills,\r\n}: SkillsBreakdownTableProperties) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell className={classes.acronym}>\r\n            <Typography>Acronym</Typography>\r\n          </TableCell>\r\n          <TableCell className={classes.description}>\r\n            <Typography>Description</Typography>\r\n          </TableCell>\r\n          <TableCell className={classes.items}>\r\n            <Typography>Items</Typography>\r\n          </TableCell>\r\n          <TableCell className={classes.correct}>\r\n            <Typography>Correct</Typography>\r\n          </TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {skills.map((skill, index) => (\r\n          <TableRow key={index}>\r\n            <TableCell>\r\n              <Typography>{skill.skill.label}</Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography>{skill.skill.description}</Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography className={classes.centered}>\r\n                {skill.items}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography className={classes.centered}>\r\n                {skill.correct}\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { SkillsGroups } from \"../Data/Skills\";\r\nimport { ContentAreaBarGraph } from \"../Graphics/ContentAreaBarGraph\";\r\nimport { SkillsBreakdownTable } from \"./SkillsBreakdownTable\";\r\n\r\nconst useStyles = makeStyles({\r\n  verticalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  horizontalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  skillsGroup: {\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n  },\r\n  graphContainer: {\r\n    marginTop: \"auto\",\r\n    marginBottom: \"auto\",\r\n  },\r\n  overallLabel: {\r\n    marginTop: 30,\r\n    paddingBottom: 10,\r\n    borderBottom: \"1px solid lightgray\",\r\n  },\r\n  mainLabel: {\r\n    marginTop: \"auto\",\r\n    marginBottom: \"auto\",\r\n    marginLeft: 30,\r\n    marginRight: 30,\r\n  },\r\n});\r\n\r\nexport const SkillsBreakdown = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      {SkillsGroups.map((group, index) => (\r\n        <Box\r\n          key={index}\r\n          className={`${classes.verticalStack} ${classes.skillsGroup}`}\r\n        >\r\n          {group.label && (\r\n            <Box\r\n              className={`${classes.horizontalStack} ${classes.overallLabel}`}\r\n            >\r\n              <Typography\r\n                variant=\"h4\"\r\n                display=\"inline\"\r\n                className={classes.mainLabel}\r\n              >\r\n                {group.label}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" display=\"inline\">\r\n                {group.description}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          <Box className={classes.horizontalStack}>\r\n            <Box\r\n              className={`${classes.verticalStack} ${classes.graphContainer}`}\r\n            >\r\n              <ContentAreaBarGraph\r\n                width={300}\r\n                height={300}\r\n                margin={{ top: 50, left: 10, bottom: 50, right: 10 }}\r\n                skills={group.skills}\r\n              />\r\n            </Box>\r\n            <SkillsBreakdownTable skills={group.skills} />\r\n          </Box>\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Slide,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport { OverallDataKey } from \"../Data/Overall\";\r\nimport { SectionData } from \"../Data/Sections\";\r\nimport { ScoreDistribution } from \"../Graphics/ScoreDistribution\";\r\nimport { ItemsTable } from \"./ItemsTable\";\r\nimport { Highlights } from \"./Highlights\";\r\nimport { SkillsBreakdown } from \"./SkillsBreakdown\";\r\n\r\nconst useStyles = makeStyles({\r\n  verticalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  horizontalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  backNavigation: {\r\n    marginTop: -50,\r\n  },\r\n  detailCard: {\r\n    textAlign: \"center\",\r\n    verticalAlign: \"middle\",\r\n    margin: 10,\r\n    minWidth: 210,\r\n  },\r\n  scoreCurve: {\r\n    \"& svg\": {\r\n      margin: \"auto\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface SectionDetailsProperties {\r\n  onNavigate: (to: string) => void;\r\n  section: SectionData;\r\n}\r\n\r\nexport const SectionDetails = ({\r\n  onNavigate,\r\n  section,\r\n}: SectionDetailsProperties) => {\r\n  const classes = useStyles();\r\n  const [tab, setTab] = React.useState(0);\r\n\r\n  const onTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setTab(newValue);\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => onNavigate(OverallDataKey)}\r\n        className={classes.backNavigation}\r\n      >\r\n        <ArrowBackIcon />\r\n        <Typography>Back To Summary</Typography>\r\n      </Button>\r\n      <Box className={classes.verticalStack}>\r\n        <Box className={classes.horizontalStack}>\r\n          <Slide direction=\"right\" in={true} timeout={500}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">{section.scaledScore}</Typography>\r\n                    <Typography variant=\"subtitle2\">Scaled Score</Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">{section.percentage}%</Typography>\r\n                    <Typography variant=\"subtitle2\">Percentile Rank</Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">\r\n                      {section.questionsCorrect} of {section.totalQuestions}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      Questions Correct\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">{section.incomplete}</Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      Questions Incomplete\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">\r\n                      {section.flaggedCorrect}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      <FlagIcon /> Correct\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">\r\n                      {section.flaggedIncorrect}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      <FlagIcon /> Incorrect\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Slide>\r\n          <Box className={`${classes.scoreCurve} ${classes.verticalStack}`}>\r\n            <ScoreDistribution\r\n              height={250}\r\n              width={500}\r\n              margin={{ top: 10, left: 10, bottom: 20, right: 10 }}\r\n              leftLabel={section.minScaledScore.toString()}\r\n              rightLabel={section.maxScaledScore.toString()}\r\n              score={section.scaledScore.toString()}\r\n              percentage={section.percentage}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Tabs value={tab} onChange={onTabChange}>\r\n          <Tab label=\"Question Review\" />\r\n          <Tab label=\"Highlights\" />\r\n          <Tab label=\"Content & Skills Breakdown\" />\r\n        </Tabs>\r\n        {tab === 0 && (\r\n          <Slide direction=\"up\" in={true} timeout={500}>\r\n            <Box>\r\n              <ItemsTable sectionId={section.id} />\r\n            </Box>\r\n          </Slide>\r\n        )}\r\n        {tab === 1 && (\r\n          <Slide direction=\"up\" in={true} timeout={500}>\r\n            <Box>\r\n              <Highlights sectionId={section.id} />\r\n            </Box>\r\n          </Slide>\r\n        )}\r\n        {tab === 2 && (\r\n          <Slide direction=\"up\" in={true} timeout={500}>\r\n            <Box>\r\n              <SkillsBreakdown />\r\n            </Box>\r\n          </Slide>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport { Box, Container, Slide } from \"@material-ui/core\";\n\nimport { ReportHeader } from \"./Header/ReportHeader\";\nimport { Summary } from \"./Summary/Summary\";\nimport { SectionDetails } from \"./Section/SectionDetails\";\nimport { OverallDataKey } from \"./Data/Overall\";\nimport { SectionResults } from \"./Data/Sections\";\n\nexport const App = () => {\n  const [viewing, setViewing] = useState(OverallDataKey);\n\n  return (\n    <>\n      <ReportHeader onNavigate={(to: string) => setViewing(to)} />\n      <Container>\n        {viewing === OverallDataKey && (\n          <Slide direction=\"right\" in={true}>\n            <Box>\n              <Summary onNavigate={(to: string) => setViewing(to)} />\n            </Box>\n          </Slide>\n        )}\n        {SectionResults.map((section) => (\n          <Box key={section.id}>\n            {viewing === section.id && (\n              <Slide direction=\"left\" in={true}>\n                <Box>\n                  <SectionDetails\n                    onNavigate={(to: string) => setViewing(to)}\n                    section={section}\n                  />\n                </Box>\n              </Slide>\n            )}\n          </Box>\n        ))}\n      </Container>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}