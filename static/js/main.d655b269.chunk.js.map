{"version":3,"sources":["Header/HeaderBanner.tsx","Graphics/ScoreDistribution.tsx","Data/Sections.ts","Header/ReportHeader.tsx","Data/Overall.ts","Help/ScaledScore.tsx","Help/PercentileRanks.tsx","Summary/OverallSummary.tsx","Summary/SectionSummary.tsx","Summary/Summary.tsx","Data/Text.ts","Data/Skills.ts","Data/Items.ts","Section/ItemReview/ReviewHeader.tsx","Data/Annotations.ts","Utils/Selection.ts","Section/ItemReview/AnnotationContainer.tsx","Section/ItemReview/ContentContainer.tsx","Data/Color.ts","Help/ContentAndSkills.tsx","Section/ItemReview/InfoContainer.tsx","Section/ItemReview/ReviewDialog.tsx","Section/ItemsTable.tsx","Data/Highlights.ts","Section/Highlights.tsx","Graphics/ContentAreaBarGraph.tsx","Section/SkillsBreakdownTable.tsx","Section/SkillsBreakdown.tsx","Section/SectionDetails.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","root","background","position","marginBottom","content","left","top","width","height","borderLeft","borderRight","borderTop","clear","HeaderBanner","children","classes","Slide","direction","in","timeout","Box","className","Container","ScoreDistribution","margin","bottom","right","leftLabel","rightLabel","score","percentage","textColor","textSize","contentHeight","contentWidth","calcY","x","Math","E","sqrt","PI","f","points","Array","map","_","getPercentageX","p","useState","renderedPercentage","setRenderedPercentage","useEffect","setTimeout","min","clearTimeout","viewBox","style","userSelect","y","fontSize","fill","textAnchor","transform","d","filter","i","join","stroke","strokeWidth","cx","cy","r","x1","y1","x2","y2","strokeDasharray","SectionResults","id","name","minScaledScore","maxScaledScore","scaledScore","totalQuestions","questionsCorrect","incomplete","averageQuestionTimeInSeconds","flaggedCorrect","flaggedIncorrect","header","color","paddingBottom","textAlign","headerTitle","padding","scoreComponent","maxWidth","marginLeft","marginRight","verticalStack","display","flexDirection","horizontalStack","even","justifyContent","spread","overallLabel","navButton","cursor","textDecoration","ReportHeader","onNavigate","Typography","variant","section","toString","onClick","OverallDataKey","OverallResults","percent","timeSpentInSeconds","dateAttempted","ScaledScoreHelp","forSection","open","setOpen","Tooltip","title","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","PercentileRankHelp","Link","rel","target","href","detailsGrid","detailCard","verticalAlign","minWidth","scoreCurve","marginTop","timeMultiplier","fontStyle","float","OverallSummary","Grid","container","justify","alignItems","item","Card","CardContent","moment","utc","duration","asMilliseconds","format","Date","toLocaleDateString","SectionSummary","Table","TableHead","TableRow","TableCell","TableBody","Summary","lorem","LoremIpsum","sentencesPerParagraph","max","wordsPerSentence","Identifier","length","result","characters","charactersLength","charAt","floor","random","Sentence","number","generateSentences","formatted","text","bold","italic","underline","spans","words","split","index","spanLength","spanStart","spanEnd","span","slice","roll","push","FormattedSentence","FormattedParagraph","generateParagraphs","SkillGroup","label","description","skills","totalItems","reduce","total","skill","items","this","ceil","SkillData","correct","Skill","SkillsGroups","ItemData","timeInSeconds","flagged","preview","correctAnswer","answer","answerRationales","chance","round","start","substr","answers","correctAnswerIndex","createItems","count","ItemResults","appBar","navButtonContainer","border","borderRadius","paddingTop","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","ReviewHeader","close","canPrevious","canNext","goFirst","goBackward","goForward","goLast","AppBar","Toolbar","IconButton","edge","aria-label","disabled","UserAnnotationWrapper","data","GetAnnotationKey","key","Object","assign","EnsureHighlights","range","overallHighlight","GetOverallHighlight","individualHighlights","GetIndividualHighlights","selection","document","createRange","setStart","getElementAtAddress","startAddress","startOffset","setEnd","endAddress","endOffset","getIndividualRanges","getAddress","address","current","testNode","previousSibling","unshift","parentNode","element","childNodes","elements","singleElement","startContainer","endContainer","startRange","indexOf","getIndividualLetterRanges","undefined","endRange","nextStart","getNextElement","nextEnd","getPreviousElement","middleRange","currentElement","nextSibling","parentElement","hasChildNodes","firstChild","lastChild","end","ranges","nodeType","Node","TEXT_NODE","elementSize","subIndex","e","nodeIndex","childNodeRanges","pointerEvents","addNote","zIndex","annotationActions","annotationDialog","annotationContent","annotationHighlight","annotationNote","AnnotationContainer","displayAnnotations","annotations","addAnnotation","updateAnnotation","removeAnnotation","outerRef","useRef","newRange","setNewRange","openAnnotation","setOpenAnnotation","editText","setEditText","annotationHover","setAnnotationHover","annotationHighlights","setAnnotationHighlights","getOuterStationaryRect","getBoundingClientRect","currentRef","onPointerUp","window","getSelection","annotationRange","GetAnnotationRange","getRangeAt","annotation","addEventListener","removeEventListener","paper","TextField","autoFocus","multiline","value","onChange","event","note","empty","removeAllRanges","saveAnnotation","highlight","Fade","appear","exit","onMouseEnter","onMouseLeave","onEditAnnotationClicked","rangeIndex","onMouseOver","ref","itemContainer","overflow","overflowX","contentContainer","rationaleContainer","boldedRationale","fontWeight","ContentContainer","annotationVisibility","setAnnotations","updated","AddAnnotation","UpdateAnnotation","RemoveAnnotation","dangerouslySetInnerHTML","__html","type","rationale","charCodeAt","ColorCombo","main","darker","colorCombos","GetColor","code","c","val","ContentAndSkillsHelp","infoContainer","paddingRight","overflowY","infoContainerInner","answerTable","answerLabelCell","InfoContainer","toggleAnnotationVisibility","colSpan","spacing","fullSize","maxHeight","outerContainer","innerContainer","ReviewDialog","onClose","itemNumber","onNext","onPrevious","onFirst","onLast","setDirection","centered","smallColumn","ItemsTable","sectionId","itemData","reviewItem","setReviewItem","setItems","correctnessFilter","setCorrectnessFilter","flaggedFilter","setFlaggedFilter","getItemData","newFilter","ItemHighlight","highlights","createHighlight","maxItemNumber","paragraphRange","sentenceRange","highlightsRange","generateHighlight","createItemHighlights","maxItem","sort","a","b","CandidateHighlights","itemHighlight","itemHighlightHeader","highlightContent","previewButton","Highlights","itemHighlights","h","reviewIndex","setReviewIndex","Paper","elevation","ContentAreaBarGraph","segmentMargin","segmentWidth","segmentContentWidth","segmentHeight","acronym","review","SkillsBreakdownTable","onReview","skillIndex","skillsGroup","graphContainer","borderBottom","mainLabel","SkillsBreakdown","reviewIndexStart","setReviewIndexStart","reviewIndexEnd","setReviewIndexEnd","startIndex","numberOfItems","group","backNavigation","SectionDetails","React","tab","setTab","Tabs","newValue","Tab","App","viewing","setViewing","to","ReactDOM","render","StrictMode","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.d655b269.chunk.js","sourcesContent":["import { Box, Container, makeStyles, Slide } from \"@material-ui/core\";\r\nimport React, { FunctionComponent } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: \"#402B56\",\r\n    position: \"relative\",\r\n    marginBottom: 55,\r\n    \"&::after\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      left: \"calc(50% - 100px)\",\r\n      top: \"100%\",\r\n      width: 0,\r\n      height: 0,\r\n      borderLeft: \"100px solid transparent\",\r\n      borderRight: \"100px solid transparent\",\r\n      borderTop: \"50px solid #402b56\",\r\n      clear: \"both\",\r\n    },\r\n  },\r\n});\r\n\r\nexport const HeaderBanner: FunctionComponent = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide direction=\"down\" in={true} timeout={500}>\r\n      <Box className={classes.root}>\r\n        <Container>\r\n          <Box>{children}</Box>\r\n        </Container>\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport interface ScoreDistributionProperties {\r\n  height: number;\r\n  width: number;\r\n  margin?: { top: number; left: number; bottom: number; right: number };\r\n  leftLabel?: string;\r\n  rightLabel?: string;\r\n  score?: string;\r\n  percentage: number;\r\n  textColor?: string;\r\n  textSize?: string;\r\n}\r\n\r\nexport const ScoreDistribution = ({\r\n  height,\r\n  width,\r\n  margin = { top: 10, left: 10, bottom: 10, right: 10 },\r\n  leftLabel = \"\",\r\n  rightLabel = \"\",\r\n  score = \"\",\r\n  percentage,\r\n  textColor = \"black\",\r\n  textSize = \"large\",\r\n}: ScoreDistributionProperties) => {\r\n  const contentHeight = height - (margin.top + margin.bottom);\r\n  const contentWidth = width - (margin.left + margin.right);\r\n\r\n  const mean = 0;\r\n  const stDev = 1;\r\n  const scaleMin = -2.75;\r\n  const scaleMax = 2.75;\r\n\r\n  const f = (x: number) =>\r\n    Math.E ** -((x - mean) ** 2 / (2 * stDev ** 2)) /\r\n    (stDev * Math.sqrt(2 * Math.PI));\r\n\r\n  const scale = (i: number) =>\r\n    (i * (scaleMax - scaleMin)) / contentWidth + scaleMin;\r\n\r\n  const calcY = (x: number) => contentHeight - f(scale(x)) * contentHeight * 2;\r\n\r\n  const points = [...new Array(contentWidth)].map((_, x) => calcY(x));\r\n\r\n  const getPercentageX = (p: number) => contentWidth * (p / 100);\r\n  const [renderedPercentage, setRenderedPercentage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let timeout = setTimeout(\r\n      () => setRenderedPercentage(Math.min(renderedPercentage + 1, percentage)),\r\n      percentage - renderedPercentage > 10 ? 10 : 20\r\n    );\r\n    return () => clearTimeout(timeout);\r\n  }, [percentage, renderedPercentage]);\r\n\r\n  return (\r\n    <svg\r\n      viewBox={`0 0 ${width} ${height}`}\r\n      width={width}\r\n      height={height}\r\n      style={{ userSelect: \"none\" }}\r\n    >\r\n      <text x={5} y={height - 5} fontSize={textSize} fill={textColor}>\r\n        {leftLabel}\r\n      </text>\r\n      <text\r\n        x={width - 5}\r\n        y={height - 5}\r\n        fontSize={textSize}\r\n        textAnchor=\"end\"\r\n        fill={textColor}\r\n      >\r\n        {rightLabel}\r\n      </text>\r\n      <g transform={`translate(${margin.left} ${margin.top})`}>\r\n        <path\r\n          d={`M 0 0 ${points\r\n            .filter((_, i) => i < getPercentageX(renderedPercentage))\r\n            .map((p, i) => `L ${i} ${p}`)\r\n            .join(\" \")} L ${getPercentageX(renderedPercentage)} ${calcY(\r\n            getPercentageX(renderedPercentage)\r\n          )} L ${getPercentageX(\r\n            renderedPercentage\r\n          )} ${contentHeight} L 0 ${contentHeight}`}\r\n          stroke=\"none\"\r\n          fill=\"#F8B332\"\r\n        />\r\n        <path\r\n          d={`M 0 ${points[0]} ${points\r\n            .map((p, i) => `L ${i} ${p}`)\r\n            .join(\" \")}`}\r\n          fill=\"none\"\r\n          stroke=\"black\"\r\n          strokeWidth={2}\r\n        />\r\n        <circle\r\n          cx={getPercentageX(renderedPercentage)}\r\n          cy={calcY(getPercentageX(renderedPercentage)) - 5}\r\n          r={5}\r\n          fill=\"red\"\r\n          stroke=\"none\"\r\n        />\r\n        <line\r\n          x1={getPercentageX(renderedPercentage)}\r\n          y1={contentHeight}\r\n          x2={getPercentageX(renderedPercentage)}\r\n          y2={calcY(getPercentageX(renderedPercentage))}\r\n          stroke=\"red\"\r\n          strokeDasharray={2}\r\n        />\r\n        {renderedPercentage >= percentage && (\r\n          <text\r\n            x={getPercentageX(renderedPercentage)}\r\n            y={calcY(getPercentageX(renderedPercentage)) - 15}\r\n            textAnchor=\"middle\"\r\n            fontSize={textSize}\r\n            fill={textColor}\r\n          >\r\n            {score}\r\n          </text>\r\n        )}\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","export interface SectionData {\r\n  id: string;\r\n  name: string;\r\n  minScaledScore: number;\r\n  maxScaledScore: number;\r\n  scaledScore: number;\r\n  percentage: number;\r\n  totalQuestions: number;\r\n  questionsCorrect: number;\r\n  incomplete: number;\r\n  averageQuestionTimeInSeconds: number;\r\n  flaggedCorrect: number;\r\n  flaggedIncorrect: number;\r\n}\r\n\r\nexport const SectionResults: Array<SectionData> = [\r\n  {\r\n    id: \"CPFBS\",\r\n    name: \"Chemical and Physical Foundations of Biological Systems\",\r\n    minScaledScore: 118,\r\n    maxScaledScore: 132,\r\n    scaledScore: 127,\r\n    percentage: 85,\r\n    totalQuestions: 59,\r\n    questionsCorrect: 43,\r\n    incomplete: 2,\r\n    averageQuestionTimeInSeconds: 132,\r\n    flaggedCorrect: 15,\r\n    flaggedIncorrect: 3,\r\n  },\r\n  {\r\n    id: \"CARS\",\r\n    name: \"Critical Analysis and Reasoning Skills\",\r\n    minScaledScore: 118,\r\n    maxScaledScore: 132,\r\n    scaledScore: 125,\r\n    percentage: 50,\r\n    totalQuestions: 53,\r\n    questionsCorrect: 30,\r\n    incomplete: 10,\r\n    averageQuestionTimeInSeconds: 212,\r\n    flaggedCorrect: 5,\r\n    flaggedIncorrect: 12,\r\n  },\r\n  {\r\n    id: \"BBFLS\",\r\n    name: \"Biological and Biomechanical Foundations of Living Systems\",\r\n    minScaledScore: 118,\r\n    maxScaledScore: 132,\r\n    scaledScore: 128,\r\n    percentage: 83,\r\n    totalQuestions: 59,\r\n    questionsCorrect: 48,\r\n    incomplete: 0,\r\n    averageQuestionTimeInSeconds: 141,\r\n    flaggedCorrect: 0,\r\n    flaggedIncorrect: 1,\r\n  },\r\n  {\r\n    id: \"PSBFB\",\r\n    name: \"Psychological, Social, and Biological Foundations of Behavior\",\r\n    minScaledScore: 118,\r\n    maxScaledScore: 132,\r\n    scaledScore: 129,\r\n    percentage: 87,\r\n    totalQuestions: 59,\r\n    questionsCorrect: 49,\r\n    incomplete: 0,\r\n    averageQuestionTimeInSeconds: 143,\r\n    flaggedCorrect: 0,\r\n    flaggedIncorrect: 0,\r\n  },\r\n];\r\n","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { HeaderBanner } from \"./HeaderBanner\";\r\nimport { ScoreDistribution } from \"../Graphics/ScoreDistribution\";\r\nimport { SectionResults } from \"../Data/Sections\";\r\n\r\nconst useStyles = makeStyles({\r\n  header: {\r\n    color: \"white\",\r\n    paddingBottom: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  headerTitle: {\r\n    userSelect: \"none\",\r\n    padding: 25,\r\n  },\r\n  scoreComponent: {\r\n    maxWidth: 250,\r\n    \"& svg\": {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  verticalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  horizontalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  even: {\r\n    justifyContent: \"space-around\",\r\n  },\r\n  spread: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n  overallLabel: {\r\n    textAlign: \"center\",\r\n  },\r\n  navButton: {\r\n    userSelect: \"none\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface ReportHeaderProperties {\r\n  onNavigate: (to: string) => void;\r\n}\r\n\r\nexport const ReportHeader = ({ onNavigate }: ReportHeaderProperties) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <HeaderBanner>\r\n      <Box className={`${classes.header} ${classes.verticalStack}`}>\r\n        <Typography variant=\"h4\" className={classes.headerTitle}>\r\n          MCAT Practice Exam Results\r\n        </Typography>\r\n        <Box className={`${classes.horizontalStack} ${classes.even}`}>\r\n          {SectionResults.map((section) => (\r\n            <Box\r\n              key={section.id}\r\n              className={`${classes.scoreComponent} ${classes.verticalStack}`}\r\n            >\r\n              <ScoreDistribution\r\n                height={125}\r\n                width={250}\r\n                margin={{ top: 10, left: 10, bottom: 20, right: 10 }}\r\n                leftLabel={section.minScaledScore.toString()}\r\n                rightLabel={section.maxScaledScore.toString()}\r\n                score={section.scaledScore.toString()}\r\n                percentage={section.percentage}\r\n                textColor=\"white\"\r\n                textSize=\"default\"\r\n              />\r\n              <Typography\r\n                onClick={() => onNavigate(section.id)}\r\n                className={classes.navButton}\r\n              >\r\n                {section.name}\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    </HeaderBanner>\r\n  );\r\n};\r\n","export const OverallDataKey = \"summary\";\r\nexport interface OverallData {\r\n  minScaledScore: number;\r\n  maxScaledScore: number;\r\n  scaledScore: number;\r\n  percent: number;\r\n  totalQuestions: number;\r\n  questionsCorrect: number;\r\n  timeSpentInSeconds: number;\r\n  dateAttempted: number;\r\n}\r\n\r\nexport const OverallResults: OverallData = {\r\n  minScaledScore: 472,\r\n  maxScaledScore: 528,\r\n  scaledScore: 511,\r\n  percent: 82,\r\n  totalQuestions: 230,\r\n  questionsCorrect: 201,\r\n  timeSpentInSeconds: 35500,\r\n  dateAttempted: 1612293247790,\r\n};\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\n\r\nexport interface ScaledScoreHelpProperties {\r\n  forSection: boolean;\r\n}\r\n\r\nexport const ScaledScoreHelp = ({ forSection }: ScaledScoreHelpProperties) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Tooltip\r\n        title={\r\n          forSection ? (\r\n            <Typography variant=\"subtitle2\">\r\n              Your section score will range from a low of 118 to a high of 132.\r\n              Learn more about scaled scores by clicking this icon.\r\n            </Typography>\r\n          ) : (\r\n            <Typography variant=\"subtitle2\">\r\n              Your total score is the sum of the four individual section scores\r\n              and will range from 472 to 528. Learn more about scaled scores by\r\n              clicking this icon.\r\n            </Typography>\r\n          )\r\n        }\r\n      >\r\n        <HelpIcon\r\n          fontSize=\"small\"\r\n          style={{ fontSize: \"1rem\", marginLeft: 5, cursor: \"pointer\" }}\r\n          onClick={() => setOpen(true)}\r\n        />\r\n      </Tooltip>\r\n      <Dialog open={open}>\r\n        <DialogTitle>Scaled Score</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You will receive a separate score for each of the four sections of\r\n            the MCAT exam, as well as a total score. Each section is scored from\r\n            a low of 118 to a high of 132. Your total score is the sum of the\r\n            four individual section scores and will range from 472 to 528. There\r\n            is no penalty for guessing on the MCAT exam or on MCAT Official Prep\r\n            practice exams.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Link,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\n\r\nexport const PercentileRankHelp = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <Tooltip\r\n        title={\r\n          <Typography variant=\"subtitle2\">\r\n            The percentile ranks provided on your score reports are the same\r\n            ones used for the actual MCAT exam. They show how your scores\r\n            compare to the scores of everyone who sat for the actual MCAT exam.\r\n            Click this icon for more information about interpreting your\r\n            results.\r\n          </Typography>\r\n        }\r\n      >\r\n        <HelpIcon\r\n          fontSize=\"small\"\r\n          style={{ fontSize: \"1rem\", marginLeft: 5, cursor: \"pointer\" }}\r\n          onClick={() => setOpen(true)}\r\n        />\r\n      </Tooltip>\r\n      <Dialog open={open}>\r\n        <DialogTitle>Percentile Ranks</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            The percentile ranks provided on your score reports are the same\r\n            ones used for the actual MCAT exam. They show the percentages of\r\n            examinees on the actual MCAT exam who received the same or lower\r\n            score on the exam than your practice exam score. They show how your\r\n            scores compare to the scores of everyone who sat for the actual MCAT\r\n            exam. Every year on May 1, the percentile ranks are updated using\r\n            data from the most recent three years. The percentile rank shown in\r\n            your score report reflects the percentile rank in use when you began\r\n            the attempt of the practice exam. For example, if you began an\r\n            attempt on a practice exam in April 2019, your score report reflects\r\n            the percentile rank updated in May 2018. If you begin a practice\r\n            exam in June 2019, your percentile rank will reflect the new\r\n            percentile rank, updated in May 2019. A more detailed description of\r\n            MCAT percentile ranks can be found{\" \"}\r\n            <Link\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://students-residents.aamc.org/advisors/article/percentile-ranks-for-the-mcat-exam/\"\r\n            >\r\n              here\r\n            </Link>\r\n            .\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Slide,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nimport { OverallResults } from \"../Data/Overall\";\r\nimport { ScoreDistribution } from \"../Graphics/ScoreDistribution\";\r\nimport { ScaledScoreHelp } from \"../Help/ScaledScore\";\r\nimport { PercentileRankHelp } from \"../Help/PercentileRanks\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginBottom: 20,\r\n  },\r\n  verticalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  horizontalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  even: {\r\n    justifyContent: \"space-around\",\r\n  },\r\n  spread: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n  overallLabel: {\r\n    userSelect: \"none\",\r\n    textAlign: \"center\",\r\n  },\r\n  detailsGrid: {\r\n    marginLeft: 25,\r\n  },\r\n  detailCard: {\r\n    textAlign: \"center\",\r\n    verticalAlign: \"middle\",\r\n    margin: 10,\r\n    minWidth: 210,\r\n  },\r\n  scoreCurve: {\r\n    marginTop: \"auto\",\r\n    marginBottom: \"auto\",\r\n  },\r\n  timeMultiplier: {\r\n    fontStyle: \"italic\",\r\n    color: \"gray\",\r\n    float: \"right\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nexport const OverallSummary = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      className={`${classes.root} ${classes.horizontalStack} ${classes.spread}`}\r\n    >\r\n      <Box className={`${classes.verticalStack} ${classes.scoreCurve}`}>\r\n        <Typography variant=\"h4\" className={classes.overallLabel}>\r\n          Overall Scaled Score\r\n        </Typography>\r\n        <ScoreDistribution\r\n          height={250}\r\n          width={500}\r\n          margin={{ top: 10, left: 10, bottom: 20, right: 10 }}\r\n          leftLabel={OverallResults.minScaledScore.toString()}\r\n          rightLabel={OverallResults.maxScaledScore.toString()}\r\n          score={OverallResults.scaledScore.toString()}\r\n          percentage={OverallResults.percent}\r\n        />\r\n      </Box>\r\n      <Slide direction=\"left\" in={true} timeout={500}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.detailsGrid}\r\n        >\r\n          <Grid item>\r\n            <Card variant=\"outlined\" className={classes.detailCard}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\">\r\n                  {OverallResults.scaledScore}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\" display=\"inline\">\r\n                  Scaled Score\r\n                </Typography>\r\n                <ScaledScoreHelp forSection={false} />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card variant=\"outlined\" className={classes.detailCard}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\">{OverallResults.percent}%</Typography>\r\n                <Typography variant=\"subtitle2\" display=\"inline\">\r\n                  Percentile Rank\r\n                </Typography>\r\n                <PercentileRankHelp />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card variant=\"outlined\" className={classes.detailCard}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\">\r\n                  {OverallResults.questionsCorrect} of{\" \"}\r\n                  {OverallResults.totalQuestions}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">Questions Correct</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card variant=\"outlined\" className={classes.detailCard}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\">\r\n                  {moment\r\n                    .utc(\r\n                      moment\r\n                        .duration(OverallResults.timeSpentInSeconds, \"seconds\")\r\n                        .asMilliseconds()\r\n                    )\r\n                    .format(\"hh:mm:ss\")}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">Time Spent</Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  className={classes.timeMultiplier}\r\n                >\r\n                  (x 1.5 time applied)\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card variant=\"outlined\" className={classes.detailCard}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\">\r\n                  {new Date(OverallResults.dateAttempted).toLocaleDateString()}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">Attempt Date</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Slide>\r\n    </Box>\r\n  );\r\n};\r\n","import {\r\n  Grid,\r\n  Link,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport { SectionResults } from \"../Data/Sections\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"& td:not(:first-child)\": {\r\n      textAlign: \"center\",\r\n    },\r\n    \"& a\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface SectionSummaryProperties {\r\n  onNavigate: (to: string) => void;\r\n}\r\n\r\nexport const SectionSummary = ({ onNavigate }: SectionSummaryProperties) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.root}>\r\n      <Grid item>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Section</TableCell>\r\n              <TableCell>Score</TableCell>\r\n              <TableCell>Percentile</TableCell>\r\n              <TableCell>Correct</TableCell>\r\n              <TableCell>Incomplete</TableCell>\r\n              <TableCell>Average TPQ</TableCell>\r\n              <TableCell>\r\n                <FlagIcon /> Correct\r\n              </TableCell>\r\n              <TableCell>\r\n                <FlagIcon /> Incorrect\r\n              </TableCell>\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {SectionResults.map((section) => (\r\n              <TableRow key={section.id}>\r\n                <TableCell>\r\n                  <Link onClick={() => onNavigate(section.id)}>\r\n                    {section.name}\r\n                  </Link>\r\n                </TableCell>\r\n                <TableCell>{section.scaledScore}</TableCell>\r\n                <TableCell>{section.percentage}</TableCell>\r\n                <TableCell>\r\n                  {section.questionsCorrect} of {section.totalQuestions}\r\n                </TableCell>\r\n                <TableCell>{section.incomplete}</TableCell>\r\n                <TableCell>\r\n                  {moment\r\n                    .utc(\r\n                      moment\r\n                        .duration(\r\n                          section.averageQuestionTimeInSeconds,\r\n                          \"seconds\"\r\n                        )\r\n                        .asMilliseconds()\r\n                    )\r\n                    .format(\"m:ss\")}\r\n                </TableCell>\r\n                <TableCell>{section.flaggedCorrect}</TableCell>\r\n                <TableCell>{section.flaggedIncorrect}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { OverallSummary } from \"./OverallSummary\";\r\nimport { SectionSummary } from \"./SectionSummary\";\r\n\r\nexport interface SummaryProperties {\r\n  onNavigate: (to: string) => void;\r\n}\r\n\r\nexport const Summary = ({ onNavigate }: SummaryProperties) => {\r\n  return (\r\n    <Box>\r\n      <OverallSummary />\r\n      <SectionSummary onNavigate={onNavigate} />\r\n    </Box>\r\n  );\r\n};\r\n","import { LoremIpsum } from \"lorem-ipsum\";\r\n\r\nconst lorem = new LoremIpsum({\r\n  sentencesPerParagraph: {\r\n    max: 8,\r\n    min: 4,\r\n  },\r\n  wordsPerSentence: {\r\n    max: 32,\r\n    min: 8,\r\n  },\r\n});\r\n\r\nexport const Identifier = (length: number) => {\r\n  let result = \"\";\r\n  let characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  let charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const Word = (number?: number) => lorem.generateWords(number);\r\nexport const Sentence = (number?: number) => lorem.generateSentences(number);\r\nexport const Paragraph = (number: number) => lorem.generateParagraphs(number);\r\n\r\nconst formatted = (text: string) => {\r\n  const maxSpan = 13;\r\n  const bold = [0, 0.1];\r\n  const italic = [0.09, 0.12];\r\n  const underline = [0.1, 0.18];\r\n\r\n  let spans = [];\r\n  let words = text.split(\" \");\r\n  let index = 0;\r\n  while (index < words.length) {\r\n    let spanLength = Math.random() * maxSpan + 1;\r\n    let spanStart = index;\r\n    let spanEnd = Math.min(words.length - 1, index + spanLength);\r\n    index = spanEnd + 1;\r\n    let span = words.slice(spanStart, spanEnd).join(\" \");\r\n\r\n    let roll = Math.random();\r\n    if (roll >= bold[0] && roll <= bold[1]) span = `<b>${span}</b>`;\r\n    if (roll >= italic[0] && roll <= italic[1]) span = `<i>${span}</i>`;\r\n    if (roll >= underline[0] && roll <= underline[1]) span = `<u>${span}</u>`;\r\n\r\n    spans.push(span);\r\n  }\r\n\r\n  return spans.join(\" \");\r\n};\r\n\r\nexport const FormattedSentence = (number: number) => {\r\n  let spans = [];\r\n\r\n  for (let index = 0; index < number; index++)\r\n    spans.push(`<span>${formatted(lorem.generateSentences(1))}</span>`);\r\n\r\n  return spans.join(\" \");\r\n};\r\n\r\nexport const FormattedParagraph = (number: number) => {\r\n  let spans = [];\r\n\r\n  for (let index = 0; index < number; index++)\r\n    spans.push(`<p>${formatted(lorem.generateParagraphs(1))}</p>`);\r\n\r\n  return spans.join(\" \");\r\n};\r\n\r\nexport const FormattedAnswerChoices = () =>\r\n  `<br /><ol type=\"A\"><li>${FormattedSentence(\r\n    2 + Math.floor(Math.random() * 5)\r\n  )}</li><br /><li>${FormattedSentence(\r\n    2 + Math.floor(Math.random() * 5)\r\n  )}</li><br /><li>${FormattedSentence(\r\n    2 + Math.floor(Math.random() * 5)\r\n  )}</li><br /><li>${FormattedSentence(\r\n    2 + Math.floor(Math.random() * 5)\r\n  )}</li></ol>`;\r\n","import { Identifier, Sentence } from \"./Text\";\r\n\r\nexport class SkillGroup {\r\n  public label: string;\r\n  public description: string;\r\n  public skills: Array<SkillData>;\r\n  constructor() {\r\n    this.label = Identifier(3);\r\n    this.description = Sentence(2);\r\n    this.skills = [...new Array(3 + Math.ceil(Math.random() * 2))].map(\r\n      () => new SkillData()\r\n    );\r\n  }\r\n\r\n  public totalItems = () =>\r\n    this.skills.reduce((total, skill) => total + skill.items, 0);\r\n}\r\n\r\nexport class SkillData {\r\n  public correct: number;\r\n  public skill: Skill;\r\n  public items: number;\r\n  constructor() {\r\n    this.skill = new Skill();\r\n    this.items = 2 + Math.ceil(Math.random() * 8);\r\n    this.correct =\r\n      Math.floor(this.items / 2) + Math.floor(Math.random() * (this.items / 2));\r\n  }\r\n}\r\n\r\nexport class Skill {\r\n  public label: string;\r\n  public description: string;\r\n  constructor() {\r\n    this.label = Identifier(4);\r\n    this.description = Sentence(1);\r\n  }\r\n}\r\n\r\nexport const SkillsGroups: Array<SkillGroup> = [\r\n  ...new Array(3 + Math.ceil(Math.random() * 2)),\r\n].map(() => new SkillGroup());\r\n","import { Skill } from \"./Skills\";\r\nimport { FormattedAnswerChoices, FormattedParagraph, Sentence } from \"./Text\";\r\n\r\nconst previewLength = 250;\r\n\r\nexport class ItemData {\r\n  public preview: string;\r\n  public content: string;\r\n  public correctAnswer: string;\r\n  public answer: string;\r\n  public answerRationales: Array<string>;\r\n  public skills: Array<Skill>;\r\n\r\n  constructor(\r\n    public number: number,\r\n    public section: string,\r\n    public correct: boolean,\r\n    public timeInSeconds: number,\r\n    public flagged: boolean\r\n  ) {\r\n    let content = `${FormattedParagraph(\r\n      3 + Math.floor(Math.random() * 4)\r\n    )}${FormattedAnswerChoices()}`.split(\" \");\r\n    for (let chance = 0.2; chance > 0; chance -= 0.1)\r\n      if (Math.random() <= chance) {\r\n        let length = 30 + Math.round(Math.random() * 100);\r\n        let start = Math.round(Math.random() * content.length) - length;\r\n        content = [\r\n          ...content.slice(0, start),\r\n          \"<mark>\",\r\n          ...content.slice(start, start + length),\r\n          \"</mark>\",\r\n          ...content.slice(start + length),\r\n        ];\r\n      }\r\n    this.content = content.join(\" \");\r\n    this.preview = `${Sentence(2).substr(0, previewLength)}...`;\r\n\r\n    this.skills = [...new Array(2 + Math.round(Math.random() * 3))].map(\r\n      () => new Skill()\r\n    );\r\n\r\n    let answers = [\"A\", \"B\", \"C\", \"D\"];\r\n    let correctAnswerIndex = Math.min(3, Math.round(Math.random() * 3));\r\n    this.correctAnswer = answers[correctAnswerIndex];\r\n    if (this.correct) this.answer = this.correctAnswer;\r\n    else\r\n      this.answer =\r\n        Math.random() < 0.2\r\n          ? \"\"\r\n          : [\r\n              ...answers.slice(0, correctAnswerIndex),\r\n              ...answers.slice(correctAnswerIndex + 1, answers.length),\r\n            ][Math.min(2, Math.round(Math.random() * 2))];\r\n\r\n    this.answerRationales = [...new Array(4)].map(() => Sentence(2));\r\n  }\r\n}\r\n\r\nconst createItems = (count: number, section: string) => {\r\n  let items = [];\r\n  for (let number = 1; number <= count; number++)\r\n    items.push(\r\n      new ItemData(\r\n        number,\r\n        section,\r\n        Math.random() >= 0.25,\r\n        80 + Math.random() * 120,\r\n        Math.random() >= 0.85\r\n      )\r\n    );\r\n  return items;\r\n};\r\n\r\nexport const ItemResults: Array<ItemData> = [\r\n  ...createItems(59, \"CPFBS\"),\r\n  ...createItems(53, \"CARS\"),\r\n  ...createItems(59, \"BBFLS\"),\r\n  ...createItems(59, \"PSBFB\"),\r\n];\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  IconButton,\r\n  makeStyles,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles({\r\n  appBar: {\r\n    background: \"#402B56\",\r\n    position: \"relative\",\r\n  },\r\n  navButtonContainer: {\r\n    margin: \"auto\",\r\n  },\r\n  title: {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    verticalAlign: \"middle\",\r\n  },\r\n  navButton: {\r\n    border: \"1px solid #F8B332\",\r\n    color: \"#F8B332\",\r\n    borderRadius: 0,\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    \"&.first\": {\r\n      borderTopLeftRadius: 10,\r\n      borderBottomLeftRadius: 10,\r\n      borderTopRightRadius: 0,\r\n      borderBottomRightRadius: 0,\r\n    },\r\n    \"&.last\": {\r\n      borderTopLeftRadius: 0,\r\n      borderBottomLeftRadius: 0,\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n    },\r\n    \"&.Mui-disabled\": {\r\n      border: \"1px solid gray\",\r\n      color: \"gray\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface ReviewHeaderProperties {\r\n  title: string;\r\n  close: () => void;\r\n  canPrevious: boolean;\r\n  canNext: boolean;\r\n  goFirst: () => void;\r\n  goBackward: () => void;\r\n  goForward: () => void;\r\n  goLast: () => void;\r\n}\r\n\r\nexport const ReviewHeader = ({\r\n  title,\r\n  close,\r\n  canPrevious,\r\n  canNext,\r\n  goFirst,\r\n  goBackward,\r\n  goForward,\r\n  goLast,\r\n}: ReviewHeaderProperties) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"fixed\">\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={close}\r\n          aria-label=\"close\"\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <Box className={classes.navButtonContainer}>\r\n          <IconButton\r\n            className={`${classes.navButton} first`}\r\n            color=\"inherit\"\r\n            disabled={!canPrevious}\r\n            onClick={goFirst}\r\n          >\r\n            <FirstPageIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.navButton}\r\n            color=\"inherit\"\r\n            disabled={!canPrevious}\r\n            onClick={goBackward}\r\n          >\r\n            <NavigateBeforeIcon />\r\n          </IconButton>\r\n          <Typography display=\"inline\" variant=\"h6\" className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n          <IconButton\r\n            className={classes.navButton}\r\n            color=\"inherit\"\r\n            disabled={!canNext}\r\n            onClick={goForward}\r\n          >\r\n            <NavigateNextIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            className={`${classes.navButton} last`}\r\n            color=\"inherit\"\r\n            disabled={!canNext}\r\n            onClick={goLast}\r\n          >\r\n            <LastPageIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","export interface Annotation {\r\n  range: AnnotationRange;\r\n  note: string;\r\n}\r\n\r\nexport interface AnnotationRange {\r\n  startAddress: Array<number>;\r\n  startOffset: number;\r\n  endAddress: Array<number>;\r\n  endOffset: number;\r\n\r\n  overallHighlight?: Range;\r\n  individualHighlights?: Array<Range>;\r\n}\r\n\r\nexport const UserAnnotationWrapper: {\r\n  data: Record<string, Array<Annotation>>;\r\n} = {\r\n  data: {},\r\n};\r\n\r\nexport const GetAnnotationKey = (section: string, number: number) => {\r\n  let key = `${section}-${number}`;\r\n  if (!UserAnnotationWrapper.data[key])\r\n    UserAnnotationWrapper.data = Object.assign({}, UserAnnotationWrapper.data, {\r\n      [key]: [],\r\n    });\r\n  return key;\r\n};\r\n\r\nexport const AddAnnotation = (\r\n  section: string,\r\n  number: number,\r\n  annotation: Annotation\r\n) => {\r\n  let key = GetAnnotationKey(section, number);\r\n  let current = UserAnnotationWrapper.data[key];\r\n  let updated = [...current, annotation];\r\n  UserAnnotationWrapper.data = Object.assign({}, UserAnnotationWrapper.data, {\r\n    [key]: updated,\r\n  });\r\n  return UserAnnotationWrapper.data[key];\r\n};\r\n\r\nexport const UpdateAnnotation = (\r\n  section: string,\r\n  number: number,\r\n  index: number,\r\n  note: string\r\n) => {\r\n  let key = GetAnnotationKey(section, number);\r\n  let current = UserAnnotationWrapper.data[key];\r\n  let updated = [\r\n    ...current.slice(0, index),\r\n    Object.assign({}, current[index], { note }),\r\n    ...current.slice(index + 1),\r\n  ];\r\n  UserAnnotationWrapper.data = Object.assign({}, UserAnnotationWrapper.data, {\r\n    [key]: updated,\r\n  });\r\n  return UserAnnotationWrapper.data[key];\r\n};\r\n\r\nexport const RemoveAnnotation = (\r\n  section: string,\r\n  number: number,\r\n  index: number\r\n) => {\r\n  let key = GetAnnotationKey(section, number);\r\n  let current = UserAnnotationWrapper.data[key];\r\n  let updated = [...current.slice(0, index), ...current.slice(index + 1)];\r\n  UserAnnotationWrapper.data = Object.assign({}, UserAnnotationWrapper.data, {\r\n    [key]: updated,\r\n  });\r\n  return UserAnnotationWrapper.data[key];\r\n};\r\n","import { AnnotationRange } from \"../Data/Annotations\";\r\n\r\nexport const GetAnnotationRange = (\r\n  root: HTMLElement,\r\n  range: Range\r\n): AnnotationRange => {\r\n  let annotationRange = {\r\n    startAddress: getAddress(root, range.startContainer),\r\n    startOffset: range.startOffset,\r\n    endAddress: getAddress(root, range.endContainer),\r\n    endOffset: range.endOffset,\r\n  };\r\n  EnsureHighlights(root, annotationRange);\r\n  return annotationRange;\r\n};\r\n\r\nexport const EnsureHighlights = (root: HTMLElement, range: AnnotationRange) => {\r\n  range.overallHighlight = GetOverallHighlight(root, range);\r\n  range.individualHighlights = GetIndividualHighlights(root, range);\r\n  return range;\r\n};\r\n\r\nexport const GetOverallHighlight = (\r\n  root: HTMLElement,\r\n  range: AnnotationRange\r\n) => {\r\n  let selection = document.createRange();\r\n  selection.setStart(\r\n    getElementAtAddress(root, range.startAddress),\r\n    range.startOffset\r\n  );\r\n  selection.setEnd(\r\n    getElementAtAddress(root, range.endAddress),\r\n    range.endOffset\r\n  );\r\n  return selection;\r\n};\r\n\r\nexport const GetIndividualHighlights = (\r\n  root: HTMLElement,\r\n  range: AnnotationRange\r\n) => {\r\n  let selection = document.createRange();\r\n  selection.setStart(\r\n    getElementAtAddress(root, range.startAddress),\r\n    range.startOffset\r\n  );\r\n  selection.setEnd(\r\n    getElementAtAddress(root, range.endAddress),\r\n    range.endOffset\r\n  );\r\n  return getIndividualRanges(selection);\r\n};\r\n\r\nconst getAddress = (root: HTMLElement, target: Node) => {\r\n  let address = [];\r\n  let current = target;\r\n  while (current !== root) {\r\n    let index = 0;\r\n    let testNode = current.previousSibling;\r\n    while (testNode) {\r\n      index += 1;\r\n      testNode = testNode.previousSibling;\r\n    }\r\n    address.unshift(index);\r\n    current = current.parentNode!;\r\n  }\r\n  return address;\r\n};\r\n\r\nconst getElementAtAddress = (root: HTMLElement, address: Array<number>) => {\r\n  let element: HTMLElement | ChildNode = root;\r\n  for (let index = 0; index < address.length; index++)\r\n    element = element.childNodes.item(address[index]);\r\n  return element;\r\n};\r\n\r\nconst getIndividualRanges = (\r\n  range: Range | undefined,\r\n  elements: Array<Node> = []\r\n): Array<Range> => {\r\n  if (!range) return [];\r\n  let singleElement = range.startContainer === range.endContainer;\r\n\r\n  let startRange =\r\n    elements.indexOf(range.startContainer) >= 0\r\n      ? []\r\n      : getIndividualLetterRanges(\r\n          range.startContainer,\r\n          range.startOffset,\r\n          singleElement ? range.endOffset : undefined\r\n        );\r\n\r\n  if (singleElement) return startRange;\r\n\r\n  let endRange =\r\n    elements.indexOf(range.endContainer) >= 0\r\n      ? []\r\n      : getIndividualLetterRanges(range.endContainer, 0, range.endOffset);\r\n\r\n  var nextStart = getNextElement(range.startContainer);\r\n\r\n  var nextEnd = getPreviousElement(range.endContainer);\r\n\r\n  if (!nextStart || !nextEnd) return [...startRange, ...endRange];\r\n\r\n  var middleRange = document.createRange();\r\n  middleRange.setStart(nextStart, 0);\r\n  middleRange.setEnd(nextEnd, 0);\r\n  return [\r\n    ...startRange,\r\n    ...getIndividualRanges(middleRange, [\r\n      ...elements,\r\n      range.startContainer,\r\n      range.endContainer,\r\n    ]),\r\n    ...endRange,\r\n  ];\r\n};\r\n\r\nconst getNextElement = (element: Node): Node | null => {\r\n  let currentElement: Node | HTMLElement | null = element;\r\n\r\n  while (currentElement && !currentElement.nextSibling) {\r\n    currentElement = currentElement?.parentElement;\r\n  }\r\n\r\n  if (!currentElement) return null;\r\n  currentElement = currentElement.nextSibling;\r\n\r\n  while (currentElement?.hasChildNodes()) {\r\n    currentElement = currentElement.firstChild;\r\n  }\r\n\r\n  return currentElement;\r\n};\r\n\r\nconst getPreviousElement = (element: Node): Node | null => {\r\n  let currentElement: Node | HTMLElement | null = element;\r\n\r\n  while (currentElement && !currentElement.previousSibling) {\r\n    currentElement = currentElement?.parentElement;\r\n  }\r\n\r\n  if (!currentElement) return null;\r\n  currentElement = currentElement.previousSibling;\r\n\r\n  while (currentElement?.hasChildNodes()) {\r\n    currentElement = currentElement.lastChild;\r\n  }\r\n\r\n  return currentElement;\r\n};\r\n\r\nconst getIndividualLetterRanges = (\r\n  element: Node,\r\n  start?: number,\r\n  end?: number\r\n) => {\r\n  let ranges: Array<Range> = [];\r\n\r\n  if (element.nodeType === Node.TEXT_NODE) {\r\n    let elementSize = (element as any).length;\r\n    for (\r\n      var subIndex = start || 0;\r\n      subIndex < (end || elementSize);\r\n      subIndex++\r\n    ) {\r\n      try {\r\n        let selection = document.createRange();\r\n        selection.setStart(element, subIndex);\r\n        selection.setEnd(element, subIndex + 1);\r\n        ranges.push(selection);\r\n      } catch (e) {}\r\n    }\r\n  } else if (element.hasChildNodes()) {\r\n    for (\r\n      let nodeIndex = 0;\r\n      nodeIndex < element.childNodes.length;\r\n      nodeIndex++\r\n    ) {\r\n      let childNode = element.childNodes.item(nodeIndex);\r\n      let childNodeRanges = getIndividualLetterRanges(\r\n        childNode,\r\n        nodeIndex === 0 ? start : undefined,\r\n        nodeIndex === element.childNodes.length - 1 ? end : undefined\r\n      );\r\n      ranges.push(...childNodeRanges);\r\n    }\r\n  }\r\n\r\n  return ranges;\r\n};\r\n","import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Fade,\r\n  IconButton,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\r\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\r\nimport { Annotation, AnnotationRange } from \"../../Data/Annotations\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { EnsureHighlights, GetAnnotationRange } from \"../../Utils/Selection\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"relative\",\r\n    \"& svg\": {\r\n      position: \"absolute\",\r\n      pointerEvents: \"none\",\r\n    },\r\n  },\r\n  addNote: {\r\n    position: \"absolute\",\r\n    background: \"white\",\r\n    border: \"1px solid #F8B332\",\r\n    padding: 20,\r\n    zIndex: 101,\r\n    \"&:hover\": {\r\n      background: \"#F8B332\",\r\n      border: \"1px solid black\",\r\n    },\r\n  },\r\n  annotationActions: {\r\n    position: \"absolute\",\r\n    background: \"white\",\r\n    border: \"1px solid #F8B332\",\r\n    zIndex: 100,\r\n    \"&:hover\": {\r\n      background: \"#F8B332\",\r\n      border: \"1px solid black\",\r\n    },\r\n  },\r\n  annotationDialog: {\r\n    minWidth: 500,\r\n  },\r\n  annotationContent: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  annotationHighlight: {\r\n    pointerEvents: \"all\",\r\n    cursor: \"help\",\r\n  },\r\n  annotationNote: {\r\n    position: \"absolute\",\r\n    border: \"1px solid black\",\r\n    borderRadius: 5,\r\n    padding: 5,\r\n    background: \"#fde6bb\",\r\n    zIndex: 200,\r\n    userSelect: \"none\",\r\n    cursor: \"help\",\r\n  },\r\n});\r\n\r\nexport interface FunctionComponentProperties {\r\n  displayAnnotations: boolean;\r\n  annotations: Array<Annotation>;\r\n  addAnnotation: (annotation: Annotation) => void;\r\n  updateAnnotation: (index: number, newNote: string) => void;\r\n  removeAnnotation: (index: number) => void;\r\n}\r\n\r\nexport const AnnotationContainer: FunctionComponent<FunctionComponentProperties> = ({\r\n  displayAnnotations,\r\n  annotations,\r\n  addAnnotation,\r\n  updateAnnotation,\r\n  removeAnnotation,\r\n  children,\r\n}) => {\r\n  const classes = useStyles();\r\n  const outerRef = useRef<HTMLDivElement>(null);\r\n  const [newRange, setNewRange] = useState<AnnotationRange | undefined>();\r\n  const [openAnnotation, setOpenAnnotation] = useState<\r\n    number | AnnotationRange | undefined\r\n  >();\r\n  const [editText, setEditText] = useState<string>(\"\");\r\n  const [annotationHover, setAnnotationHover] = useState<number | undefined>();\r\n  const [annotationHighlights, setAnnotationHighlights] = useState<\r\n    Array<AnnotationRange> | undefined\r\n  >();\r\n\r\n  const getOuterStationaryRect = () =>\r\n    outerRef.current?.parentElement?.getBoundingClientRect();\r\n\r\n  const onNewAnnotationClicked = () => {\r\n    setEditText(\"\");\r\n    setOpenAnnotation(newRange);\r\n  };\r\n\r\n  const onEditAnnotationClicked = (index: number) => {\r\n    setEditText(annotations[index].note);\r\n    setOpenAnnotation(index);\r\n  };\r\n\r\n  const saveAnnotation = (note: string) => {\r\n    if (openAnnotation === undefined) return;\r\n    if (typeof openAnnotation === \"object\") {\r\n      addAnnotation({ range: openAnnotation as AnnotationRange, note });\r\n      setNewRange(undefined);\r\n      if (window.getSelection()?.empty) window.getSelection()?.empty();\r\n      if (window.getSelection()?.removeAllRanges)\r\n        window.getSelection()?.removeAllRanges();\r\n    } else {\r\n      updateAnnotation(openAnnotation as number, note);\r\n    }\r\n    setOpenAnnotation(undefined);\r\n  };\r\n\r\n  const cancelAnnotation = () => {\r\n    setOpenAnnotation(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentRef = outerRef.current;\r\n    const onPointerUp = () => {\r\n      setTimeout(() => {\r\n        if (!displayAnnotations) return;\r\n        if (window.getSelection()?.toString().length)\r\n          setNewRange(\r\n            GetAnnotationRange(\r\n              currentRef!,\r\n              window.getSelection()!.getRangeAt(0)\r\n            )\r\n          );\r\n        else setNewRange(undefined);\r\n      }, 50);\r\n    };\r\n\r\n    setAnnotationHighlights(\r\n      annotations.map((annotation) =>\r\n        EnsureHighlights(currentRef!, annotation.range)\r\n      )\r\n    );\r\n\r\n    currentRef?.addEventListener(\"pointerup\", onPointerUp);\r\n\r\n    return () => {\r\n      currentRef?.removeEventListener(\"pointerup\", onPointerUp);\r\n    };\r\n  }, [setNewRange, annotations, outerRef, displayAnnotations]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {displayAnnotations && (\r\n        <>\r\n          <Dialog\r\n            open={openAnnotation !== undefined}\r\n            classes={{ paper: classes.annotationDialog }}\r\n          >\r\n            <DialogTitle>{`${\r\n              openAnnotation === -1 ? \"New\" : \"Edit\"\r\n            } Annotation Text`}</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                className={classes.annotationContent}\r\n                autoFocus\r\n                multiline\r\n                value={editText}\r\n                onChange={(event) => setEditText(event.target.value)}\r\n              ></TextField>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => cancelAnnotation()} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={() => saveAnnotation(editText)} color=\"primary\">\r\n                OK\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          {newRange && (\r\n            <IconButton\r\n              onClick={() => onNewAnnotationClicked()}\r\n              className={classes.addNote}\r\n              style={{\r\n                left:\r\n                  (newRange.overallHighlight?.getBoundingClientRect().right ||\r\n                    0) -\r\n                  (getOuterStationaryRect()?.x || 0) -\r\n                  20,\r\n                top:\r\n                  (newRange.overallHighlight?.getBoundingClientRect().bottom ||\r\n                    0) -\r\n                  (getOuterStationaryRect()?.y || 0) +\r\n                  10,\r\n              }}\r\n            >\r\n              <NoteAddIcon />\r\n            </IconButton>\r\n          )}\r\n          {annotationHighlights?.map((highlight, index) => (\r\n            <div key={`annotation-${index}`}>\r\n              <Fade\r\n                in={\r\n                  annotationHover === index &&\r\n                  annotations.length > index &&\r\n                  annotations[index].note.length > 0\r\n                }\r\n                timeout={{ appear: 100, exit: 500 }}\r\n              >\r\n                <IconButton\r\n                  onMouseEnter={() => setAnnotationHover(index)}\r\n                  onMouseLeave={() => setAnnotationHover(undefined)}\r\n                  onClick={() => removeAnnotation(index)}\r\n                  className={classes.annotationActions}\r\n                  style={{\r\n                    left:\r\n                      (highlight.overallHighlight?.getBoundingClientRect()\r\n                        .right || 0) -\r\n                      (getOuterStationaryRect()?.x || 0) -\r\n                      10,\r\n                    top:\r\n                      (highlight.overallHighlight?.getBoundingClientRect()\r\n                        .top || 0) -\r\n                      (getOuterStationaryRect()?.y || 0) -\r\n                      20,\r\n                  }}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </Fade>\r\n              <Fade\r\n                in={\r\n                  annotationHover === index &&\r\n                  annotations.length > index &&\r\n                  annotations[index].note.length > 0\r\n                }\r\n                timeout={{ appear: 100, exit: 500 }}\r\n              >\r\n                <IconButton\r\n                  onMouseEnter={() => setAnnotationHover(index)}\r\n                  onMouseLeave={() => setAnnotationHover(undefined)}\r\n                  onClick={() => onEditAnnotationClicked(index)}\r\n                  className={classes.annotationActions}\r\n                  style={{\r\n                    left:\r\n                      (highlight.overallHighlight?.getBoundingClientRect()\r\n                        .right || 0) -\r\n                      (getOuterStationaryRect()?.x || 0) -\r\n                      40,\r\n                    top:\r\n                      (highlight.overallHighlight?.getBoundingClientRect()\r\n                        .top || 0) -\r\n                      (getOuterStationaryRect()?.y || 0) -\r\n                      20,\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </Fade>\r\n              <Fade\r\n                in={\r\n                  annotationHover === index &&\r\n                  annotations.length > index &&\r\n                  annotations[index].note.length > 0\r\n                }\r\n                timeout={{ appear: 100, exit: 500 }}\r\n              >\r\n                <Box\r\n                  onMouseEnter={() => setAnnotationHover(index)}\r\n                  onMouseLeave={() => setAnnotationHover(undefined)}\r\n                  className={classes.annotationNote}\r\n                  style={{\r\n                    left:\r\n                      (getOuterStationaryRect()?.x || 0) +\r\n                      (getOuterStationaryRect()?.width || 0) / 4,\r\n                    right: (getOuterStationaryRect()?.width || 0) / 4,\r\n                    top:\r\n                      (highlight.overallHighlight?.getBoundingClientRect()\r\n                        .top || 0) +\r\n                      (highlight.overallHighlight?.getBoundingClientRect()\r\n                        .height || 0) /\r\n                        2 -\r\n                      (getOuterStationaryRect()?.y || 0),\r\n                  }}\r\n                >\r\n                  {annotations.length > index && (\r\n                    <Typography variant=\"subtitle2\">\r\n                      {annotations[index].note}\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n              </Fade>\r\n            </div>\r\n          ))}\r\n          <svg height=\"100%\" width=\"100%\">\r\n            <g\r\n              transform={`translate(${0 - (getOuterStationaryRect()?.x || 0)},${\r\n                0 - (getOuterStationaryRect()?.y || 0)\r\n              })`}\r\n            >\r\n              {newRange &&\r\n                newRange.individualHighlights?.map((range, index) => (\r\n                  <rect\r\n                    key={`new-range-${index}`}\r\n                    x={range?.getBoundingClientRect().x || 0}\r\n                    y={(range?.getBoundingClientRect().y || 2) - 2}\r\n                    height={range?.getBoundingClientRect().height + 4}\r\n                    width={range?.getBoundingClientRect().width}\r\n                    fill=\"#f8b33254\"\r\n                  />\r\n                ))}\r\n              {annotationHighlights?.map((highlight, index) => (\r\n                <g key={`annotation-${index}`}>\r\n                  {highlight.individualHighlights?.map((range, rangeIndex) => (\r\n                    <rect\r\n                      key={`annotation-highlight-${rangeIndex}`}\r\n                      x={range.getBoundingClientRect().x}\r\n                      y={range.getBoundingClientRect().y - 2}\r\n                      height={range.getBoundingClientRect().height + 4}\r\n                      width={range.getBoundingClientRect().width}\r\n                      fill=\"#f8b33254\"\r\n                      className={classes.annotationHighlight}\r\n                      onMouseOver={() => setAnnotationHover(index)}\r\n                      onMouseLeave={() => setAnnotationHover(undefined)}\r\n                    />\r\n                  ))}\r\n                </g>\r\n              ))}\r\n            </g>\r\n          </svg>\r\n        </>\r\n      )}\r\n      <div ref={outerRef}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n","import { Box, makeStyles, Slide, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  AddAnnotation,\r\n  Annotation,\r\n  GetAnnotationKey,\r\n  RemoveAnnotation,\r\n  UpdateAnnotation,\r\n  UserAnnotationWrapper,\r\n} from \"../../Data/Annotations\";\r\nimport { ItemData } from \"../../Data/Items\";\r\nimport { AnnotationContainer } from \"./AnnotationContainer\";\r\n\r\nconst useStyles = makeStyles({\r\n  itemContainer: {\r\n    margin: 15,\r\n    border: \"1px solid black\",\r\n    borderRadius: 10,\r\n    overflow: \"auto\",\r\n    overflowX: \"hidden\",\r\n    height: \"calc(100% - 30px)\",\r\n    width: \"80%\",\r\n    \"&::-webkit-scrollbar\": {\r\n      height: 10,\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n      \"-webkit-border-top-right-radius\": 10,\r\n      \"-webkit-border-bottom-right-radius\": 10,\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n      marginLeft: 10,\r\n      marginRight: 10,\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      \"-webkit-border-top-right-radius\": 10,\r\n      \"-webkit-border-bottom-right-radius\": 10,\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n      background: \"#402B56\",\r\n      \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.5)\",\r\n    },\r\n    \"&.correct\": {\r\n      \"&::-webkit-scrollbar-thumb\": {\r\n        background: \"#dcffdc\",\r\n      },\r\n      border: \"1px solid #8ADDAE\",\r\n    },\r\n    \"&.incorrect\": {\r\n      \"&::-webkit-scrollbar-thumb\": {\r\n        background: \"#f8e7e6\",\r\n      },\r\n      border: \"1px solid #CB7D75\",\r\n    },\r\n  },\r\n  contentContainer: {\r\n    padding: 15,\r\n  },\r\n  rationaleContainer: {\r\n    padding: 15,\r\n    \"&.correct\": {\r\n      borderTop: \"1px solid #8ADDAE\",\r\n      background: \"#dcffdc\",\r\n    },\r\n    \"&.incorrect\": {\r\n      borderTop: \"1px solid #CB7D75\",\r\n      background: \"#f8e7e6\",\r\n    },\r\n  },\r\n  boldedRationale: {\r\n    fontWeight: \"bold\",\r\n    \"& p\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface ContentContainerProperties {\r\n  item: ItemData;\r\n  direction?: string;\r\n  annotationVisibility: boolean;\r\n}\r\n\r\nexport const ContentContainer = ({\r\n  item,\r\n  direction,\r\n  annotationVisibility,\r\n}: ContentContainerProperties) => {\r\n  const classes = useStyles();\r\n\r\n  const [annotations, setAnnotations] = useState<Array<Annotation>>(\r\n    UserAnnotationWrapper.data[GetAnnotationKey(item.section, item.number)]\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      className={`${classes.itemContainer} ${\r\n        item.correct ? \"correct\" : \"incorrect\"\r\n      }`}\r\n    >\r\n      <Slide\r\n        direction={\r\n          direction === \"forward\"\r\n            ? \"left\"\r\n            : direction === \"backward\"\r\n            ? \"right\"\r\n            : \"down\"\r\n        }\r\n        in={true}\r\n        timeout={450}\r\n        key={item.number}\r\n      >\r\n        <Box>\r\n          <AnnotationContainer\r\n            displayAnnotations={annotationVisibility}\r\n            annotations={annotations}\r\n            addAnnotation={(annotation) =>\r\n              setAnnotations(\r\n                AddAnnotation(item.section, item.number, annotation)\r\n              )\r\n            }\r\n            updateAnnotation={(index, note) =>\r\n              setAnnotations(\r\n                UpdateAnnotation(item.section, item.number, index, note)\r\n              )\r\n            }\r\n            removeAnnotation={(index) =>\r\n              setAnnotations(RemoveAnnotation(item.section, item.number, index))\r\n            }\r\n          >\r\n            <Box\r\n              className={classes.contentContainer}\r\n              dangerouslySetInnerHTML={{ __html: item.content }}\r\n            ></Box>\r\n            <Box\r\n              className={`${classes.rationaleContainer} ${\r\n                item.correct ? \"correct\" : \"incorrect\"\r\n              }`}\r\n            >\r\n              <Typography>\r\n                <b>Solution:</b> The correct answer is{\" \"}\r\n                <b>{item.correctAnswer}</b>.\r\n              </Typography>\r\n              <ol type=\"A\">\r\n                {item.answerRationales.map((rationale, index) => (\r\n                  <li\r\n                    key={index}\r\n                    className={\r\n                      item.correctAnswer.charCodeAt(0) ===\r\n                      \"A\".charCodeAt(0) + index\r\n                        ? classes.boldedRationale\r\n                        : \"\"\r\n                    }\r\n                  >\r\n                    <Typography>{rationale}</Typography>\r\n                  </li>\r\n                ))}\r\n              </ol>\r\n            </Box>\r\n          </AnnotationContainer>\r\n        </Box>\r\n      </Slide>\r\n    </Box>\r\n  );\r\n};\r\n","export class ColorCombo {\r\n  constructor(public main: string, public darker: string) {}\r\n}\r\n\r\nconst colorCombos = [\r\n  new ColorCombo(\"#fce8e8\", \"#e64545\"),\r\n  new ColorCombo(\"#fcf3e8\", \"#e69745\"),\r\n  new ColorCombo(\"#fcfae8\", \"#e6e145\"),\r\n  new ColorCombo(\"#e9fce8\", \"#47e645\"),\r\n  new ColorCombo(\"#e8fcf9\", \"#45d0e6\"),\r\n  new ColorCombo(\"#efe8fc\", \"#7b45e6\"),\r\n  new ColorCombo(\"#fce8f5\", \"#e645b4\"),\r\n];\r\n\r\nexport const GetColor = (id: string) => {\r\n  let code = id\r\n    .split(\"\")\r\n    .map((c) => c.charCodeAt(0))\r\n    .reduce((total, val) => total + val, 0);\r\n  let index = code % colorCombos.length;\r\n  return colorCombos[index];\r\n};\r\n","import { Link, Tooltip, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\n\r\nexport const ContentAndSkillsHelp = () => {\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        <Typography variant=\"subtitle2\">\r\n          \"Content and Skills\" shows what foundational concepts, content\r\n          category, and skill the question tests, as well as its discipline. The\r\n          score report will include a breakdown of how well you performed in\r\n          each foundational concept, content category, skill and discipline.\r\n          Learn more about the Content and Skills breakdown by clicking this\r\n          icon.\r\n        </Typography>\r\n      }\r\n    >\r\n      <Link\r\n        rel=\"noopener noreferrer\"\r\n        target=\"_blank\"\r\n        href=\"https://students-residents.aamc.org/applying-medical-school/article/whats-mcat-exam/\"\r\n      >\r\n        <HelpIcon\r\n          fontSize=\"small\"\r\n          style={{\r\n            fontSize: \"1rem\",\r\n            marginLeft: 5,\r\n            cursor: \"pointer\",\r\n          }}\r\n        />\r\n      </Link>\r\n    </Tooltip>\r\n  );\r\n};\r\n","import {\r\n  Box,\r\n  Fade,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport { GetColor } from \"../../Data/Color\";\r\nimport { ContentAndSkillsHelp } from \"../../Help/ContentAndSkills\";\r\nimport { ItemData } from \"../../Data/Items\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles({\r\n  infoContainer: {\r\n    width: \"20%\",\r\n    padding: 5,\r\n    paddingRight: 10,\r\n    overflowX: \"hidden\",\r\n    overflowY: \"auto\",\r\n  },\r\n  infoContainerInner: {\r\n    marginRight: 15,\r\n  },\r\n  answerTable: {\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n    \"& td\": {\r\n      border: \"none\",\r\n      textAlign: \"center\",\r\n    },\r\n    \"& tr\": {\r\n      height: 64,\r\n      \"&.right\": {\r\n        border: \"1px solid #8ADDAE\",\r\n        background: \"#dcffdc\",\r\n      },\r\n      \"&.wrong\": {\r\n        border: \"1px solid #CB7D75\",\r\n        background: \"#f8e7e6\",\r\n      },\r\n    },\r\n  },\r\n  answer: {\r\n    border: \"none\",\r\n    textAlign: \"center\",\r\n  },\r\n  answerLabelCell: {\r\n    width: 50,\r\n  },\r\n  skill: {\r\n    padding: 5,\r\n    border: \"1px solid black\",\r\n    borderRadius: 10,\r\n    cursor: \"default\",\r\n    userSelect: \"none\",\r\n  },\r\n});\r\n\r\nexport interface InfoContainerProperties {\r\n  item: ItemData;\r\n  annotationVisibility: boolean;\r\n  toggleAnnotationVisibility: () => void;\r\n}\r\n\r\nexport const InfoContainer = ({\r\n  item,\r\n  annotationVisibility,\r\n  toggleAnnotationVisibility,\r\n}: InfoContainerProperties) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.infoContainer}>\r\n      <Fade in={true} timeout={250} key={item.number}>\r\n        <Box className={classes.infoContainerInner}>\r\n          <Table className={classes.answerTable}>\r\n            <TableBody>\r\n              <TableRow className={`${item.answer === \"\" ? \"wrong\" : \"\"}`}>\r\n                <TableCell colSpan={2} className={classes.answer}>\r\n                  {item.correct ? (\r\n                    <Typography variant=\"h4\">Correct</Typography>\r\n                  ) : item.answer === \"\" ? (\r\n                    <Typography variant=\"h4\">Unanswered</Typography>\r\n                  ) : (\r\n                    <Typography variant=\"h4\">Incorrect</Typography>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow\r\n                className={\r\n                  item.correctAnswer === \"A\"\r\n                    ? \"right\"\r\n                    : item.answer === \"A\"\r\n                    ? \"wrong\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <TableCell className={classes.answerLabelCell}>\r\n                  <Typography variant=\"h5\">A</Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography>\r\n                    {item.correctAnswer === \"A\" && <CheckIcon />}\r\n                    {item.answer === \"A\" && !item.correct && <CloseIcon />}\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow\r\n                className={\r\n                  item.correctAnswer === \"B\"\r\n                    ? \"right\"\r\n                    : item.answer === \"B\"\r\n                    ? \"wrong\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <TableCell className={classes.answerLabelCell}>\r\n                  <Typography variant=\"h5\">B</Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography>\r\n                    {item.correctAnswer === \"B\" && <CheckIcon />}\r\n                    {item.answer === \"B\" && !item.correct && <CloseIcon />}\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow\r\n                className={\r\n                  item.correctAnswer === \"C\"\r\n                    ? \"right\"\r\n                    : item.answer === \"C\"\r\n                    ? \"wrong\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <TableCell className={classes.answerLabelCell}>\r\n                  <Typography variant=\"h5\">C</Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography>\r\n                    {item.correctAnswer === \"C\" && <CheckIcon />}\r\n                    {item.answer === \"C\" && !item.correct && <CloseIcon />}\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow\r\n                className={\r\n                  item.correctAnswer === \"D\"\r\n                    ? \"right\"\r\n                    : item.answer === \"D\"\r\n                    ? \"wrong\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <TableCell className={classes.answerLabelCell}>\r\n                  <Typography variant=\"h5\">D</Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography>\r\n                    {item.correctAnswer === \"D\" && <CheckIcon />}\r\n                    {item.answer === \"D\" && !item.correct && <CloseIcon />}\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n          <Typography variant=\"subtitle2\">Time Taken</Typography>\r\n          <Typography variant=\"h5\">\r\n            {moment\r\n              .utc(\r\n                moment.duration(item.timeInSeconds, \"seconds\").asMilliseconds()\r\n              )\r\n              .format(\"m:ss\")}\r\n          </Typography>\r\n          <br />\r\n          <Typography variant=\"subtitle2\" display=\"inline\">\r\n            Content & Skills\r\n          </Typography>\r\n          <ContentAndSkillsHelp />\r\n          <Grid container spacing={2}>\r\n            {item.skills.map((skill, index) => (\r\n              <Grid item key={`${item.number}-${index}`}>\r\n                <Tooltip\r\n                  title={\r\n                    <Typography variant=\"subtitle2\">\r\n                      {skill.description}\r\n                    </Typography>\r\n                  }\r\n                >\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    className={classes.skill}\r\n                    style={{\r\n                      background: GetColor(skill.label).main,\r\n                      border: `1px solid ${GetColor(skill.label).darker}`,\r\n                    }}\r\n                  >\r\n                    {skill.label}\r\n                  </Typography>\r\n                </Tooltip>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <br />\r\n          <Typography variant=\"subtitle2\" display=\"inline\">\r\n            Annotation Visibility:\r\n          </Typography>\r\n          <IconButton onClick={toggleAnnotationVisibility}>\r\n            {annotationVisibility && <VisibilityIcon />}\r\n            {!annotationVisibility && <VisibilityOffIcon />}\r\n          </IconButton>\r\n        </Box>\r\n      </Fade>\r\n    </Box>\r\n  );\r\n};\r\n","import { Box, Dialog, makeStyles } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { ItemResults } from \"../../Data/Items\";\r\nimport { ReviewHeader } from \"./ReviewHeader\";\r\nimport { ContentContainer } from \"./ContentContainer\";\r\nimport { InfoContainer } from \"./InfoContainer\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    top: \"5% !important\",\r\n    left: \"5% !important\",\r\n    bottom: \"5% !important\",\r\n    right: \"5% !important\",\r\n  },\r\n  fullSize: {\r\n    height: \"100%\",\r\n    maxHeight: \"100%\",\r\n    width: \"100%\",\r\n    maxWidth: \"100%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  outerContainer: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  innerContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\n\r\nexport interface ReviewDialogProperties {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  itemNumber: number | undefined;\r\n  section: string;\r\n  canNext: boolean;\r\n  canPrevious: boolean;\r\n  onNext: () => void;\r\n  onPrevious: () => void;\r\n  onFirst: () => void;\r\n  onLast: () => void;\r\n  title: string;\r\n}\r\n\r\nexport const ReviewDialog = ({\r\n  open,\r\n  onClose,\r\n  itemNumber,\r\n  section,\r\n  canNext,\r\n  canPrevious,\r\n  onNext,\r\n  onPrevious,\r\n  onFirst,\r\n  onLast,\r\n  title,\r\n}: ReviewDialogProperties) => {\r\n  const classes = useStyles();\r\n\r\n  const item = ItemResults.filter(\r\n    (i) => i.section === section && i.number === itemNumber\r\n  )[0];\r\n\r\n  const [direction, setDirection] = useState<\r\n    \"forward\" | \"backward\" | undefined\r\n  >();\r\n\r\n  const [annotations, setAnnotations] = useState<boolean>(false);\r\n\r\n  const goLast = () => {\r\n    setDirection(\"forward\");\r\n    onLast();\r\n  };\r\n\r\n  const goForward = () => {\r\n    setDirection(\"forward\");\r\n    onNext();\r\n  };\r\n\r\n  const goBackward = () => {\r\n    setDirection(\"backward\");\r\n    onPrevious();\r\n  };\r\n\r\n  const goFirst = () => {\r\n    setDirection(\"backward\");\r\n    onFirst();\r\n  };\r\n\r\n  const close = () => {\r\n    setDirection(undefined);\r\n    onClose();\r\n  };\r\n\r\n  if (!item) return <></>;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      className={classes.root}\r\n      classes={{ container: classes.fullSize, paper: classes.fullSize }}\r\n    >\r\n      <ReviewHeader\r\n        title={title}\r\n        close={close}\r\n        canNext={canNext}\r\n        canPrevious={canPrevious}\r\n        goFirst={goFirst}\r\n        goBackward={goBackward}\r\n        goForward={goForward}\r\n        goLast={goLast}\r\n      />\r\n      <Box className={classes.outerContainer}>\r\n        <Box className={classes.innerContainer}>\r\n          <ContentContainer\r\n            key={item.number}\r\n            item={item}\r\n            direction={direction}\r\n            annotationVisibility={annotations}\r\n          />\r\n          <InfoContainer\r\n            item={item}\r\n            annotationVisibility={annotations}\r\n            toggleAnnotationVisibility={() => setAnnotations(!annotations)}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n","import {\r\n  IconButton,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport FlagOutlinedIcon from \"@material-ui/icons/FlagOutlined\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport moment from \"moment\";\r\nimport { ItemData, ItemResults } from \"../Data/Items\";\r\nimport { ReviewDialog } from \"./ItemReview/ReviewDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  centered: {\r\n    textAlign: \"center\",\r\n  },\r\n  smallColumn: {\r\n    width: \"5%\",\r\n  },\r\n});\r\n\r\nexport interface ItemsTableProperties {\r\n  sectionId: string;\r\n}\r\n\r\nexport const ItemsTable = ({ sectionId }: ItemsTableProperties) => {\r\n  const classes = useStyles();\r\n  const itemData = ItemResults.filter((i) => i.section === sectionId);\r\n\r\n  const [reviewItem, setReviewItem] = useState<number | undefined>();\r\n  const [items, setItems] = useState<Array<ItemData>>(itemData);\r\n  const [correctnessFilter, setCorrectnessFilter] = useState<string>(\"none\");\r\n  const [flaggedFilter, setFlaggedFilter] = useState<string>(\"none\");\r\n\r\n  const nextCorrectnessFilter = () => {\r\n    let newFilter =\r\n      correctnessFilter === \"incorrect\"\r\n        ? \"correct\"\r\n        : correctnessFilter === \"correct\"\r\n        ? \"none\"\r\n        : \"incorrect\";\r\n    setCorrectnessFilter(newFilter);\r\n    setItems(getItemData(newFilter, flaggedFilter));\r\n  };\r\n\r\n  const nextFlaggedFilter = () => {\r\n    let newFilter =\r\n      flaggedFilter === \"flagged\"\r\n        ? \"unflagged\"\r\n        : flaggedFilter === \"unflagged\"\r\n        ? \"none\"\r\n        : \"flagged\";\r\n    setFlaggedFilter(newFilter);\r\n    setItems(getItemData(correctnessFilter, newFilter));\r\n  };\r\n\r\n  const getItemData = (correctnessFilter: string, flaggedFilter: string) =>\r\n    itemData\r\n      .filter(\r\n        (item) =>\r\n          correctnessFilter === \"none\" ||\r\n          (correctnessFilter === \"correct\" && item.correct) ||\r\n          (correctnessFilter === \"incorrect\" && !item.correct)\r\n      )\r\n      .filter(\r\n        (item) =>\r\n          flaggedFilter === \"none\" ||\r\n          (flaggedFilter === \"flagged\" && item.flagged) ||\r\n          (flaggedFilter === \"unflagged\" && !item.flagged)\r\n      );\r\n\r\n  return (\r\n    <>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={`${classes.smallColumn} ${classes.centered}`}>\r\n              <Typography>#</Typography>\r\n            </TableCell>\r\n            <TableCell className={classes.centered}>\r\n              <IconButton onClick={nextCorrectnessFilter}>\r\n                {correctnessFilter === \"none\" && <FilterListIcon />}\r\n                {correctnessFilter === \"correct\" && <CheckCircleIcon />}\r\n                {correctnessFilter === \"incorrect\" && <CancelIcon />}\r\n              </IconButton>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography>Preview</Typography>\r\n            </TableCell>\r\n            <TableCell className={`${classes.smallColumn} ${classes.centered}`}>\r\n              <Typography>Time</Typography>\r\n            </TableCell>\r\n            <TableCell className={`${classes.smallColumn} ${classes.centered}`}>\r\n              <IconButton onClick={nextFlaggedFilter}>\r\n                {flaggedFilter === \"none\" && <FilterListIcon />}\r\n                {flaggedFilter === \"flagged\" && <FlagIcon />}\r\n                {flaggedFilter === \"unflagged\" && <FlagOutlinedIcon />}\r\n              </IconButton>\r\n            </TableCell>\r\n            <TableCell className={`${classes.smallColumn} ${classes.centered}`}>\r\n              <IconButton onClick={() => items.length > 0 && setReviewItem(0)}>\r\n                <VisibilityIcon />\r\n              </IconButton>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {items.map((item, index) => (\r\n            <TableRow key={item.number}>\r\n              <TableCell className={classes.centered}>\r\n                <Typography>{item.number}</Typography>\r\n              </TableCell>\r\n              <TableCell className={classes.centered}>\r\n                {item.correct ? <CheckIcon /> : <ClearIcon />}\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography>{item.preview}</Typography>\r\n              </TableCell>\r\n              <TableCell className={classes.centered}>\r\n                <Typography>\r\n                  {moment\r\n                    .utc(\r\n                      moment\r\n                        .duration(item.timeInSeconds, \"seconds\")\r\n                        .asMilliseconds()\r\n                    )\r\n                    .format(\"m:ss\")}\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell className={classes.centered}>\r\n                {item.flagged && <FlagIcon />}\r\n              </TableCell>\r\n              <TableCell className={classes.centered}>\r\n                <IconButton onClick={() => setReviewItem(index)}>\r\n                  <VisibilityIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <ReviewDialog\r\n        open={reviewItem !== undefined}\r\n        onClose={() => setReviewItem(undefined)}\r\n        section={sectionId}\r\n        itemNumber={items[reviewItem || 0]?.number}\r\n        canNext={(reviewItem || 0) < items.length - 1}\r\n        canPrevious={(reviewItem || 0) >= 1}\r\n        onNext={() => setReviewItem((reviewItem || 0) + 1)}\r\n        onPrevious={() => setReviewItem((reviewItem || 0) - 1)}\r\n        onFirst={() => setReviewItem(0)}\r\n        onLast={() => setReviewItem(items.length - 1)}\r\n        title={\r\n          items.length === itemData.length\r\n            ? `Item ${(reviewItem || 0) + 1} of ${items.length}`\r\n            : `${(reviewItem || 0) + 1} of ${items.length} (Item ${\r\n                items[reviewItem || 0]?.number\r\n              })`\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { FormattedParagraph, FormattedSentence } from \"./Text\";\r\n\r\nexport class ItemHighlight {\r\n  constructor(\r\n    public number: number,\r\n    public section: string,\r\n    public highlights: Array<string>\r\n  ) {}\r\n}\r\n\r\nconst createHighlight = (maxItemNumber: number, section: string) => {\r\n  const paragraphRange = [1, 2];\r\n  const sentenceRange = [2, 5];\r\n  const highlightsRange = [1, 3];\r\n\r\n  const generateParagraphHighlight = () =>\r\n    FormattedParagraph(\r\n      Math.max(paragraphRange[0], Math.ceil(Math.random() * paragraphRange[1]))\r\n    );\r\n  const generateSentenceHighlight = () =>\r\n    FormattedSentence(\r\n      Math.max(sentenceRange[0], Math.ceil(Math.random() * sentenceRange[1]))\r\n    );\r\n  const generateHighlight = () =>\r\n    Math.random() >= 0.5\r\n      ? generateParagraphHighlight()\r\n      : generateSentenceHighlight();\r\n  const generateHighlights = () =>\r\n    [\r\n      ...new Array(\r\n        highlightsRange[0] + Math.floor(Math.random() * highlightsRange[1])\r\n      ),\r\n    ].map(generateHighlight);\r\n\r\n  let item = Math.ceil(Math.random() * (maxItemNumber - 1));\r\n\r\n  return new ItemHighlight(item, section, generateHighlights());\r\n};\r\n\r\nconst createItemHighlights = (\r\n  number: number,\r\n  maxItem: number,\r\n  section: string\r\n) =>\r\n  [...new Array(number)]\r\n    .map(() => createHighlight(maxItem, section))\r\n    .sort((a, b) => a.number - b.number);\r\n\r\nexport const CandidateHighlights: Array<ItemHighlight> = [\r\n  ...createItemHighlights(5, 59, \"CPFBS\"),\r\n  ...createItemHighlights(2, 53, \"CARS\"),\r\n  ...createItemHighlights(7, 59, \"BBFLS\"),\r\n  ...createItemHighlights(4, 59, \"PSBFB\"),\r\n];\r\n","import {\r\n  Box,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { CandidateHighlights } from \"../Data/Highlights\";\r\nimport { ReviewDialog } from \"./ItemReview/ReviewDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  itemHighlight: {\r\n    padding: 15,\r\n    marginBottom: 15,\r\n  },\r\n  itemHighlightHeader: {\r\n    margin: 5,\r\n  },\r\n  highlightContent: {\r\n    borderLeft: \"3px solid #F8B332\",\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n    marginLeft: 25,\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n  },\r\n  previewButton: {\r\n    float: \"right\",\r\n  },\r\n});\r\n\r\nexport interface HighlightsProperties {\r\n  sectionId: string;\r\n}\r\n\r\nexport const Highlights = ({ sectionId }: HighlightsProperties) => {\r\n  const classes = useStyles();\r\n  const itemHighlights = CandidateHighlights.filter(\r\n    (h) => h.section === sectionId\r\n  );\r\n\r\n  const [reviewIndex, setReviewIndex] = useState<number | undefined>();\r\n\r\n  return (\r\n    <>\r\n      {itemHighlights.map((itemHighlight, index) => (\r\n        <Paper\r\n          elevation={3}\r\n          key={`item-${itemHighlight.number}`}\r\n          className={classes.itemHighlight}\r\n        >\r\n          <Typography\r\n            display=\"inline\"\r\n            variant=\"h6\"\r\n            className={classes.itemHighlightHeader}\r\n          >\r\n            Item {itemHighlight.number}\r\n          </Typography>\r\n          <IconButton\r\n            className={classes.previewButton}\r\n            onClick={() => setReviewIndex(index)}\r\n          >\r\n            <VisibilityIcon />\r\n          </IconButton>\r\n          {itemHighlight.highlights.map((highlight, index) => (\r\n            <Box key={index} className={classes.highlightContent}>\r\n              <blockquote\r\n                dangerouslySetInnerHTML={{ __html: highlight }}\r\n              ></blockquote>\r\n            </Box>\r\n          ))}\r\n        </Paper>\r\n      ))}\r\n      <ReviewDialog\r\n        open={reviewIndex !== undefined}\r\n        onClose={() => setReviewIndex(undefined)}\r\n        section={sectionId}\r\n        itemNumber={itemHighlights[reviewIndex || 0].number}\r\n        canNext={(reviewIndex || 0) < itemHighlights.length - 1}\r\n        canPrevious={(reviewIndex || 0) > 0}\r\n        onNext={() => setReviewIndex((reviewIndex || 0) + 1)}\r\n        onPrevious={() => setReviewIndex((reviewIndex || 0) - 1)}\r\n        onFirst={() => setReviewIndex(0)}\r\n        onLast={() => setReviewIndex(itemHighlights.length - 1)}\r\n        title={`Highlight ${(reviewIndex || 0) + 1} of ${\r\n          itemHighlights.length\r\n        } (Item ${itemHighlights[reviewIndex || 0].number})`}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SkillData } from \"../Data/Skills\";\r\n\r\nexport interface ContentAreaBarGraphProperties {\r\n  width: number;\r\n  height: number;\r\n  margin?: { top: number; left: number; bottom: number; right: number };\r\n  segmentMargin?: { left: number; right: number };\r\n  skills: Array<SkillData>;\r\n}\r\n\r\nexport const ContentAreaBarGraph = ({\r\n  width,\r\n  height,\r\n  margin = { top: 10, left: 10, bottom: 50, right: 10 },\r\n  segmentMargin = { left: 5, right: 5 },\r\n  skills,\r\n}: ContentAreaBarGraphProperties) => {\r\n  const contentHeight = height - (margin.top + margin.bottom);\r\n  const contentWidth = width - (margin.left + margin.right);\r\n\r\n  const max = Math.max(...skills.map((skill) => skill.items));\r\n  const segmentWidth = contentWidth / skills.length;\r\n  const segmentContentWidth =\r\n    segmentWidth - (segmentMargin.left + segmentMargin.right);\r\n  const segmentHeight = (val: number) => (contentHeight / max) * val;\r\n\r\n  return (\r\n    <svg\r\n      viewBox={`0 0 ${width} ${height}`}\r\n      width={width}\r\n      height={height}\r\n      style={{ userSelect: \"none\" }}\r\n    >\r\n      <g transform={`translate(${margin.left},${margin.top})`}>\r\n        {skills.map((skill, index) => (\r\n          <g key={index}>\r\n            <rect\r\n              fill=\"lightyellow\"\r\n              stroke=\"black\"\r\n              strokeDasharray={4}\r\n              y={contentHeight - segmentHeight(skill.items)}\r\n              x={segmentWidth * index + segmentMargin.left}\r\n              width={segmentContentWidth}\r\n              height={segmentHeight(skill.items)}\r\n            />\r\n            <rect\r\n              fill=\"#F8B332\"\r\n              stroke=\"black\"\r\n              strokeWidth={2}\r\n              y={contentHeight - segmentHeight(skill.correct)}\r\n              x={segmentWidth * index + segmentMargin.left}\r\n              width={segmentContentWidth}\r\n              height={segmentHeight(skill.correct)}\r\n            />\r\n            <text\r\n              x={\r\n                segmentWidth * index +\r\n                segmentMargin.left +\r\n                segmentContentWidth / 2\r\n              }\r\n              y={contentHeight + 15}\r\n              textAnchor=\"middle\"\r\n            >\r\n              {skill.skill.label}\r\n            </text>\r\n          </g>\r\n        ))}\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","import {\r\n  IconButton,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport React from \"react\";\r\nimport { SkillData } from \"../Data/Skills\";\r\n\r\nconst useStyles = makeStyles({\r\n  acronym: {\r\n    width: \"10%\",\r\n  },\r\n  description: {},\r\n  items: {\r\n    textAlign: \"center\",\r\n    width: \"10%\",\r\n  },\r\n  correct: {\r\n    textAlign: \"center\",\r\n    width: \"10%\",\r\n  },\r\n  centered: {\r\n    textAlign: \"center\",\r\n  },\r\n  review: {\r\n    width: \"5%\",\r\n  },\r\n});\r\n\r\nexport interface SkillsBreakdownTableProperties {\r\n  skills: Array<SkillData>;\r\n  onReview: (start: number, number: number) => void;\r\n}\r\n\r\nexport const SkillsBreakdownTable = ({\r\n  skills,\r\n  onReview,\r\n}: SkillsBreakdownTableProperties) => {\r\n  const classes = useStyles();\r\n\r\n  const getRangeStart = (skillIndex: number) =>\r\n    skills.reduce(\r\n      (total, skill, index) =>\r\n        index < skillIndex ? total + skill.items : total,\r\n      0\r\n    );\r\n\r\n  return (\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell className={classes.acronym}>\r\n            <Typography>Acronym</Typography>\r\n          </TableCell>\r\n          <TableCell className={classes.description}>\r\n            <Typography>Description</Typography>\r\n          </TableCell>\r\n          <TableCell className={classes.items}>\r\n            <Typography>Items</Typography>\r\n          </TableCell>\r\n          <TableCell className={classes.correct}>\r\n            <Typography>Correct</Typography>\r\n          </TableCell>\r\n          <TableCell className={classes.review}></TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {skills.map((skill, index) => (\r\n          <TableRow key={index}>\r\n            <TableCell>\r\n              <Typography>{skill.skill.label}</Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography>{skill.skill.description}</Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography className={classes.centered}>\r\n                {skill.items}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography className={classes.centered}>\r\n                {skill.correct}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell className={classes.centered}>\r\n              <IconButton\r\n                onClick={() => onReview(getRangeStart(index), skill.items)}\r\n              >\r\n                <VisibilityIcon />\r\n              </IconButton>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n","import { Box, IconButton, makeStyles, Typography } from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport React, { useState } from \"react\";\r\nimport { ItemResults } from \"../Data/Items\";\r\nimport { SkillsGroups } from \"../Data/Skills\";\r\nimport { ContentAreaBarGraph } from \"../Graphics/ContentAreaBarGraph\";\r\nimport { ReviewDialog } from \"./ItemReview/ReviewDialog\";\r\nimport { SkillsBreakdownTable } from \"./SkillsBreakdownTable\";\r\n\r\nconst useStyles = makeStyles({\r\n  verticalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  horizontalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  skillsGroup: {\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n  },\r\n  graphContainer: {\r\n    marginTop: \"auto\",\r\n    marginBottom: \"auto\",\r\n  },\r\n  overallLabel: {\r\n    marginTop: 30,\r\n    paddingBottom: 10,\r\n    borderBottom: \"1px solid lightgray\",\r\n  },\r\n  mainLabel: {\r\n    marginTop: \"auto\",\r\n    marginBottom: \"auto\",\r\n    marginLeft: 30,\r\n    marginRight: 30,\r\n  },\r\n});\r\n\r\nexport interface SkillsBreakdownProperties {\r\n  sectionId: string;\r\n}\r\n\r\nexport const SkillsBreakdown = ({ sectionId }: SkillsBreakdownProperties) => {\r\n  const classes = useStyles();\r\n  const [reviewIndexStart, setReviewIndexStart] = useState(0);\r\n  const [reviewIndexEnd, setReviewIndexEnd] = useState(0);\r\n  const [reviewIndex, setReviewIndex] = useState<number | undefined>();\r\n\r\n  const items = ItemResults.filter((i) => i.section === sectionId);\r\n\r\n  const review = (startIndex: number, numberOfItems: number) => {\r\n    setReviewIndexStart(startIndex);\r\n    setReviewIndexEnd(startIndex + numberOfItems - 1);\r\n    setReviewIndex(startIndex);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {SkillsGroups.map((group, index) => (\r\n        <Box\r\n          key={index}\r\n          className={`${classes.verticalStack} ${classes.skillsGroup}`}\r\n        >\r\n          <Box className={`${classes.horizontalStack} ${classes.overallLabel}`}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              display=\"inline\"\r\n              className={classes.mainLabel}\r\n            >\r\n              {group.label}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" display=\"inline\">\r\n              {group.description}\r\n            </Typography>\r\n            <IconButton onClick={() => review(0, group.totalItems())}>\r\n              <VisibilityIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <Box className={classes.horizontalStack}>\r\n            <Box\r\n              className={`${classes.verticalStack} ${classes.graphContainer}`}\r\n            >\r\n              <ContentAreaBarGraph\r\n                width={300}\r\n                height={300}\r\n                margin={{ top: 50, left: 10, bottom: 50, right: 10 }}\r\n                skills={group.skills}\r\n              />\r\n            </Box>\r\n            <SkillsBreakdownTable skills={group.skills} onReview={review} />\r\n          </Box>\r\n        </Box>\r\n      ))}\r\n      <ReviewDialog\r\n        open={reviewIndex !== undefined}\r\n        onClose={() => setReviewIndex(undefined)}\r\n        section={sectionId}\r\n        itemNumber={items[reviewIndex || 0].number}\r\n        canNext={(reviewIndex || 0) < reviewIndexEnd}\r\n        canPrevious={(reviewIndex || 0) > reviewIndexStart}\r\n        onNext={() => setReviewIndex((reviewIndex || 0) + 1)}\r\n        onPrevious={() => setReviewIndex((reviewIndex || 0) - 1)}\r\n        onFirst={() => setReviewIndex(reviewIndexStart)}\r\n        onLast={() => setReviewIndex(reviewIndexEnd)}\r\n        title={`Item ${(reviewIndex || 0) + 1 - reviewIndexStart} of ${\r\n          reviewIndexEnd - reviewIndexStart + 1\r\n        } (Item ${items[reviewIndex || 0].number})`}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Slide,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport { OverallDataKey } from \"../Data/Overall\";\r\nimport { SectionData } from \"../Data/Sections\";\r\nimport { ScoreDistribution } from \"../Graphics/ScoreDistribution\";\r\nimport { ItemsTable } from \"./ItemsTable\";\r\nimport { Highlights } from \"./Highlights\";\r\nimport { SkillsBreakdown } from \"./SkillsBreakdown\";\r\nimport { ScaledScoreHelp } from \"../Help/ScaledScore\";\r\nimport { PercentileRankHelp } from \"../Help/PercentileRanks\";\r\n\r\nconst useStyles = makeStyles({\r\n  verticalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  horizontalStack: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  backNavigation: {\r\n    marginTop: -50,\r\n  },\r\n  detailCard: {\r\n    textAlign: \"center\",\r\n    verticalAlign: \"middle\",\r\n    margin: 10,\r\n    minWidth: 210,\r\n  },\r\n  scoreCurve: {\r\n    \"& svg\": {\r\n      margin: \"auto\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface SectionDetailsProperties {\r\n  onNavigate: (to: string) => void;\r\n  section: SectionData;\r\n}\r\n\r\nexport const SectionDetails = ({\r\n  onNavigate,\r\n  section,\r\n}: SectionDetailsProperties) => {\r\n  const classes = useStyles();\r\n  const [tab, setTab] = React.useState(0);\r\n\r\n  const onTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setTab(newValue);\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => onNavigate(OverallDataKey)}\r\n        className={classes.backNavigation}\r\n      >\r\n        <ArrowBackIcon />\r\n        <Typography>Back To Summary</Typography>\r\n      </Button>\r\n      <Box className={classes.verticalStack}>\r\n        <Box className={classes.horizontalStack}>\r\n          <Slide direction=\"right\" in={true} timeout={500}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">{section.scaledScore}</Typography>\r\n                    <Typography variant=\"subtitle2\" display=\"inline\">\r\n                      Scaled Score\r\n                    </Typography>\r\n                    <ScaledScoreHelp forSection={true} />\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">{section.percentage}%</Typography>\r\n                    <Typography variant=\"subtitle2\" display=\"inline\">\r\n                      Percentile Rank\r\n                    </Typography>\r\n                    <PercentileRankHelp />\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">\r\n                      {section.questionsCorrect} of {section.totalQuestions}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      Questions Correct\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">{section.incomplete}</Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      Questions Incomplete\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">\r\n                      {section.flaggedCorrect}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      <FlagIcon /> Correct\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item>\r\n                <Card variant=\"outlined\" className={classes.detailCard}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">\r\n                      {section.flaggedIncorrect}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      <FlagIcon /> Incorrect\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Slide>\r\n          <Box className={`${classes.scoreCurve} ${classes.verticalStack}`}>\r\n            <ScoreDistribution\r\n              height={250}\r\n              width={500}\r\n              margin={{ top: 10, left: 10, bottom: 20, right: 10 }}\r\n              leftLabel={section.minScaledScore.toString()}\r\n              rightLabel={section.maxScaledScore.toString()}\r\n              score={section.scaledScore.toString()}\r\n              percentage={section.percentage}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Tabs value={tab} onChange={onTabChange}>\r\n          <Tab label=\"Question Review\" />\r\n          <Tab label=\"Highlights\" />\r\n          <Tab label=\"Content & Skills Breakdown\" />\r\n        </Tabs>\r\n        {tab === 0 && (\r\n          <Slide direction=\"up\" in={true} timeout={500}>\r\n            <Box>\r\n              <ItemsTable sectionId={section.id} />\r\n            </Box>\r\n          </Slide>\r\n        )}\r\n        {tab === 1 && (\r\n          <Slide direction=\"up\" in={true} timeout={500}>\r\n            <Box>\r\n              <Highlights sectionId={section.id} />\r\n            </Box>\r\n          </Slide>\r\n        )}\r\n        {tab === 2 && (\r\n          <Slide direction=\"up\" in={true} timeout={500}>\r\n            <Box>\r\n              <SkillsBreakdown sectionId={section.id} />\r\n            </Box>\r\n          </Slide>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport { Box, Container, Slide } from \"@material-ui/core\";\n\nimport { ReportHeader } from \"./Header/ReportHeader\";\nimport { Summary } from \"./Summary/Summary\";\nimport { SectionDetails } from \"./Section/SectionDetails\";\nimport { OverallDataKey } from \"./Data/Overall\";\nimport { SectionResults } from \"./Data/Sections\";\n\nexport const App = () => {\n  const [viewing, setViewing] = useState(OverallDataKey);\n\n  return (\n    <>\n      <ReportHeader onNavigate={(to: string) => setViewing(to)} />\n      <Container>\n        {viewing === OverallDataKey && (\n          <Slide direction=\"right\" in={true}>\n            <Box>\n              <Summary onNavigate={(to: string) => setViewing(to)} />\n            </Box>\n          </Slide>\n        )}\n        {SectionResults.map((section) => (\n          <Box key={section.id}>\n            {viewing === section.id && (\n              <Slide direction=\"left\" in={true}>\n                <Box>\n                  <SectionDetails\n                    onNavigate={(to: string) => setViewing(to)}\n                    section={section}\n                  />\n                </Box>\n              </Slide>\n            )}\n          </Box>\n        ))}\n      </Container>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}